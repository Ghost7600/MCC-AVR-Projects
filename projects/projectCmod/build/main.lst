GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s 			page 1


   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "D:\\IFSC\\projects\\projectC" "main.c"
  11               		.section	.text.main,"ax",@progbits
  12               	.global	main
  14               	main:
  15               	.LFB6:
  16               		.file 1 "main.c"
   1:main.c        **** #define F_CPU 16000000UL
   2:main.c        **** 
   3:main.c        **** 
   4:main.c        **** #include <avr/io.h>
   5:main.c        **** #include <util/delay.h>
   6:main.c        **** #include "sevenSegments.h"
   7:main.c        **** 
   8:main.c        **** #define BTNDDR   DDRB
   9:main.c        **** #define BTNPORT  PORTB
  10:main.c        **** #define BTNPIN   PINB
  11:main.c        **** #define BTNBIT   PB2
  12:main.c        **** 
  13:main.c        **** #define clrbit(auxreg,auxbit)   ((auxreg)&= (~(1<<(auxbit))))
  14:main.c        **** #define setbit(auxreg,auxbit)   ((auxreg) |= (1 << (auxbit)))
  15:main.c        **** #define cplbit(auxreg,auxbit)   ((auxreg) ^= (1 << (auxbit)))
  16:main.c        **** #define isbitset(auxreg,auxbit) (((auxreg) >> (auxbit))& 0x1)
  17:main.c        **** #define isbitclr(auxreg,auxbit) (~(((auxreg) >> (auxbit))& 0x1))
  18:main.c        **** #define waitWhileClr(auxreg,auxbit)   do{}while(isbitclr(auxreg,auxbit))
  19:main.c        **** #define waitWhileSet(auxreg,auxbit)   do{}while(isbitset(auxreg,auxbit))
  20:main.c        **** 
  21:main.c        **** int main()
  22:main.c        **** 
  23:main.c        **** 
  24:main.c        **** {
  17               		.loc 1 24 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  25:main.c        ****     uint8_t counter = 0;
  23               		.loc 1 25 5 view .LVU1
  24               	.LVL0:
  26:main.c        ****     uint8_t segments = 0;
  25               		.loc 1 26 5 view .LVU2
  27:main.c        ****     uint8_t direction = 0; // 0 = up, 1 = down
  26               		.loc 1 27 5 view .LVU3
  28:main.c        **** 
  29:main.c        ****     //setup
  30:main.c        ****     UCSR0B = 0;
  27               		.loc 1 30 5 view .LVU4
  28               		.loc 1 30 12 is_stmt 0 view .LVU5
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s 			page 2


  29 0000 1092 C100 		sts 193,__zero_reg__
  31:main.c        ****     DDRD = 0xff;
  30               		.loc 1 31 5 is_stmt 1 view .LVU6
  31               		.loc 1 31 10 is_stmt 0 view .LVU7
  32 0004 8FEF      		ldi r24,lo8(-1)
  33 0006 8AB9      		out 0xa,r24
  32:main.c        ****     PORTD = 0xFF;
  34               		.loc 1 32 5 is_stmt 1 view .LVU8
  35               		.loc 1 32 11 is_stmt 0 view .LVU9
  36 0008 8BB9      		out 0xb,r24
  33:main.c        ****     clrbit(BTNDDR, BTNBIT);
  37               		.loc 1 33 5 is_stmt 1 view .LVU10
  38 000a 84B1      		in r24,0x4
  39 000c 8B7F      		andi r24,lo8(-5)
  40 000e 84B9      		out 0x4,r24
  34:main.c        ****     setbit(BTNPORT, BTNBIT);
  41               		.loc 1 34 5 view .LVU11
  42 0010 85B1      		in r24,0x5
  43 0012 8460      		ori r24,lo8(4)
  44 0014 85B9      		out 0x5,r24
  35:main.c        **** 
  36:main.c        **** 
  37:main.c        ****     while(1) {
  45               		.loc 1 37 5 view .LVU12
  38:main.c        ****         PORTD = hex2SevenSegments(counter, DISPLAY_COMMON_ANODE, 0);
  46               		.loc 1 38 9 view .LVU13
  47               		.loc 1 38 17 is_stmt 0 view .LVU14
  48 0016 40E0      		ldi r20,0
  49 0018 60E0      		ldi r22,0
  50 001a 70E0      		ldi r23,0
  51 001c 80E0      		ldi r24,0
  52 001e 0E94 0000 		call hex2SevenSegments
  53               	.LVL1:
  54               		.loc 1 38 15 view .LVU15
  55 0022 8BB9      		out 0xb,r24
  39:main.c        ****         if(isbitclr(BTNPIN, BTNBIT)) {
  56               		.loc 1 39 9 is_stmt 1 view .LVU16
  57               		.loc 1 39 12 is_stmt 0 view .LVU17
  58 0024 83B1      		in r24,0x3
  40:main.c        ****             _delay_ms(5);
  59               		.loc 1 40 13 is_stmt 1 view .LVU18
  60               	.LVL2:
  61               	.LBB6:
  62               	.LBI6:
  63               		.file 2 "d:\\ifsc\\vscodeleandro\\ex\\toolchains\\avr-gcc\\avr\\include\\util\\delay.h"
   1:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    All rights reserved.
   5:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
   6:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
   9:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  12:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s 			page 3


  13:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      distribution.
  16:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  17:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  21:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  33:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /* $Id$ */
  34:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  35:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  38:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #  endif
  42:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  44:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #include <inttypes.h>
  45:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #include <math.h>
  47:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  48:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /** \file */
  49:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \code
  51:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     #include <util/delay.h>
  54:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \endcode
  55:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  56:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     used.
  60:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  61:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s 			page 4


  70:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     routines linked into the application.
  78:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  79:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  83:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** */
  84:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  85:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
  89:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  90:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef F_CPU
  91:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /** \ingroup util_delay
  94:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \def F_CPU
  95:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  97:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 103:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     integer value.
 107:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****  */
 108:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 110:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 111:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 114:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 115:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #  include <math.h>
 119:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 120:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 121:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /**
 122:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    \ingroup util_delay
 123:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 124:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 126:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s 			page 5


 127:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 129:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 131:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 137:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 142:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    microseconds of delay.
 146:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 147:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    respectively.
 151:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 152:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    \note
 153:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 154:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    not available to the compiler then.
 163:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 164:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****  */
 165:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** void
 166:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** _delay_ms(double __ms)
  64               		.loc 2 166 1 view .LVU19
  65               	.LBB7:
 167:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** {
 168:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	double __tmp ;
  66               		.loc 2 168 2 view .LVU20
 169:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
  67               		.loc 2 172 2 view .LVU21
 173:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
  68               		.loc 2 173 2 view .LVU22
 174:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
  69               		.loc 2 174 2 view .LVU23
 175:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 176:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s 			page 6


 178:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 179:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 182:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	#else
 183:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 		//round up by default
 184:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
  70               		.loc 2 184 3 view .LVU24
 185:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	#endif
 186:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 187:d:\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
  71               		.loc 2 187 2 view .LVU25
  72 0026 8FE1      		ldi r24,lo8(19999)
  73 0028 9EE4      		ldi r25,hi8(19999)
  74 002a 0197      	1:	sbiw r24,1
  75 002c 01F4      		brne 1b
  76 002e 00C0      		rjmp .
  77 0030 0000      		nop
  78               	.LVL3:
  79               		.loc 2 187 2 is_stmt 0 view .LVU26
  80               	.LBE7:
  81               	.LBE6:
  41:main.c        ****             direction = !direction;
  82               		.loc 1 41 13 is_stmt 1 view .LVU27
  83               	.L2:
  42:main.c        ****             waitWhileClr(BTNPIN, BTNBIT);
  84               		.loc 1 42 13 discriminator 1 view .LVU28
  85               		.loc 1 42 13 discriminator 1 view .LVU29
  86               		.loc 1 42 13 discriminator 1 view .LVU30
  87 0032 83B1      		in r24,0x3
  88 0034 00C0      		rjmp .L2
  89               		.cfi_endproc
  90               	.LFE6:
  92               		.text
  93               	.Letext0:
  94               		.file 3 "d:\\ifsc\\vscodeleandro\\ex\\toolchains\\avr-gcc\\avr\\include\\stdint.h"
  95               		.file 4 "sevenSegments.h"
  96               		.file 5 "d:\\ifsc\\vscodeleandro\\ex\\toolchains\\avr-gcc\\avr\\include\\math.h"
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:2      *ABS*:0000003e __SP_H__
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:3      *ABS*:0000003d __SP_L__
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:4      *ABS*:0000003f __SREG__
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:6      *ABS*:00000001 __zero_reg__
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:14     .text.main:00000000 main
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:17     .text.main:00000000 .Loc.0
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:18     .text.main:00000000 L0
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:23     .text.main:00000000 .Loc.1
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:25     .text.main:00000000 .Loc.2
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:26     .text.main:00000000 .Loc.3
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:27     .text.main:00000000 .Loc.4
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:28     .text.main:00000000 .Loc.5
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:30     .text.main:00000004 .Loc.6
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:31     .text.main:00000004 .Loc.7
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:34     .text.main:00000008 .Loc.8
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:35     .text.main:00000008 .Loc.9
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:37     .text.main:0000000a .Loc.10
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:41     .text.main:00000010 .Loc.11
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:45     .text.main:00000016 .Loc.12
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:46     .text.main:00000016 .Loc.13
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:47     .text.main:00000016 .Loc.14
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:54     .text.main:00000022 .Loc.15
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:56     .text.main:00000024 .Loc.16
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:57     .text.main:00000024 .Loc.17
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:59     .text.main:00000026 .Loc.18
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:64     .text.main:00000026 .Loc.19
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:66     .text.main:00000026 .Loc.20
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:67     .text.main:00000026 .Loc.21
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:68     .text.main:00000026 .Loc.22
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:69     .text.main:00000026 .Loc.23
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:70     .text.main:00000026 .Loc.24
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:71     .text.main:00000026 .Loc.25
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:76     .text.main:00000030 L0
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:79     .text.main:00000032 .Loc.26
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:82     .text.main:00000032 .Loc.27
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:84     .text.main:00000032 .Loc.28
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:85     .text.main:00000032 .Loc.29
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:86     .text.main:00000032 .Loc.30
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:89     .text.main:00000036 L0
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:92     .text.main:00000036 L0
                     .debug_frame:00000000 L0
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:74     .text.main:0000002a .L11
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:83     .text.main:00000032 .L2
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:323    .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:744    .debug_rnglists:0000000c .LLRL4
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:751    .debug_line:00000000 .Ldebug_line0
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:15     .text.main:00000000 .LFB6
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:90     .text.main:00000036 .LFE6
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:671    .debug_loclists:00000010 .LLST0
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:666    .debug_loclists:0000000c .LVUS0
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:62     .text.main:00000026 .LBI6
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:61     .text.main:00000026 .LBB6
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:81     .text.main:00000032 .LBE6
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:690    .debug_loclists:00000024 .LLST1
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s 			page 8


C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:687    .debug_loclists:00000022 .LVUS1
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:702    .debug_loclists:00000034 .LLST2
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:699    .debug_loclists:00000032 .LVUS2
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:714    .debug_loclists:00000044 .LLST3
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:711    .debug_loclists:00000042 .LVUS3
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:53     .text.main:00000022 .LVL1
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:24     .text.main:00000000 .LVL0
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:60     .text.main:00000026 .LVL2
C:\Users\kenne\AppData\Local\Temp\ccr05IRc.s:98     .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
hex2SevenSegments
