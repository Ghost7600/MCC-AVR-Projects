GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 1


   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "F:\\IMPORTANTE\\Faculdade\\MCC\\MCC-AVR-Projects\\projects\\segundo_display_project" "mai
  11               		.section	.text._Z7getTickv,"ax",@progbits
  12               		.weak	_Z7getTickv
  14               	_Z7getTickv:
  15               	.LFB32:
  16               		.file 1 "funsape/globalDefines.hpp"
   1:funsape/globalDefines.hpp **** //!
   2:funsape/globalDefines.hpp **** //! \file           globalDefines.hpp
   3:funsape/globalDefines.hpp **** //! \brief          Global definitions file
   4:funsape/globalDefines.hpp **** //! \author         Leandro Schwarz (bladabuska+funsapeavr8lib@gmail.com)
   5:funsape/globalDefines.hpp **** //! \date           2023-04-05
   6:funsape/globalDefines.hpp **** //! \version        23.04
   7:funsape/globalDefines.hpp **** //! \copyright      license
   8:funsape/globalDefines.hpp **** //! \details        Global definitions file.
   9:funsape/globalDefines.hpp **** //! \todo           Todo list
  10:funsape/globalDefines.hpp **** //!
  11:funsape/globalDefines.hpp **** 
  12:funsape/globalDefines.hpp **** // =============================================================================
  13:funsape/globalDefines.hpp **** // Include guard (START)
  14:funsape/globalDefines.hpp **** // =============================================================================
  15:funsape/globalDefines.hpp **** 
  16:funsape/globalDefines.hpp **** #ifndef __GLOBAL_DEFINES_HPP
  17:funsape/globalDefines.hpp **** #define __GLOBAL_DEFINES_HPP                    2304
  18:funsape/globalDefines.hpp **** 
  19:funsape/globalDefines.hpp **** // =============================================================================
  20:funsape/globalDefines.hpp **** // Basic definitions
  21:funsape/globalDefines.hpp **** // =============================================================================
  22:funsape/globalDefines.hpp **** 
  23:funsape/globalDefines.hpp **** #ifndef F_CPU
  24:funsape/globalDefines.hpp **** #   define F_CPU    16000000UL
  25:funsape/globalDefines.hpp **** #endif
  26:funsape/globalDefines.hpp **** 
  27:funsape/globalDefines.hpp **** // =============================================================================
  28:funsape/globalDefines.hpp **** // Dependencies
  29:funsape/globalDefines.hpp **** // =============================================================================
  30:funsape/globalDefines.hpp **** 
  31:funsape/globalDefines.hpp **** //     //////////////////     AVR STANDARD LIBRARY     //////////////////     //
  32:funsape/globalDefines.hpp **** #include <avr/io.h>
  33:funsape/globalDefines.hpp **** #include <avr/interrupt.h>
  34:funsape/globalDefines.hpp **** #include <util/delay.h>
  35:funsape/globalDefines.hpp **** #include <util/atomic.h>
  36:funsape/globalDefines.hpp **** 
  37:funsape/globalDefines.hpp **** //     ///////////////////     STANDARD C LIBRARY     ///////////////////     //
  38:funsape/globalDefines.hpp **** #include <stddef.h>
  39:funsape/globalDefines.hpp **** #include <stdint.h>
  40:funsape/globalDefines.hpp **** #include <stdio.h>
  41:funsape/globalDefines.hpp **** #include <stdlib.h>
  42:funsape/globalDefines.hpp **** #include <string.h>
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 2


  43:funsape/globalDefines.hpp **** 
  44:funsape/globalDefines.hpp **** //     //////////////////     LIBRARY DEPENDENCIES     //////////////////     //
  45:funsape/globalDefines.hpp **** #include "pinout.hpp"
  46:funsape/globalDefines.hpp **** #if !defined(__PINOUT_HPP)
  47:funsape/globalDefines.hpp **** #   error "Header file (pinout.hpp) is corrupted!"
  48:funsape/globalDefines.hpp **** #elif __PINOUT_HPP != __GLOBAL_DEFINES_HPP
  49:funsape/globalDefines.hpp **** #   error "Version mismatch between header file and library dependency (pinout.hpp)!"
  50:funsape/globalDefines.hpp **** #endif
  51:funsape/globalDefines.hpp **** 
  52:funsape/globalDefines.hpp **** // =============================================================================
  53:funsape/globalDefines.hpp **** // Undefining previous definitions
  54:funsape/globalDefines.hpp **** // =============================================================================
  55:funsape/globalDefines.hpp **** 
  56:funsape/globalDefines.hpp **** // NONE
  57:funsape/globalDefines.hpp **** 
  58:funsape/globalDefines.hpp **** // =============================================================================
  59:funsape/globalDefines.hpp **** // Constant definitions
  60:funsape/globalDefines.hpp **** // =============================================================================
  61:funsape/globalDefines.hpp **** 
  62:funsape/globalDefines.hpp **** #define inlined                         inline __attribute__((always_inline))
  63:funsape/globalDefines.hpp **** #define weakened                        __attribute__((weak))
  64:funsape/globalDefines.hpp **** 
  65:funsape/globalDefines.hpp **** // =============================================================================
  66:funsape/globalDefines.hpp **** // New data types
  67:funsape/globalDefines.hpp **** // =============================================================================
  68:funsape/globalDefines.hpp **** 
  69:funsape/globalDefines.hpp **** //     ////////////////////     BASIC VARIABLES     /////////////////////     //
  70:funsape/globalDefines.hpp **** typedef bool                            bool_t;
  71:funsape/globalDefines.hpp **** typedef char                            char_t;
  72:funsape/globalDefines.hpp **** 
  73:funsape/globalDefines.hpp **** //     ///////////////////     CONSTANT VARIABLES    ////////////////////     //
  74:funsape/globalDefines.hpp **** typedef const bool_t                    cbool_t;
  75:funsape/globalDefines.hpp **** typedef const char_t                    cchar_t;
  76:funsape/globalDefines.hpp **** typedef const int8_t                    cint8_t;
  77:funsape/globalDefines.hpp **** typedef const int16_t                   cint16_t;
  78:funsape/globalDefines.hpp **** typedef const int32_t                   cint32_t;
  79:funsape/globalDefines.hpp **** typedef const int64_t                   cint64_t;
  80:funsape/globalDefines.hpp **** typedef const uint8_t                   cuint8_t;
  81:funsape/globalDefines.hpp **** typedef const uint16_t                  cuint16_t;
  82:funsape/globalDefines.hpp **** typedef const uint32_t                  cuint32_t;
  83:funsape/globalDefines.hpp **** typedef const uint64_t                  cuint64_t;
  84:funsape/globalDefines.hpp **** 
  85:funsape/globalDefines.hpp **** //     ///////////////////     VOLATILE VARIABLES    ////////////////////     //
  86:funsape/globalDefines.hpp **** typedef volatile bool_t                 vbool_t;
  87:funsape/globalDefines.hpp **** typedef volatile char_t                 vchar_t;
  88:funsape/globalDefines.hpp **** typedef volatile int8_t                 vint8_t;
  89:funsape/globalDefines.hpp **** typedef volatile int16_t                vint16_t;
  90:funsape/globalDefines.hpp **** typedef volatile int32_t                vint32_t;
  91:funsape/globalDefines.hpp **** typedef volatile int64_t                vint64_t;
  92:funsape/globalDefines.hpp **** typedef volatile uint8_t                vuint8_t;
  93:funsape/globalDefines.hpp **** typedef volatile uint16_t               vuint16_t;
  94:funsape/globalDefines.hpp **** typedef volatile uint32_t               vuint32_t;
  95:funsape/globalDefines.hpp **** typedef volatile uint64_t               vuint64_t;
  96:funsape/globalDefines.hpp **** 
  97:funsape/globalDefines.hpp **** //     /////////////////     AVR PLATFORM VARIABLES    //////////////////     //
  98:funsape/globalDefines.hpp **** typedef int16_t                         int_t;          // 16-bit (AVR)
  99:funsape/globalDefines.hpp **** typedef uint16_t                        uint_t;         // 16-bit (AVR)
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 3


 100:funsape/globalDefines.hpp **** typedef cint16_t                        cint_t;         // 16-bit (AVR)
 101:funsape/globalDefines.hpp **** typedef cuint16_t                       cuint_t;        // 16-bit (AVR)
 102:funsape/globalDefines.hpp **** typedef vint16_t                        vint_t;         // 16-bit (AVR)
 103:funsape/globalDefines.hpp **** typedef vuint16_t                       vuint_t;        // 16-bit (AVR)
 104:funsape/globalDefines.hpp **** typedef uint8_t                         ioPinIndex_t;   // 8-bit (AVR)
 105:funsape/globalDefines.hpp **** typedef vuint8_t                       *ioRegAddress_t; // 8-bit address (AVR)
 106:funsape/globalDefines.hpp **** 
 107:funsape/globalDefines.hpp **** //     //////////////////     BINARY ENUMERATIONS     ///////////////////     //
 108:funsape/globalDefines.hpp **** enum class Activation : cbool_t {
 109:funsape/globalDefines.hpp ****     OFF                                 = false,
 110:funsape/globalDefines.hpp ****     ON                                  = true
 111:funsape/globalDefines.hpp **** };
 112:funsape/globalDefines.hpp **** 
 113:funsape/globalDefines.hpp **** enum class DisplayOrientation : cbool_t {
 114:funsape/globalDefines.hpp ****     LANDSCAPE                           = false,
 115:funsape/globalDefines.hpp ****     PORTRAIT                            = true
 116:funsape/globalDefines.hpp **** };
 117:funsape/globalDefines.hpp **** 
 118:funsape/globalDefines.hpp **** enum class DriverMode : cbool_t {
 119:funsape/globalDefines.hpp ****     PUSH_PULL                           = false,
 120:funsape/globalDefines.hpp ****     OPEN_DRAIN                          = true,
 121:funsape/globalDefines.hpp **** };
 122:funsape/globalDefines.hpp **** 
 123:funsape/globalDefines.hpp **** enum class Edge : cbool_t {
 124:funsape/globalDefines.hpp ****     FALLING                             = false,
 125:funsape/globalDefines.hpp ****     RISING                              = true
 126:funsape/globalDefines.hpp **** };
 127:funsape/globalDefines.hpp **** 
 128:funsape/globalDefines.hpp **** enum class IoOperation : cbool_t {
 129:funsape/globalDefines.hpp ****     WRITE                               = false,
 130:funsape/globalDefines.hpp ****     READ                                = true
 131:funsape/globalDefines.hpp **** };
 132:funsape/globalDefines.hpp **** 
 133:funsape/globalDefines.hpp **** enum class LogicLevel : cbool_t {
 134:funsape/globalDefines.hpp ****     LOW                                 = false,
 135:funsape/globalDefines.hpp ****     HIGH                                = true
 136:funsape/globalDefines.hpp **** };
 137:funsape/globalDefines.hpp **** 
 138:funsape/globalDefines.hpp **** enum class PinDirection : cbool_t {
 139:funsape/globalDefines.hpp ****     INPUT                               = false,
 140:funsape/globalDefines.hpp ****     OUTPUT                              = true,
 141:funsape/globalDefines.hpp **** };
 142:funsape/globalDefines.hpp **** 
 143:funsape/globalDefines.hpp **** enum class Rotation : cbool_t {
 144:funsape/globalDefines.hpp ****     CLOCKWISE                           = false,
 145:funsape/globalDefines.hpp ****     COUNTERCLOCKWISE                    = true
 146:funsape/globalDefines.hpp **** };
 147:funsape/globalDefines.hpp **** 
 148:funsape/globalDefines.hpp **** enum class State : cbool_t {
 149:funsape/globalDefines.hpp ****     OFF                                 = false,
 150:funsape/globalDefines.hpp ****     ON                                  = true
 151:funsape/globalDefines.hpp **** };
 152:funsape/globalDefines.hpp **** 
 153:funsape/globalDefines.hpp **** //     ///////////////////     PLAIN ENUMERATIONS    ////////////////////     //
 154:funsape/globalDefines.hpp **** enum class Axis : cuint8_t {
 155:funsape/globalDefines.hpp ****     //                                     Z-AXIS     Y-AXIS     X-AXIS
 156:funsape/globalDefines.hpp ****     NONE                                = (0 << 2) | (0 << 1) | (0 << 0),
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 4


 157:funsape/globalDefines.hpp ****     X                                   = (0 << 2) | (0 << 1) | (1 << 0),
 158:funsape/globalDefines.hpp ****     Y                                   = (0 << 2) | (1 << 1) | (0 << 0),
 159:funsape/globalDefines.hpp ****     XY                                  = (0 << 2) | (1 << 1) | (1 << 0),
 160:funsape/globalDefines.hpp ****     Z                                   = (1 << 2) | (0 << 1) | (0 << 0),
 161:funsape/globalDefines.hpp ****     XZ                                  = (1 << 2) | (0 << 1) | (1 << 0),
 162:funsape/globalDefines.hpp ****     YZ                                  = (1 << 2) | (1 << 1) | (0 << 0),
 163:funsape/globalDefines.hpp ****     ALL                                 = (1 << 2) | (1 << 1) | (1 << 0)
 164:funsape/globalDefines.hpp **** };
 165:funsape/globalDefines.hpp **** 
 166:funsape/globalDefines.hpp **** inlined Axis operator|(Axis a, Axis b)
 167:funsape/globalDefines.hpp **** {
 168:funsape/globalDefines.hpp ****     return static_cast<Axis>(static_cast<cint8_t>(a) | static_cast<uint8_t>(b));
 169:funsape/globalDefines.hpp **** }
 170:funsape/globalDefines.hpp **** 
 171:funsape/globalDefines.hpp **** inlined Axis &operator|=(Axis &a, Axis b)
 172:funsape/globalDefines.hpp **** {
 173:funsape/globalDefines.hpp ****     return a = static_cast<Axis>(static_cast<uint8_t>(a) | static_cast<uint8_t>(b));
 174:funsape/globalDefines.hpp **** }
 175:funsape/globalDefines.hpp **** 
 176:funsape/globalDefines.hpp **** inlined Axis operator&(Axis a, Axis b)
 177:funsape/globalDefines.hpp **** {
 178:funsape/globalDefines.hpp ****     return static_cast<Axis>(static_cast<uint8_t>(a) & static_cast<uint8_t>(b));
 179:funsape/globalDefines.hpp **** }
 180:funsape/globalDefines.hpp **** 
 181:funsape/globalDefines.hpp **** inlined Axis &operator&=(Axis &a, Axis b)
 182:funsape/globalDefines.hpp **** {
 183:funsape/globalDefines.hpp ****     return a = static_cast<Axis>(static_cast<uint8_t>(a) & static_cast<uint8_t>(b));
 184:funsape/globalDefines.hpp **** }
 185:funsape/globalDefines.hpp **** 
 186:funsape/globalDefines.hpp **** enum class Direction : cuint8_t {
 187:funsape/globalDefines.hpp ****     LEFT                                = 0,
 188:funsape/globalDefines.hpp ****     RIGHT                               = 1,
 189:funsape/globalDefines.hpp ****     UP                                  = 2,
 190:funsape/globalDefines.hpp ****     DOWN                                = 3
 191:funsape/globalDefines.hpp **** };
 192:funsape/globalDefines.hpp **** 
 193:funsape/globalDefines.hpp **** enum class InterfaceMode : cuint8_t {
 194:funsape/globalDefines.hpp ****     BLOCKING_MODE                       = 0,
 195:funsape/globalDefines.hpp ****     INTERRUPT_MODE                      = 1,
 196:funsape/globalDefines.hpp ****     DMA_MODE                            = 2
 197:funsape/globalDefines.hpp **** };
 198:funsape/globalDefines.hpp **** 
 199:funsape/globalDefines.hpp **** enum class ThermometricScale : cuint8_t {
 200:funsape/globalDefines.hpp ****     CELSIUS                             = 0,
 201:funsape/globalDefines.hpp ****     DELISLE                             = 1,
 202:funsape/globalDefines.hpp ****     FAHRENHEIT                          = 2,
 203:funsape/globalDefines.hpp ****     KELVIN                              = 3,
 204:funsape/globalDefines.hpp ****     NEWTON                              = 4,
 205:funsape/globalDefines.hpp ****     RANKINE                             = 5,
 206:funsape/globalDefines.hpp ****     REAUMUR                             = 6,
 207:funsape/globalDefines.hpp ****     ROMER                               = 7
 208:funsape/globalDefines.hpp **** };
 209:funsape/globalDefines.hpp **** 
 210:funsape/globalDefines.hpp **** enum class Error : cuint16_t {
 211:funsape/globalDefines.hpp ****     // General error codes
 212:funsape/globalDefines.hpp ****     NONE                                                = 0x0000,   // Success - No errors occurred
 213:funsape/globalDefines.hpp ****     AXIS_INVALID                                        = 0x0001,   // Invalid axis
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 5


 214:funsape/globalDefines.hpp ****     NOT_IMPLEMENTED                                     = 0x0002,   // Not implemented yet
 215:funsape/globalDefines.hpp ****     UNDER_DEVELOPMENT                                   = 0x0003,   // This part of the code is sti
 216:funsape/globalDefines.hpp ****     NOT_INITIALIZED                                     = 0x0004,   // Not initialized
 217:funsape/globalDefines.hpp ****     // BUSY                                                = 0x0005,   // TODO: Describe parameter
 218:funsape/globalDefines.hpp ****     // DEVICE_NOT_SUPPORTED                                = 0x0006,   // Device is not currently s
 219:funsape/globalDefines.hpp ****     // FEATURE_NOT_SUPPORTED                               = 0x0007,   // Unsupported feature or co
 220:funsape/globalDefines.hpp ****     // FUNCTION_POINTER_NULL                               = 0x0008,   // TODO: Describe parameter
 221:funsape/globalDefines.hpp ****     // INSTANCE_INVALID                                    = 0x0009,   // Invalid instance
 222:funsape/globalDefines.hpp ****     // LOCKED                                              = 0x000A,   // Accessed a locked device
 223:funsape/globalDefines.hpp ****     MEMORY_ALLOCATION                                   = 0x000B,   // Memory allocation failed
 224:funsape/globalDefines.hpp ****     // MODE_NOT_SUPPORTED                                  = 0x000C,   // Mode is not currently sup
 225:funsape/globalDefines.hpp ****     // NOT_READY                                           = 0x000D,   // TODO: Describe parameter
 226:funsape/globalDefines.hpp ****     // READ_PROTECTED                                      = 0x000E,   // Tried to read a read prot
 227:funsape/globalDefines.hpp ****     // WRITE_PROTECTED                                     = 0x000F,   // Tried to write a write pr
 228:funsape/globalDefines.hpp **** 
 229:funsape/globalDefines.hpp ****     // Function arguments related error codes
 230:funsape/globalDefines.hpp ****     // ARGUMENT_CANNOT_BE_ZERO                             = 0x0010,   // TODO: Describe parameter
 231:funsape/globalDefines.hpp ****     ARGUMENT_POINTER_NULL                               = 0x0011,   // NULL pointer was passed as a
 232:funsape/globalDefines.hpp ****     ARGUMENT_VALUE_INVALID                              = 0x0012,   // TODO: Describe parameter
 233:funsape/globalDefines.hpp ****     // ARGUMENTS_MISMATCH                                  = 0x0013,   // A function was called wit
 234:funsape/globalDefines.hpp ****     // ARGUMENTS_WRONG_NUMBER                              = 0x0014,   // A function was called wit
 235:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_5                            = 0x0015,   // Generic error (use only o
 236:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_6                            = 0x0016,   // Generic error (use only o
 237:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_7                            = 0x0017,   // Generic error (use only o
 238:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_8                            = 0x0018,   // Generic error (use only o
 239:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_9                            = 0x0019,   // Generic error (use only o
 240:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_10                           = 0x001A,   // Generic error (use only o
 241:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_11                           = 0x001B,   // Generic error (use only o
 242:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_12                           = 0x001C,   // Generic error (use only o
 243:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_13                           = 0x001D,   // Generic error (use only o
 244:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_14                           = 0x001E,   // Generic error (use only o
 245:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR                              = 0x001F,   // Generic error (use only o
 246:funsape/globalDefines.hpp **** 
 247:funsape/globalDefines.hpp ****     // Buffer related error codes
 248:funsape/globalDefines.hpp ****     // BUFFER_EMPTY                                        = 0x0020,   // Buffer is empty
 249:funsape/globalDefines.hpp ****     // BUFFER_FULL                                         = 0x0021,   // Buffer is full
 250:funsape/globalDefines.hpp ****     // BUFFER_NOT_ENOUGH_ELEMENTS                          = 0x0022,   // Not enough space in buffe
 251:funsape/globalDefines.hpp ****     // BUFFER_NOT_ENOUGH_SPACE                             = 0x0023,   // Not enough space in buffe
 252:funsape/globalDefines.hpp ****     // BUFFER_POINTER_NULL                                 = 0x0024,   // Buffer size was set to ze
 253:funsape/globalDefines.hpp ****     // BUFFER_SIZE_TOO_LARGE                               = 0x0025,   // Buffer size was set to a 
 254:funsape/globalDefines.hpp ****     // BUFFER_SIZE_TOO_SMALL                               = 0x0026,   // Buffer size was set to a 
 255:funsape/globalDefines.hpp ****     // BUFFER_SIZE_ZERO                                    = 0x0027,   // Buffer size was set to ze
 256:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_8                              = 0x0028,   // Generic error (use only o
 257:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_9                              = 0x0029,   // Generic error (use only o
 258:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_10                             = 0x002A,   // Generic error (use only o
 259:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_11                             = 0x002B,   // Generic error (use only o
 260:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_12                             = 0x002C,   // Generic error (use only o
 261:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_13                             = 0x002D,   // Generic error (use only o
 262:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_14                             = 0x002E,   // Generic error (use only o
 263:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_15                             = 0x002F,   // Generic error (use only o
 264:funsape/globalDefines.hpp **** 
 265:funsape/globalDefines.hpp ****     // Clock configuration related error codes
 266:funsape/globalDefines.hpp ****     // CLOCK_PRESCALER_CHANGE_FAILED                       = 0x0030,   // Clock prescaler change fa
 267:funsape/globalDefines.hpp ****     // CLOCK_PRESCALER_NOT_SUPPORTED                       = 0x0031,   // Clock prescaler configura
 268:funsape/globalDefines.hpp ****     // CLOCK_SPEED_TOO_HIGH                                = 0x0032,   // TODO: Describe parameter
 269:funsape/globalDefines.hpp ****     // CLOCK_SPEED_TOO_LOW                                 = 0x0033,   // TODO: Describe parameter
 270:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_4                               = 0x0034,   // Generic error (use only o
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 6


 271:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_5                               = 0x0035,   // Generic error (use only o
 272:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_6                               = 0x0036,   // Generic error (use only o
 273:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_7                               = 0x0037,   // Generic error (use only o
 274:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_8                               = 0x0038,   // Generic error (use only o
 275:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_9                               = 0x0039,   // Generic error (use only o
 276:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_10                              = 0x003A,   // Generic error (use only o
 277:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_11                              = 0x003B,   // Generic error (use only o
 278:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_12                              = 0x003C,   // Generic error (use only o
 279:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_13                              = 0x003D,   // Generic error (use only o
 280:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_14                              = 0x003E,   // Generic error (use only o
 281:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_15                              = 0x003F,   // Generic error (use only o
 282:funsape/globalDefines.hpp **** 
 283:funsape/globalDefines.hpp ****     // Communication related error codes
 284:funsape/globalDefines.hpp ****     // COMMUNICATION_FAILED                                = 0x0040,   // TODO: Describe parameter
 285:funsape/globalDefines.hpp ****     // COMMUNICATION_NO_DEVICE_SELECTED                    = 0x0041,   // TODO: Describe parameter
 286:funsape/globalDefines.hpp ****     // COMMUNICATION_PORT_NOT_SET                          = 0x0042,   // TODO: Describe parameter
 287:funsape/globalDefines.hpp ****     // COMMUNICATION_TIMEOUT                               = 0x0043,   // The operation timed out
 288:funsape/globalDefines.hpp ****     // COMMUNICATION_DEVICE_ID_MATCH_FAILED                = 0x0044,   // TODO: Describe parameter
 289:funsape/globalDefines.hpp ****     // CHECKSUM_ERROR                                      = 0x0045,   // TODO: Describe parameter
 290:funsape/globalDefines.hpp ****     // FRAME_ERROR                                         = 0x0046,   // TODO: Describe parameter
 291:funsape/globalDefines.hpp ****     // PACKAGE_AWAITING                                    = 0x0047,   // Try to write data to a re
 292:funsape/globalDefines.hpp ****     // PACKAGE_NOT_READY                                   = 0x0048,   // Try to read data from a n
 293:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_9                       = 0x0049,   // Generic error (use only o
 294:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_10                      = 0x004A,   // Generic error (use only o
 295:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_11                      = 0x004B,   // Generic error (use only o
 296:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_12                      = 0x004C,   // Generic error (use only o
 297:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_13                      = 0x004D,   // Generic error (use only o
 298:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_14                      = 0x004E,   // Generic error (use only o
 299:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_15                      = 0x004F,   // Generic error (use only o
 300:funsape/globalDefines.hpp **** 
 301:funsape/globalDefines.hpp ****     // DateTime class related error codes
 302:funsape/globalDefines.hpp ****     // DATETIME_DATE_NOT_INITIALIZED                       = 0x0050,   // TODO: Describe parameter
 303:funsape/globalDefines.hpp ****     // DATETIME_HOUR_INVALID                               = 0x0051,   // TODO: Describe parameter
 304:funsape/globalDefines.hpp ****     // DATETIME_MILLISECOND_INVALID                        = 0x0052,   // TODO: Describe parameter
 305:funsape/globalDefines.hpp ****     // DATETIME_MINUTE_INVALID                             = 0x0053,   // TODO: Describe parameter
 306:funsape/globalDefines.hpp ****     // DATETIME_MONTH_DAY_INVALID                          = 0x0054,   // TODO: Describe parameter
 307:funsape/globalDefines.hpp ****     // DATETIME_MONTH_INVALID                              = 0x0055,   // TODO: Describe parameter
 308:funsape/globalDefines.hpp ****     // DATETIME_SECOND_INVALID                             = 0x0056,   // TODO: Describe parameter
 309:funsape/globalDefines.hpp ****     // DATETIME_TIME_NOT_INITIALIZED                       = 0x0057,   // TODO: Describe parameter
 310:funsape/globalDefines.hpp ****     // DATETIME_TIMEZONE_INVALID                           = 0x0058,   // TODO: Describe parameter
 311:funsape/globalDefines.hpp ****     // DATETIME_YEAR_INVALID                               = 0x0059,   // TODO: Describe parameter
 312:funsape/globalDefines.hpp ****     // DATETIME_DATE_INVALID                               = 0x005A,   // TODO: Describe parameter
 313:funsape/globalDefines.hpp ****     // DATETIME_TIME_INVALID                               = 0x005B,   // TODO: Describe parameter
 314:funsape/globalDefines.hpp ****     // DATETIME_GENERIC_ERROR_13                           = 0x005C,   // Generic error (use only o
 315:funsape/globalDefines.hpp ****     // DATETIME_GENERIC_ERROR_14                           = 0x005D,   // Generic error (use only o
 316:funsape/globalDefines.hpp ****     // DATETIME_GENERIC_ERROR_15                           = 0x005F,   // Generic error (use only o
 317:funsape/globalDefines.hpp **** 
 318:funsape/globalDefines.hpp ****     // Handler related error codes
 319:funsape/globalDefines.hpp ****     // HANDLER_NOT_SUPPORTED                               = 0x0060,   // TODO: Describe parameter
 320:funsape/globalDefines.hpp ****     // HANDLER_POINTER_NULL                                = 0x0061,   // TODO: Describe parameter
 321:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_2                             = 0x0062,   // Generic error (use only o
 322:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_3                             = 0x0063,   // Generic error (use only o
 323:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_4                             = 0x0064,   // Generic error (use only o
 324:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_5                             = 0x0065,   // Generic error (use only o
 325:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_6                             = 0x0066,   // Generic error (use only o
 326:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_7                             = 0x0067,   // Generic error (use only o
 327:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_8                             = 0x0068,   // Generic error (use only o
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 7


 328:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_9                             = 0x0069,   // Generic error (use only o
 329:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_10                            = 0x006A,   // Generic error (use only o
 330:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_11                            = 0x006B,   // Generic error (use only o
 331:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_12                            = 0x006C,   // Generic error (use only o
 332:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_13                            = 0x006D,   // Generic error (use only o
 333:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_14                            = 0x006E,   // Generic error (use only o
 334:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_15                            = 0x006F,   // Generic error (use only o
 335:funsape/globalDefines.hpp **** 
 336:funsape/globalDefines.hpp ****     // External interrupts related error codes
 337:funsape/globalDefines.hpp ****     // INTERRUPT_NOT_AVAILABLE                             = 0x0070,   // TODO: Describe parameter
 338:funsape/globalDefines.hpp ****     // INTERRUPT_PORT_OUTPUT_MODE_NOT_SUPPORTED            = 0x0071,   // TODO: Describe parameter
 339:funsape/globalDefines.hpp ****     // INTERRUPT_SENSE_MODE_NOT_SUPPORTED                  = 0x0072,   // TODO: Describe parameter
 340:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_3                           = 0x0073,   // Generic error (use only o
 341:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_4                           = 0x0074,   // Generic error (use only o
 342:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_5                           = 0x0075,   // Generic error (use only o
 343:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_6                           = 0x0076,   // Generic error (use only o
 344:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_7                           = 0x0077,   // Generic error (use only o
 345:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_8                           = 0x0078,   // Generic error (use only o
 346:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_9                           = 0x0079,   // Generic error (use only o
 347:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_10                          = 0x007A,   // Generic error (use only o
 348:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_11                          = 0x007B,   // Generic error (use only o
 349:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_12                          = 0x007C,   // Generic error (use only o
 350:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_13                          = 0x007D,   // Generic error (use only o
 351:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_14                          = 0x007E,   // Generic error (use only o
 352:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_15                          = 0x007F,   // Generic error (use only o
 353:funsape/globalDefines.hpp **** 
 354:funsape/globalDefines.hpp **** 
 355:funsape/globalDefines.hpp ****     // Package API class related error codes
 356:funsape/globalDefines.hpp ****     // PACKAGE_API_PACKAGE_DATA_FULL                       = 0x0080,   // TODO: Describe parameter
 357:funsape/globalDefines.hpp ****     // PACKAGE_API_PACKAGE_NOT_READY                       = 0x0081,   // TODO: Describe parameter
 358:funsape/globalDefines.hpp ****     // PACKAGE_API_PAYLOAD_DATA_NULL                       = 0x0082,   // TODO: Describe parameter
 359:funsape/globalDefines.hpp ****     // PACKAGE_API_PAYLOAD_SIZE_NULL                       = 0x0083,   // TODO: Describe parameter
 360:funsape/globalDefines.hpp ****     // PACKAGE_API_SOURCE_ADDRESS_INVALID                  = 0x0084,   // TODO: Describe parameter
 361:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_5                         = 0x0085,   // Generic error (use only o
 362:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_6                         = 0x0086,   // Generic error (use only o
 363:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_7                         = 0x0087,   // Generic error (use only o
 364:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_8                         = 0x0088,   // Generic error (use only o
 365:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_9                         = 0x0089,   // Generic error (use only o
 366:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_10                        = 0x008A,   // Generic error (use only o
 367:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_11                        = 0x008B,   // Generic error (use only o
 368:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_12                        = 0x008C,   // Generic error (use only o
 369:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_13                        = 0x008D,   // Generic error (use only o
 370:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_14                        = 0x008E,   // Generic error (use only o
 371:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_15                        = 0x008F,   // Generic error (use only o
 372:funsape/globalDefines.hpp **** 
 373:funsape/globalDefines.hpp ****     // SPI related error codes
 374:funsape/globalDefines.hpp ****     // SPI_BUSY_FLAG                                       = 0x0090,   // TODO: Describe parameter
 375:funsape/globalDefines.hpp ****     // SPI_CRC                                             = 0x0091,   // TODO: Describe parameter
 376:funsape/globalDefines.hpp ****     // SPI_DMA                                             = 0x0092,   // TODO: Describe parameter
 377:funsape/globalDefines.hpp ****     // SPI_MODE_FAULT                                      = 0x0093,   // TODO: Describe parameter
 378:funsape/globalDefines.hpp ****     // SPI_OVERRUN                                         = 0x0094,   // TODO: Describe parameter
 379:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_5                                 = 0x0095,   // Generic error (use only o
 380:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_6                                 = 0x0096,   // Generic error (use only o
 381:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_7                                 = 0x0097,   // Generic error (use only o
 382:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_8                                 = 0x0098,   // Generic error (use only o
 383:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_9                                 = 0x0099,   // Generic error (use only o
 384:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_10                                = 0x009A,   // Generic error (use only o
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 8


 385:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_11                                = 0x009B,   // Generic error (use only o
 386:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_12                                = 0x009C,   // Generic error (use only o
 387:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_13                                = 0x009D,   // Generic error (use only o
 388:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_14                                = 0x009E,   // Generic error (use only o
 389:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_15                                = 0x009F,   // Generic error (use only o
 390:funsape/globalDefines.hpp **** 
 391:funsape/globalDefines.hpp ****     // TWI related error codes
 392:funsape/globalDefines.hpp ****     // TWI_AF_FLAG                                         = 0x00A0,   // TWI AF flag error
 393:funsape/globalDefines.hpp ****     // TWI_ARBITRATION_LOST                                = 0x00A1,   // TWI bus arbitration lost
 394:funsape/globalDefines.hpp ****     // TWI_BUS_ERROR                                       = 0x00A2,   // TWI bus error
 395:funsape/globalDefines.hpp ****     // TWI_DMA                                             = 0x00A3,   // DMA parameter error
 396:funsape/globalDefines.hpp ****     // TWI_DMA_PARAM                                       = 0x00A4,   // DMA transfer error
 397:funsape/globalDefines.hpp ****     // TWI_OVERRUN                                         = 0x00A5,   // TWI overrun
 398:funsape/globalDefines.hpp ****     // TWI_SIZE_MANAGEMENT_ERROR                           = 0x00A6,   // Size management error
 399:funsape/globalDefines.hpp ****     // TWI_INVALID_DEVICE_ADDRESS                          = 0x00A7,   // TODO: Describe parameter
 400:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_8                                 = 0x00A8,   // Generic error (use only o
 401:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_9                                 = 0x00A9,   // Generic error (use only o
 402:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_10                                = 0x00AA,   // Generic error (use only o
 403:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_11                                = 0x00AB,   // Generic error (use only o
 404:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_12                                = 0x00AC,   // Generic error (use only o
 405:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_13                                = 0x00AD,   // Generic error (use only o
 406:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_14                                = 0x00AE,   // Generic error (use only o
 407:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_15                                = 0x00AF,   // Generic error (use only o
 408:funsape/globalDefines.hpp **** 
 409:funsape/globalDefines.hpp ****     // USART related error codes
 410:funsape/globalDefines.hpp ****     // USART_BAUD_RATE_NOT_SUPPORTED                       = 0x00B0,   // TODO: Describe parameter
 411:funsape/globalDefines.hpp ****     // USART_CONFIGURATION_PARAMETER_WRONG                 = 0x00B1,   // TODO: Describe parameter
 412:funsape/globalDefines.hpp ****     // USART_DATA_BITS_NOT_SUPPORTED                       = 0x00B2,   // TODO: Describe parameter
 413:funsape/globalDefines.hpp ****     // USART_FRAME_FORMAT_NOT_SUPPORTED                    = 0x00B3,   // TODO: Describe parameter
 414:funsape/globalDefines.hpp ****     // USART_PARITY_NOT_SUPPORTED                          = 0x00B4,   // TODO: Describe parameter
 415:funsape/globalDefines.hpp ****     // USART_STOP_BIT_NOT_SUPPORTED                        = 0x00B5,   // TODO: Describe parameter
 416:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_6                               = 0x00B6,   // Generic error (use only o
 417:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_7                               = 0x00B7,   // Generic error (use only o
 418:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_8                               = 0x00B8,   // Generic error (use only o
 419:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_9                               = 0x00B9,   // Generic error (use only o
 420:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_10                              = 0x00BA,   // Generic error (use only o
 421:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_11                              = 0x00BB,   // Generic error (use only o
 422:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_12                              = 0x00BC,   // Generic error (use only o
 423:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_13                              = 0x00BD,   // Generic error (use only o
 424:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_14                              = 0x00BE,   // Generic error (use only o
 425:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_15                              = 0x00BF,   // Generic error (use only o
 426:funsape/globalDefines.hpp **** 
 427:funsape/globalDefines.hpp ****     // LCD related error codes
 428:funsape/globalDefines.hpp ****     // LCD_CONTROL_PORT_NOT_SET                            = 0x00C0,   // TODO: Describe parameter
 429:funsape/globalDefines.hpp ****     // LCD_CONTROL_PIN_E_INVALID                           = 0x00C1,   // TODO: Describe parameter
 430:funsape/globalDefines.hpp ****     // LCD_CONTROL_PIN_RS_INVALID                          = 0x00C2,   // TODO: Describe parameter
 431:funsape/globalDefines.hpp ****     // LCD_CONTROL_PIN_RW_INVALID                          = 0x00C3,   // TODO: Describe parameter
 432:funsape/globalDefines.hpp ****     // LCD_DATA_PORT_NOT_SET                               = 0x00C4,   // TODO: Describe parameter
 433:funsape/globalDefines.hpp ****     // LCD_DATA_PIN_INDEX_OUT_OF_BOUNDARIES                = 0x00C5,   // TODO: Describe parameter
 434:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_6                                 = 0x00C6,   // Generic error (use only o
 435:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_7                                 = 0x00C7,   // Generic error (use only o
 436:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_8                                 = 0x00C8,   // Generic error (use only o
 437:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_9                                 = 0x00C9,   // Generic error (use only o
 438:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_10                                = 0x00CA,   // Generic error (use only o
 439:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_11                                = 0x00CB,   // Generic error (use only o
 440:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_12                                = 0x00CC,   // Generic error (use only o
 441:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_13                                = 0x00CD,   // Generic error (use only o
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 9


 442:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_14                                = 0x00CE,   // Generic error (use only o
 443:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_15                                = 0x00CF,   // Generic error (use only o
 444:funsape/globalDefines.hpp **** 
 445:funsape/globalDefines.hpp ****     // GPIO related error codes
 446:funsape/globalDefines.hpp ****     GPIO_PORT_NOT_SET                                   = 0x00D0,   // Gpio port was not set before
 447:funsape/globalDefines.hpp ****     GPIO_DATA_PORT_NOT_SET                              = 0x00D1,   // Gpio data port was not set b
 448:funsape/globalDefines.hpp ****     GPIO_CONTROL_PORT_NOT_SET                           = 0x00D2,   // Gpio control port was not se
 449:funsape/globalDefines.hpp ****     GPIO_PORT_INVALID                                   = 0x00D3,   // Gpio port address is invalid
 450:funsape/globalDefines.hpp ****     GPIO_DATA_PORT_INVALID                              = 0x00D4,   // Gpio data port address is in
 451:funsape/globalDefines.hpp ****     GPIO_CONTROL_PORT_INVALID                           = 0x00D5,   // Gpio control port address is
 452:funsape/globalDefines.hpp ****     GPIO_PIN_INDEX_INVALID                              = 0x00D6,   // Invalid GPIO Pin
 453:funsape/globalDefines.hpp ****     GPIO_PIN_INDEX_OUT_OF_BOUNDARIES                    = 0x00D7,   // Gpio pin index was out of bo
 454:funsape/globalDefines.hpp ****     // GPIO_NO_PIN_SET                                     = 0x00D8,   // No pin selected at Gpio p
 455:funsape/globalDefines.hpp ****     // GPIO_ADDRESS_INVALID                                = 0x00D9,   // Invalid GPIO Port
 456:funsape/globalDefines.hpp ****     // GPIO_PORT_LOGIC_CONTENTION                          = 0x00DA,   // TODO: Describe parameter
 457:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_11                               = 0x00DB,   // Generic error (use only o
 458:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_12                               = 0x00DC,   // Generic error (use only o
 459:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_13                               = 0x00DD,   // Generic error (use only o
 460:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_14                               = 0x00DE,   // Generic error (use only o
 461:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_15                               = 0x00DF,   // Generic error (use only o
 462:funsape/globalDefines.hpp **** 
 463:funsape/globalDefines.hpp ****     // HAL related error codes
 464:funsape/globalDefines.hpp ****     // HAL_UNKNOWN_ERROR                                   = 0x00E0,   // TODO: Describe parameter
 465:funsape/globalDefines.hpp ****     // HAL_STATUS_ERROR                                    = 0x00E1,   // TODO: Describe parameter
 466:funsape/globalDefines.hpp ****     // HAL_STATUS_BUSY                                     = 0x00E2,   // TODO: Describe parameter
 467:funsape/globalDefines.hpp ****     // HAL_STATUS_TIMEOUT                                  = 0x00E3,   // TODO: Describe parameter
 468:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_4                                 = 0x00E4,   // Generic error (use only o
 469:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_5                                 = 0x00E5,   // Generic error (use only o
 470:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_6                                 = 0x00E6,   // Generic error (use only o
 471:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_7                                 = 0x00E7,   // Generic error (use only o
 472:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_8                                 = 0x00E8,   // Generic error (use only o
 473:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_9                                 = 0x00E9,   // Generic error (use only o
 474:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_10                                = 0x00EA,   // Generic error (use only o
 475:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_11                                = 0x00EB,   // Generic error (use only o
 476:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_12                                = 0x00EC,   // Generic error (use only o
 477:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_13                                = 0x00ED,   // Generic error (use only o
 478:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_14                                = 0x00EE,   // Generic error (use only o
 479:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_15                                = 0x00EF,   // Generic error (use only o
 480:funsape/globalDefines.hpp **** 
 481:funsape/globalDefines.hpp ****     // System related error codes
 482:funsape/globalDefines.hpp ****     // SYSTEM_US_TIMER_HANDLER_NULL                        = 0x00F0,   // TODO: Describe parameter
 483:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_1                              = 0x00F1,   // Generic error (use only o
 484:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_2                              = 0x00F2,   // Generic error (use only o
 485:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_3                              = 0x00F3,   // Generic error (use only o
 486:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_4                              = 0x00F4,   // Generic error (use only o
 487:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_5                              = 0x00F5,   // Generic error (use only o
 488:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_6                              = 0x00F6,   // Generic error (use only o
 489:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_7                              = 0x00F7,   // Generic error (use only o
 490:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_8                              = 0x00F8,   // Generic error (use only o
 491:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_9                              = 0x00F9,   // Generic error (use only o
 492:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_10                             = 0x00FA,   // Generic error (use only o
 493:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_11                             = 0x00FB,   // Generic error (use only o
 494:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_12                             = 0x00FC,   // Generic error (use only o
 495:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_13                             = 0x00FD,   // Generic error (use only o
 496:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_14                             = 0x00FE,   // Generic error (use only o
 497:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_15                             = 0x00FF,   // Generic error (use only o
 498:funsape/globalDefines.hpp **** 
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 10


 499:funsape/globalDefines.hpp ****     // FatFs related error codes
 500:funsape/globalDefines.hpp ****     // FAT_FS_UNKNOWN_ERROR                                = 0x0100,   // TODO: Describe parameter
 501:funsape/globalDefines.hpp ****     // FAT_FS_DRIVE_UNSUPPORTED                            = 0x0101,   // TODO: Describe parameter
 502:funsape/globalDefines.hpp ****     // FAT_FS_DISK_NOT_INSERTED                            = 0x0102,   // TODO: Describe parameter
 503:funsape/globalDefines.hpp ****     // FAT_FS_INITIALIZATION_FAILED                        = 0x0103,   // TODO: Describe parameter
 504:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_4                              = 0x0104,   // Generic error (use only o
 505:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_5                              = 0x0105,   // Generic error (use only o
 506:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_6                              = 0x0106,   // Generic error (use only o
 507:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_7                              = 0x0107,   // Generic error (use only o
 508:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_8                              = 0x0108,   // Generic error (use only o
 509:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_9                              = 0x0109,   // Generic error (use only o
 510:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_10                             = 0x010A,   // Generic error (use only o
 511:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_11                             = 0x010B,   // Generic error (use only o
 512:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_12                             = 0x010C,   // Generic error (use only o
 513:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_13                             = 0x010D,   // Generic error (use only o
 514:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_14                             = 0x010E,   // Generic error (use only o
 515:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_15                             = 0x010F,   // Generic error (use only o
 516:funsape/globalDefines.hpp **** 
 517:funsape/globalDefines.hpp ****     // Uncategorized error codes
 518:funsape/globalDefines.hpp ****     // LCD_OUT_OF_BOUNDARIES                               = 0xFFF1,   // TODO: Describe parameter
 519:funsape/globalDefines.hpp ****     // CONTROLLER_NOT_SUPPORTED                            = 0xFFF2,   // Unsupported controller
 520:funsape/globalDefines.hpp ****     // DEVICE_ID_MATCH_FAILED                              = 0xFFF3,   // Device ID doesn't match
 521:funsape/globalDefines.hpp ****     // DMA_NOT_SUPPORTED                                   = 0xFFF4,   // DMA interface mode is not
 522:funsape/globalDefines.hpp ****     // DMA_TRANSFER_ERROR                                  = 0xFFF5,   // DMA transfer error
 523:funsape/globalDefines.hpp ****     // MESSAGE_TOO_LONG                                    = 0xFFF6,   // Message is to long to be 
 524:funsape/globalDefines.hpp ****     // VALID_DATA_NOT_AVAILABLE                            = 0xFFF7,   // Valid data was unavailabl
 525:funsape/globalDefines.hpp ****     // PERIPHERAL_NOT_READY                                = 0xFFF8,   // TODO: Describe parameter
 526:funsape/globalDefines.hpp ****     // STOPWATCH_NOT_STARTED                               = 0xFFF9,   // TODO: Describe parameter
 527:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_10                      = 0xFFFA,   // Generic error (use only o
 528:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_11                      = 0xFFFB,   // Generic error (use only o
 529:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_12                      = 0xFFFC,   // Generic error (use only o
 530:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_13                      = 0xFFFD,   // Generic error (use only o
 531:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_14                      = 0xFFFE,   // Generic error (use only o
 532:funsape/globalDefines.hpp **** 
 533:funsape/globalDefines.hpp ****     KEYPAD_COLUMNS_PIN_INDEX_INVALID                    = 0xFFF9,
 534:funsape/globalDefines.hpp ****     KEYPAD_LINES_PIN_INDEX_INVALID                      = 0xFFFA,
 535:funsape/globalDefines.hpp **** 
 536:funsape/globalDefines.hpp ****     KEYPAD_LINES_GPIO_PORT_INVALID                      = 0xFFFB,
 537:funsape/globalDefines.hpp ****     KEYPAD_COLUMNS_GPIO_PORT_INVALID                    = 0xFFFC,
 538:funsape/globalDefines.hpp ****     KEYPAD_TYPE_UNSUPPORTED                             = 0xFFFD,
 539:funsape/globalDefines.hpp ****     KEY_VALUES_NOT_SET                                  = 0xFFFE,
 540:funsape/globalDefines.hpp ****     // "I don't have the slightest idea" error code
 541:funsape/globalDefines.hpp ****     UNKNOWN                                             = 0xFFFF,   // Unknown error - Ops!!!!
 542:funsape/globalDefines.hpp **** };
 543:funsape/globalDefines.hpp **** 
 544:funsape/globalDefines.hpp **** // =============================================================================
 545:funsape/globalDefines.hpp **** // Macrofunctions
 546:funsape/globalDefines.hpp **** // =============================================================================
 547:funsape/globalDefines.hpp **** 
 548:funsape/globalDefines.hpp **** //     //////////////////////     DATA VALIDITY    //////////////////////     //
 549:funsape/globalDefines.hpp **** #define isGpioAddressValid(gpioPort)    (       \
 550:funsape/globalDefines.hpp ****         (IS_GPIO_ALL_INSTANCE(gpioPort))        \
 551:funsape/globalDefines.hpp ****         ? (bool_t)true                          \
 552:funsape/globalDefines.hpp ****         : (bool_t)false)
 553:funsape/globalDefines.hpp **** #define isGpioPinIndexValid(gpioPin)    (       \
 554:funsape/globalDefines.hpp ****         (IS_GPIO_ALL_PIN_NUMBER(gpioPin))       \
 555:funsape/globalDefines.hpp ****         ? (bool_t)true                          \
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 11


 556:funsape/globalDefines.hpp ****         : (bool_t)false)
 557:funsape/globalDefines.hpp **** #define isPointerValid(ptr)             (       \
 558:funsape/globalDefines.hpp ****         ((void *)(ptr))                         \
 559:funsape/globalDefines.hpp ****         ? (bool_t)true                          \
 560:funsape/globalDefines.hpp ****         : (bool_t)false)
 561:funsape/globalDefines.hpp **** 
 562:funsape/globalDefines.hpp **** //     //////////////////////     BIT HANDLING     //////////////////////     //
 563:funsape/globalDefines.hpp **** #ifndef setBit
 564:funsape/globalDefines.hpp **** #   define setBit(reg, bit)                     ((reg) |= (1 << (bit)))
 565:funsape/globalDefines.hpp **** #endif
 566:funsape/globalDefines.hpp **** #ifndef clrBit
 567:funsape/globalDefines.hpp **** #   define clrBit(reg, bit)                     ((reg) &= ~(1 << (bit)))
 568:funsape/globalDefines.hpp **** #endif
 569:funsape/globalDefines.hpp **** #ifndef cplBit
 570:funsape/globalDefines.hpp **** #   define cplBit(reg, bit)                     ((reg) ^= (1 << (bit)))
 571:funsape/globalDefines.hpp **** #endif
 572:funsape/globalDefines.hpp **** 
 573:funsape/globalDefines.hpp **** //     ///////////////////////     BIT TESTING    ///////////////////////     //
 574:funsape/globalDefines.hpp **** #ifndef isBitSet
 575:funsape/globalDefines.hpp **** #   define isBitSet(reg, bit)                   (((reg) >> (bit)) & 1)
 576:funsape/globalDefines.hpp **** #endif
 577:funsape/globalDefines.hpp **** #ifndef isBitClr
 578:funsape/globalDefines.hpp **** #   define isBitClr(reg, bit)                   (!isBitSet(reg,bit))
 579:funsape/globalDefines.hpp **** #endif
 580:funsape/globalDefines.hpp **** 
 581:funsape/globalDefines.hpp **** //     ///////////////////////     BIT LOOPING    ///////////////////////     //
 582:funsape/globalDefines.hpp **** #ifndef waitUntilBitIsSet
 583:funsape/globalDefines.hpp **** #   define waitUntilBitIsSet(reg, bit)          do{     \
 584:funsape/globalDefines.hpp ****         doNothing();                                    \
 585:funsape/globalDefines.hpp ****     } while (isBitClr((reg), (bit)))
 586:funsape/globalDefines.hpp **** #endif
 587:funsape/globalDefines.hpp **** #ifndef waitUntilBitIsClear
 588:funsape/globalDefines.hpp **** #   define waitUntilBitIsClear(reg, bit)        do{     \
 589:funsape/globalDefines.hpp ****         doNothing();                                    \
 590:funsape/globalDefines.hpp ****     }while(isBitSet((reg), (bit)))
 591:funsape/globalDefines.hpp **** #endif
 592:funsape/globalDefines.hpp **** 
 593:funsape/globalDefines.hpp **** //     ////////////////////     BIT MASK HANDLING    ////////////////////     //
 594:funsape/globalDefines.hpp **** #ifndef setMask
 595:funsape/globalDefines.hpp **** #   define setMask(reg, mask)                   ((reg) |= (mask))
 596:funsape/globalDefines.hpp **** #endif
 597:funsape/globalDefines.hpp **** #ifndef clrMask
 598:funsape/globalDefines.hpp **** #   define clrMask(reg, mask)                   ((reg) &= ~(mask))
 599:funsape/globalDefines.hpp **** #endif
 600:funsape/globalDefines.hpp **** #ifndef cplMask
 601:funsape/globalDefines.hpp **** #   define cplMask(reg, mask)                   ((reg) ^= (mask))
 602:funsape/globalDefines.hpp **** #endif
 603:funsape/globalDefines.hpp **** 
 604:funsape/globalDefines.hpp **** //     ////////////////     BIT MASK OFFSET HANDLING     ////////////////     //
 605:funsape/globalDefines.hpp **** #ifndef setMaskOffset
 606:funsape/globalDefines.hpp **** #   define setMaskOffset(reg, mask, offset)     ((reg) |= ((mask) << (offset)))
 607:funsape/globalDefines.hpp **** #endif
 608:funsape/globalDefines.hpp **** #ifndef clrMaskOffset
 609:funsape/globalDefines.hpp **** #   define clrMaskOffset(reg, mask, offset)     ((reg) &= ~((mask) << (offset)))
 610:funsape/globalDefines.hpp **** #endif
 611:funsape/globalDefines.hpp **** #ifndef cplMaskOffset
 612:funsape/globalDefines.hpp **** #   define cplMaskOffset(reg, mask, offset)     ((reg) ^= ((mask) << (offset)))
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 12


 613:funsape/globalDefines.hpp **** #endif
 614:funsape/globalDefines.hpp **** 
 615:funsape/globalDefines.hpp **** //     /////////////     DATA MANIPULATION (8-BITS WIDE)    /////////////     //
 616:funsape/globalDefines.hpp **** #define byteGetNibble1(dataByte)        (((dataByte) >> 4) & 0x0F)
 617:funsape/globalDefines.hpp **** #define byteGetNibble0(dataByte)        ((dataByte) & 0x0F)
 618:funsape/globalDefines.hpp **** #define byteSwitchNibbles(dataByte)     ((byteGetNibble0(dataByte) << 4) | \
 619:funsape/globalDefines.hpp ****         (byteGetNibble1(dataByte)))
 620:funsape/globalDefines.hpp **** 
 621:funsape/globalDefines.hpp **** //     ////////////     DATA MANIPULATION (16-BITS WIDE)     ////////////     //
 622:funsape/globalDefines.hpp **** #define hwordGetByte1(dataHword)        (((dataHword) >> 8) & 0x00FF)
 623:funsape/globalDefines.hpp **** #define hwordGetByte0(dataHword)        ((dataHword) & 0x00FF)
 624:funsape/globalDefines.hpp **** #define hwordSwitchBytes(dataHword)     ((hwordGetByte0(dataHword) << 8) | \
 625:funsape/globalDefines.hpp ****         (hwordGetByte1(dataHword)))
 626:funsape/globalDefines.hpp **** 
 627:funsape/globalDefines.hpp **** //     ////////////     DATA MANIPULATION (32-BITS WIDE)     ////////////     //
 628:funsape/globalDefines.hpp **** #define wordGetByte3(dataWord)          (((dataWord) >> 24) & 0x000000FF)
 629:funsape/globalDefines.hpp **** #define wordGetByte2(dataWord)          (((dataWord) >> 16) & 0x000000FF)
 630:funsape/globalDefines.hpp **** #define wordGetByte1(dataWord)          (((dataWord) >> 8) & 0x000000FF)
 631:funsape/globalDefines.hpp **** #define wordGetByte0(dataWord)          ((dataWord) & 0x000000FF)
 632:funsape/globalDefines.hpp **** #define wordSwitchBytes(dataWord)       ((wordGetByte0(dataWord) << 24)  | \
 633:funsape/globalDefines.hpp ****         (wordGetByte1(dataWord) << 16) | \
 634:funsape/globalDefines.hpp ****         (wordGetByte2(dataWord) << 8)  | \
 635:funsape/globalDefines.hpp ****         (wordGetByte3(dataWord)))
 636:funsape/globalDefines.hpp **** #define wordGetHword1(dataWord)         (((dataWord) >> 16) & 0x0000FFFF)
 637:funsape/globalDefines.hpp **** #define wordGetHword0(dataWord)         ((dataWord) & 0x0000FFFF)
 638:funsape/globalDefines.hpp **** #define wordSwitchHwords(dataWord)      ((wordGetHword0(dataWord) << 16) | \
 639:funsape/globalDefines.hpp ****         (wordGetHword1(dataWord)))
 640:funsape/globalDefines.hpp **** 
 641:funsape/globalDefines.hpp **** //     ////////////     DATA MANIPULATION (64-BITS WIDE)     ////////////     //
 642:funsape/globalDefines.hpp **** #define dwordGetByte7(dataDword)        (((dataDword) >> 56) & 0x00000000000000FF)
 643:funsape/globalDefines.hpp **** #define dwordGetByte6(dataDword)        (((dataDword) >> 48) & 0x00000000000000FF)
 644:funsape/globalDefines.hpp **** #define dwordGetByte5(dataDword)        (((dataDword) >> 40) & 0x00000000000000FF)
 645:funsape/globalDefines.hpp **** #define dwordGetByte4(dataDword)        (((dataDword) >> 32) & 0x00000000000000FF)
 646:funsape/globalDefines.hpp **** #define dwordGetByte3(dataDword)        (((dataDword) >> 24) & 0x00000000000000FF)
 647:funsape/globalDefines.hpp **** #define dwordGetByte2(dataDword)        (((dataDword) >> 16) & 0x00000000000000FF)
 648:funsape/globalDefines.hpp **** #define dwordGetByte1(dataDword)        (((dataDword) >> 8) & 0x00000000000000FF)
 649:funsape/globalDefines.hpp **** #define dwordGetByte0(dataDword)        ((dataDword) & 0x00000000000000FF)
 650:funsape/globalDefines.hpp **** #define dwordSwitchBytes(dataDword)     ((dwordGetByte0(dataDword) << 56)  | \
 651:funsape/globalDefines.hpp ****         (dwordGetByte1(dataDword) << 48) | \
 652:funsape/globalDefines.hpp ****         (dwordGetByte2(dataDword) << 40) | \
 653:funsape/globalDefines.hpp ****         (dwordGetByte3(dataDword) << 32) | \
 654:funsape/globalDefines.hpp ****         (dwordGetByte4(dataDword) << 24) | \
 655:funsape/globalDefines.hpp ****         (dwordGetByte5(dataDword) << 16) | \
 656:funsape/globalDefines.hpp ****         (dwordGetByte6(dataDword) << 8)  | \
 657:funsape/globalDefines.hpp ****         (dwordGetByte7(dataDword)))
 658:funsape/globalDefines.hpp **** #define dwordGetHword3(dataDword)       ((dataDword >> 48) & 0x000000000000FFFF)
 659:funsape/globalDefines.hpp **** #define dwordGetHword2(dataDword)       ((dataDword >> 32) & 0x000000000000FFFF)
 660:funsape/globalDefines.hpp **** #define dwordGetHword1(dataDword)       ((dataDword >> 16) & 0x000000000000FFFF)
 661:funsape/globalDefines.hpp **** #define dwordGetHword0(dataDword)       ((dataDword >> 0) & 0x000000000000FFFF)
 662:funsape/globalDefines.hpp **** #define dwordSwitchHwords(dataDword)    ((dwordGetHword0(dataDword) << 48)  | \
 663:funsape/globalDefines.hpp ****         (dwordGetHword1(dataDword) << 32) | \
 664:funsape/globalDefines.hpp ****         (dwordGetHword2(dataDword) << 16) | \
 665:funsape/globalDefines.hpp ****         (dwordGetHword3(dataDword)))
 666:funsape/globalDefines.hpp **** #define dwordGetWord1(dataDword)         (((dataDword) >> 32) & 0x00000000FFFFFFFF)
 667:funsape/globalDefines.hpp **** #define dwordGetWord0(dataDword)         ((dataDword) & 0x00000000FFFFFFFF)
 668:funsape/globalDefines.hpp **** #define dwordSwitchWords(dataDword)     ((dwordGetWord0(dataDword) << 32)  | \
 669:funsape/globalDefines.hpp ****         (dwordGetWord1(dataDword)))
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 13


 670:funsape/globalDefines.hpp **** 
 671:funsape/globalDefines.hpp **** //     /////////////////////     TRUNCATE VALUES    /////////////////////     //
 672:funsape/globalDefines.hpp **** #define getMaximumOf(var1, var2)        (       \
 673:funsape/globalDefines.hpp ****         ((var1) > (var2))                       \
 674:funsape/globalDefines.hpp ****         ? (var1)                                \
 675:funsape/globalDefines.hpp ****         : (var2))
 676:funsape/globalDefines.hpp **** #define getMinimumOf(var1, var2)        (       \
 677:funsape/globalDefines.hpp ****         ((var1) < (var2))                       \
 678:funsape/globalDefines.hpp ****         ? (var1)                                \
 679:funsape/globalDefines.hpp ****         : (var2))
 680:funsape/globalDefines.hpp **** #define truncateBetween(var, min, max)  (       \
 681:funsape/globalDefines.hpp ****         ((var) < (min))                         \
 682:funsape/globalDefines.hpp ****         ? (min)                                 \
 683:funsape/globalDefines.hpp ****         : (((var) > (max))                      \
 684:funsape/globalDefines.hpp ****                 ? (max)                         \
 685:funsape/globalDefines.hpp ****                 : (var)                         \
 686:funsape/globalDefines.hpp ****         ))
 687:funsape/globalDefines.hpp **** 
 688:funsape/globalDefines.hpp **** //     //////////////////////     STRINGIFYING    ///////////////////////     //
 689:funsape/globalDefines.hpp **** #define stringifyName(constant)         #constant
 690:funsape/globalDefines.hpp **** #define stringifyValue(constant)        stringifyName(constant)
 691:funsape/globalDefines.hpp **** 
 692:funsape/globalDefines.hpp **** // =============================================================================
 693:funsape/globalDefines.hpp **** // Extern global variables
 694:funsape/globalDefines.hpp **** // =============================================================================
 695:funsape/globalDefines.hpp **** 
 696:funsape/globalDefines.hpp **** // NONE
 697:funsape/globalDefines.hpp **** 
 698:funsape/globalDefines.hpp **** // =============================================================================
 699:funsape/globalDefines.hpp **** // Inline functions declaration
 700:funsape/globalDefines.hpp **** // =============================================================================
 701:funsape/globalDefines.hpp **** 
 702:funsape/globalDefines.hpp **** //     ///////////////////     CHARACTER HANDLING    ////////////////////     //
 703:funsape/globalDefines.hpp **** char_t inlined toLowerCase(cchar_t character_p);
 704:funsape/globalDefines.hpp **** char_t inlined toUpperCase(cchar_t character_p);
 705:funsape/globalDefines.hpp **** 
 706:funsape/globalDefines.hpp **** //     /////////////////////     DATA VALIDITY     //////////////////////     //
 707:funsape/globalDefines.hpp **** bool_t inlined isAsciiLowerCaseLetter(cchar_t character_p);
 708:funsape/globalDefines.hpp **** bool_t inlined isAsciiUpperCaseLetter(cchar_t character_p);
 709:funsape/globalDefines.hpp **** bool_t inlined isAsciiCommand(cchar_t character_p);
 710:funsape/globalDefines.hpp **** bool_t inlined isAsciiLetter(cchar_t character_p);
 711:funsape/globalDefines.hpp **** bool_t inlined isAsciiNumber(cchar_t character_p);
 712:funsape/globalDefines.hpp **** bool_t inlined isAsciiSymbol(cchar_t character_p);
 713:funsape/globalDefines.hpp **** 
 714:funsape/globalDefines.hpp **** //     /////////////////////     SYSTEM ACTIONS    //////////////////////     //
 715:funsape/globalDefines.hpp **** void inlined die(Error errorCode_p);
 716:funsape/globalDefines.hpp **** void inlined doNop(void);
 717:funsape/globalDefines.hpp **** void inlined doNothing(void);
 718:funsape/globalDefines.hpp **** void inlined systemHalt(void (*function_p)(void) = nullptr);
 719:funsape/globalDefines.hpp **** 
 720:funsape/globalDefines.hpp **** // =============================================================================
 721:funsape/globalDefines.hpp **** // Inline functions definitions
 722:funsape/globalDefines.hpp **** // =============================================================================
 723:funsape/globalDefines.hpp **** 
 724:funsape/globalDefines.hpp **** //     ///////////////////     CHARACTER HANDLING    ////////////////////     //
 725:funsape/globalDefines.hpp **** char_t inlined toLowerCase(cchar_t character_p)
 726:funsape/globalDefines.hpp **** {
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 14


 727:funsape/globalDefines.hpp ****     return ((isAsciiUpperCaseLetter(character_p)) ? (character_p + 0x20) : character_p);
 728:funsape/globalDefines.hpp **** }
 729:funsape/globalDefines.hpp **** 
 730:funsape/globalDefines.hpp **** char_t inlined toUpperCase(cchar_t character_p)
 731:funsape/globalDefines.hpp **** {
 732:funsape/globalDefines.hpp ****     return ((isAsciiLowerCaseLetter(character_p)) ? (character_p - 0x20) : character_p);
 733:funsape/globalDefines.hpp **** }
 734:funsape/globalDefines.hpp **** 
 735:funsape/globalDefines.hpp **** //     /////////////////////     DATA VALIDITY     //////////////////////     //
 736:funsape/globalDefines.hpp **** bool_t inlined isAsciiLowerCaseLetter(cchar_t character_p)
 737:funsape/globalDefines.hpp **** {
 738:funsape/globalDefines.hpp ****     return ((bool_t)(((character_p >= 'a') && (character_p <= 'z')) ? true : false));
 739:funsape/globalDefines.hpp **** }
 740:funsape/globalDefines.hpp **** 
 741:funsape/globalDefines.hpp **** bool_t inlined isAsciiUpperCaseLetter(cchar_t character_p)
 742:funsape/globalDefines.hpp **** {
 743:funsape/globalDefines.hpp ****     return ((bool_t)(((character_p >= 'A') && (character_p <= 'Z')) ? true : false));
 744:funsape/globalDefines.hpp **** }
 745:funsape/globalDefines.hpp **** 
 746:funsape/globalDefines.hpp **** bool_t inlined isAsciiCommand(cchar_t character_p)
 747:funsape/globalDefines.hpp **** {
 748:funsape/globalDefines.hpp ****     return ((bool_t)((character_p < ' ') ? true : false));
 749:funsape/globalDefines.hpp **** }
 750:funsape/globalDefines.hpp **** 
 751:funsape/globalDefines.hpp **** bool_t inlined isAsciiLetter(cchar_t character_p)
 752:funsape/globalDefines.hpp **** {
 753:funsape/globalDefines.hpp ****     return ((bool_t)((isAsciiLowerCaseLetter(character_p) || (isAsciiUpperCaseLetter(character_p)) 
 754:funsape/globalDefines.hpp **** }
 755:funsape/globalDefines.hpp **** 
 756:funsape/globalDefines.hpp **** bool_t inlined isAsciiNumber(cchar_t character_p)
 757:funsape/globalDefines.hpp **** {
 758:funsape/globalDefines.hpp ****     return ((bool_t)(((character_p >= '0') && (character_p <= '9')) ? true : false));
 759:funsape/globalDefines.hpp **** }
 760:funsape/globalDefines.hpp **** 
 761:funsape/globalDefines.hpp **** bool_t inlined isAsciiSymbol(cchar_t character_p)
 762:funsape/globalDefines.hpp **** {
 763:funsape/globalDefines.hpp ****     return ((bool_t)(((!isAsciiNumber(character_p)) && (!isAsciiCommand(character_p)) &&
 764:funsape/globalDefines.hpp ****                                     (!isAsciiLetter(character_p))) ? true : false));
 765:funsape/globalDefines.hpp **** }
 766:funsape/globalDefines.hpp **** 
 767:funsape/globalDefines.hpp **** //     /////////////////////     SYSTEM ACTIONS    //////////////////////     //
 768:funsape/globalDefines.hpp **** void inlined die(Error errorCode_p)
 769:funsape/globalDefines.hpp **** {
 770:funsape/globalDefines.hpp ****     printf("Failed with error=%u (0x%04x).\r", (cuint16_t)errorCode_p, (cuint16_t)errorCode_p);
 771:funsape/globalDefines.hpp ****     systemHalt();
 772:funsape/globalDefines.hpp **** 
 773:funsape/globalDefines.hpp ****     return;
 774:funsape/globalDefines.hpp **** }
 775:funsape/globalDefines.hpp **** 
 776:funsape/globalDefines.hpp **** void inlined doNop(void)
 777:funsape/globalDefines.hpp **** {
 778:funsape/globalDefines.hpp ****     asm volatile("nop");
 779:funsape/globalDefines.hpp **** 
 780:funsape/globalDefines.hpp ****     return;
 781:funsape/globalDefines.hpp **** }
 782:funsape/globalDefines.hpp **** 
 783:funsape/globalDefines.hpp **** void inlined doNothing(void)
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 15


 784:funsape/globalDefines.hpp **** {
 785:funsape/globalDefines.hpp ****     return;
 786:funsape/globalDefines.hpp **** }
 787:funsape/globalDefines.hpp **** 
 788:funsape/globalDefines.hpp **** void inlined systemHalt(void (*function_p)(void))
 789:funsape/globalDefines.hpp **** {
 790:funsape/globalDefines.hpp ****     if(isPointerValid(function_p)) {
 791:funsape/globalDefines.hpp ****         function_p();
 792:funsape/globalDefines.hpp ****     }
 793:funsape/globalDefines.hpp ****     while(1) {
 794:funsape/globalDefines.hpp ****         doNothing();
 795:funsape/globalDefines.hpp ****     }
 796:funsape/globalDefines.hpp **** 
 797:funsape/globalDefines.hpp ****     return;
 798:funsape/globalDefines.hpp **** }
 799:funsape/globalDefines.hpp **** 
 800:funsape/globalDefines.hpp **** // =============================================================================
 801:funsape/globalDefines.hpp **** // Public functions weakly defined
 802:funsape/globalDefines.hpp **** // =============================================================================
 803:funsape/globalDefines.hpp **** 
 804:funsape/globalDefines.hpp **** #define delayMs(time_p)                 _delay_ms(time_p)
 805:funsape/globalDefines.hpp **** #define delayUs(time_p)                 _delay_us(time_p)
 806:funsape/globalDefines.hpp **** 
 807:funsape/globalDefines.hpp **** weakened uint32_t getTick(void)
 808:funsape/globalDefines.hpp **** {
  17               		.loc 1 808 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 809:funsape/globalDefines.hpp ****     // TODO
 810:funsape/globalDefines.hpp ****     return 0;
  23               		.loc 1 810 5 view .LVU1
 811:funsape/globalDefines.hpp **** }
  24               		.loc 1 811 1 is_stmt 0 view .LVU2
  25 0000 60E0      		ldi r22,0
  26 0002 70E0      		ldi r23,0
  27 0004 CB01      		movw r24,r22
  28               	/* epilogue start */
  29 0006 0895      		ret
  30               		.cfi_endproc
  31               	.LFE32:
  33               		.section	.rodata.main.str1.1,"aMS",@progbits,1
  34               	.LC0:
  35 0000 436C 6F63 		.string	"Clock Example "
  35      6B20 4578 
  35      616D 706C 
  35      6520 00
  36               	.LC1:
  37 000f 7631 2E30 		.string	"v1.0 build238 "
  37      2062 7569 
  37      6C64 3233 
  37      3820 00
  38               	.LC2:
  39 001e 2575 0A0A 		.string	"%u\n\n"
  39      00
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 16


  40               		.section	.text.main,"ax",@progbits
  41               	.global	main
  43               	main:
  44               	.LFB36:
  45               		.file 2 "main.cpp"
   1:main.cpp      **** 
   2:main.cpp      **** #include <avr/io.h>
   3:main.cpp      **** #include <avr/io.h>
   4:main.cpp      **** #include <avr/interrupt.h>
   5:main.cpp      **** #include <util/delay.h>
   6:main.cpp      **** #include "funsape/globalDefines.hpp"
   7:main.cpp      **** #include "funsape/pinout.hpp"
   8:main.cpp      **** #include "funsape/device/hd44780.hpp"
   9:main.cpp      **** #include "funsape/peripheral/int0.hpp"
  10:main.cpp      **** 
  11:main.cpp      **** #define F_CPU 16000000UL
  12:main.cpp      **** #define LEDDIR  DDRC
  13:main.cpp      **** #define LEDOUT  PORTC
  14:main.cpp      **** #define LEDBIT  PC0
  15:main.cpp      **** 
  16:main.cpp      **** #define LCD_DATA_DIR    DDRB
  17:main.cpp      **** #define LCD_DATA_OUT    PORTB
  18:main.cpp      **** #define LCD_DATA_FIRST  PB0
  19:main.cpp      **** 
  20:main.cpp      **** #define LCD_CONTROL_DIR DDRB
  21:main.cpp      **** #define LCD_CONTROL_OUT PORTB
  22:main.cpp      **** #define LCD_CONTROL_E   PB4
  23:main.cpp      **** #define LCD_CONTROL_RS  PB5
  24:main.cpp      **** 
  25:main.cpp      **** typedef union {
  26:main.cpp      ****     struct {
  27:main.cpp      ****         bool_t updateDisplay    : 1;
  28:main.cpp      ****         bool_t readRTC          : 1;
  29:main.cpp      ****         uint8_t unusedBits      : 6;
  30:main.cpp      ****     };
  31:main.cpp      ****     uint8_t allFlags;
  32:main.cpp      **** } systemflags_t;
  33:main.cpp      **** 
  34:main.cpp      **** //global vars
  35:main.cpp      **** volatile systemflags_t systemFlags;
  36:main.cpp      **** uint8_t counter = 0;
  37:main.cpp      **** 
  38:main.cpp      **** 
  39:main.cpp      **** 
  40:main.cpp      **** int main()
  41:main.cpp      **** {
  46               		.loc 2 41 1 is_stmt 1 view -0
  47               		.cfi_startproc
  48 0000 CDB7      		in r28,__SP_L__
  49 0002 DEB7      		in r29,__SP_H__
  50               		.cfi_def_cfa_register 28
  51 0004 6297      		sbiw r28,18
  52               		.cfi_def_cfa_offset 20
  53 0006 0FB6      		in __tmp_reg__,__SREG__
  54 0008 F894      		cli
  55 000a DEBF      		out __SP_H__,r29
  56 000c 0FBE      		out __SREG__,__tmp_reg__
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 17


  57 000e CDBF      		out __SP_L__,r28
  58               	/* prologue: function */
  59               	/* frame size = 18 */
  60               	/* stack size = 18 */
  61               	.L__stack_usage = 18
  42:main.cpp      ****     //local variables
  43:main.cpp      ****     Hd44780 lcd;
  62               		.loc 2 43 5 view .LVU4
  63               		.loc 2 43 13 is_stmt 0 view .LVU5
  64 0010 CE01      		movw r24,r28
  65 0012 0196      		adiw r24,1
  66 0014 0E94 0000 		call _ZN7Hd44780C1Ev
  67               	.LVL0:
  44:main.cpp      **** 
  45:main.cpp      ****     //clear system flags
  46:main.cpp      ****     systemFlags.allFlags = 0;
  68               		.loc 2 46 5 is_stmt 1 view .LVU6
  69               		.loc 2 46 26 is_stmt 0 view .LVU7
  70 0018 1092 0000 		sts systemFlags,__zero_reg__
  47:main.cpp      **** 
  48:main.cpp      ****     //Config LCD for test
  49:main.cpp      ****     setBit(LEDDIR, LEDBIT);
  71               		.loc 2 49 5 is_stmt 1 view .LVU8
  72 001c 87B1      		in r24,0x7
  73 001e 8160      		ori r24,lo8(1)
  74 0020 87B9      		out 0x7,r24
  50:main.cpp      ****     clrBit(LEDOUT, LEDBIT);
  75               		.loc 2 50 5 view .LVU9
  76 0022 88B1      		in r24,0x8
  77 0024 8E7F      		andi r24,lo8(-2)
  78 0026 88B9      		out 0x8,r24
  51:main.cpp      **** 
  52:main.cpp      ****     //configure LCD
  53:main.cpp      ****     lcd.controlPortSet(&LCD_CONTROL_DIR, LCD_CONTROL_E, LCD_CONTROL_RS);
  79               		.loc 2 53 5 view .LVU10
  80               		.loc 2 53 23 is_stmt 0 view .LVU11
  81 0028 00E0      		ldi r16,0
  82 002a 25E0      		ldi r18,lo8(5)
  83 002c 44E0      		ldi r20,lo8(4)
  84 002e 64E2      		ldi r22,lo8(36)
  85 0030 70E0      		ldi r23,0
  86 0032 CE01      		movw r24,r28
  87 0034 0196      		adiw r24,1
  88 0036 0E94 0000 		call _ZN7Hd4478014controlPortSetEPVhhhh
  89               	.LVL1:
  54:main.cpp      ****     lcd.init(
  90               		.loc 2 54 5 is_stmt 1 view .LVU12
  91               		.loc 2 54 13 is_stmt 0 view .LVU13
  92 003a 21E0      		ldi r18,lo8(1)
  93 003c 40E0      		ldi r20,0
  94 003e 6CE6      		ldi r22,lo8(108)
  95 0040 CE01      		movw r24,r28
  96 0042 0196      		adiw r24,1
  97 0044 0E94 0000 		call _ZN7Hd447804initENS_4SizeENS_4FontEbb
  98               	.LVL2:
  55:main.cpp      ****             Hd44780::Size::LCD_16X2,
  56:main.cpp      ****             Hd44780::Font::FONT_5X8,
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 18


  57:main.cpp      ****             true,
  58:main.cpp      ****             false);
  59:main.cpp      ****     //show splash screen
  60:main.cpp      ****     lcd.stdio();
  99               		.loc 2 60 5 is_stmt 1 view .LVU14
 100               		.loc 2 60 14 is_stmt 0 view .LVU15
 101 0048 CE01      		movw r24,r28
 102 004a 0196      		adiw r24,1
 103 004c 0E94 0000 		call _ZN7Hd447805stdioEv
 104               	.LVL3:
  61:main.cpp      ****     printf("Clock Example \n");
 105               		.loc 2 61 5 is_stmt 1 view .LVU16
 106               		.loc 2 61 11 is_stmt 0 view .LVU17
 107 0050 80E0      		ldi r24,lo8(.LC0)
 108 0052 90E0      		ldi r25,hi8(.LC0)
 109 0054 0E94 0000 		call puts
 110               	.LVL4:
  62:main.cpp      ****     printf("v1.0 build238 \n");
 111               		.loc 2 62 5 is_stmt 1 view .LVU18
 112               		.loc 2 62 11 is_stmt 0 view .LVU19
 113 0058 80E0      		ldi r24,lo8(.LC1)
 114 005a 90E0      		ldi r25,hi8(.LC1)
 115 005c 0E94 0000 		call puts
 116               	.LVL5:
  63:main.cpp      ****     delayMs(2000);
 117               		.loc 2 63 5 is_stmt 1 view .LVU20
 118               	.LBB6:
 119               	.LBI6:
 120               		.file 3 "f:\\importante\\faculdade\\mcc\\vscode-avr-win\\toolchains\\avr-gcc\\avr\\include\\util\\
   1:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    All rights reserved.
   5:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
   6:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
   9:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  12:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      distribution.
  16:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  17:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  21:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 19


  29:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  33:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /* $Id$ */
  34:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  35:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  38:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #  endif
  42:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  44:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #include <inttypes.h>
  45:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #include <math.h>
  47:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  48:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /** \file */
  49:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \code
  51:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     #include <util/delay.h>
  54:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \endcode
  55:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  56:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     used.
  60:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  61:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  70:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     routines linked into the application.
  78:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  79:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  83:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** */
  84:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  85:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 20


  86:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
  89:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  90:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef F_CPU
  91:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /** \ingroup util_delay
  94:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \def F_CPU
  95:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  97:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 103:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     integer value.
 107:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****  */
 108:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 110:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 111:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 114:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 115:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #  include <math.h>
 119:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 120:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 121:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /**
 122:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    \ingroup util_delay
 123:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 124:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 126:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 129:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 131:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 137:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 142:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 21


 143:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    microseconds of delay.
 146:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 147:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    respectively.
 151:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 152:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    \note
 153:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 154:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    not available to the compiler then.
 163:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 164:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****  */
 165:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** void
 166:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** _delay_ms(double __ms)
 121               		.loc 3 166 1 view .LVU21
 122               	.LBB7:
 167:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** {
 168:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	double __tmp ;
 123               		.loc 3 168 2 view .LVU22
 169:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
 124               		.loc 3 172 2 view .LVU23
 173:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 125               		.loc 3 173 2 view .LVU24
 174:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 126               		.loc 3 174 2 view .LVU25
 175:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 176:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 179:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 182:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	#else
 183:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 		//round up by default
 184:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 127               		.loc 3 184 3 view .LVU26
 185:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	#endif
 186:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 187:f:\importante\faculdade\mcc\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 128               		.loc 3 187 2 view .LVU27
 129               		.loc 3 187 28 is_stmt 0 view .LVU28
 130 0060 2FE7      		ldi r18,lo8(399999)
 131 0062 8AE1      		ldi r24,hi8(399999)
 132 0064 96E0      		ldi r25,hlo8(399999)
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 22


 133 0066 2150      	1:	subi r18,1
 134 0068 8040      		sbci r24,0
 135 006a 9040      		sbci r25,0
 136 006c 01F4      		brne 1b
 137 006e 00C0      		rjmp .
 138 0070 0000      		nop
 139               	.LVL6:
 140               		.loc 3 187 28 view .LVU29
 141               	.LBE7:
 142               	.LBE6:
  64:main.cpp      ****     lcd.clearScreen();
 143               		.loc 2 64 5 is_stmt 1 view .LVU30
 144               		.loc 2 64 20 is_stmt 0 view .LVU31
 145 0072 CE01      		movw r24,r28
 146 0074 0196      		adiw r24,1
 147 0076 0E94 0000 		call _ZN7Hd4478011clearScreenEv
 148               	.LVL7:
  65:main.cpp      ****     systemFlags.updateDisplay = true;
 149               		.loc 2 65 5 is_stmt 1 view .LVU32
 150               		.loc 2 65 31 is_stmt 0 view .LVU33
 151 007a 8091 0000 		lds r24,systemFlags
 152 007e 8160      		ori r24,lo8(1<<0)
 153 0080 8093 0000 		sts systemFlags,r24
  66:main.cpp      **** 
  67:main.cpp      ****     //config int0
  68:main.cpp      ****     int0.init(Int0::SenseMode::FALLING_EDGE);
 154               		.loc 2 68 5 is_stmt 1 view .LVU34
 155               		.loc 2 68 14 is_stmt 0 view .LVU35
 156 0084 62E0      		ldi r22,lo8(2)
 157 0086 80E0      		ldi r24,lo8(int0)
 158 0088 90E0      		ldi r25,hi8(int0)
 159 008a 0E94 0000 		call _ZN4Int04initENS_9SenseModeE
 160               	.LVL8:
  69:main.cpp      ****     int0.activateInterrupt();
 161               		.loc 2 69 5 is_stmt 1 view .LVU36
 162               	.LBB8:
 163               	.LBI8:
 164               		.file 4 "funsape/peripheral/int0.hpp"
   1:funsape/peripheral/int0.hpp **** //!
   2:funsape/peripheral/int0.hpp **** //! \file           int0.hpp
   3:funsape/peripheral/int0.hpp **** //! \brief          External Interrupt INT0 peripheral control for the FunSAPE
   4:funsape/peripheral/int0.hpp **** //!                     AVR8 Library
   5:funsape/peripheral/int0.hpp **** //! \author         Leandro Schwarz (bladabuska+funsapeavr8lib@gmail.com)
   6:funsape/peripheral/int0.hpp **** //! \date           2023-05-07
   7:funsape/peripheral/int0.hpp **** //! \version        23.04
   8:funsape/peripheral/int0.hpp **** //! \copyright      license
   9:funsape/peripheral/int0.hpp **** //! \details        External Interrupt INT0 peripheral control for the FunSAPE
  10:funsape/peripheral/int0.hpp **** //!                     AVR8 Library
  11:funsape/peripheral/int0.hpp **** //! \todo           Todo list
  12:funsape/peripheral/int0.hpp **** //!
  13:funsape/peripheral/int0.hpp **** 
  14:funsape/peripheral/int0.hpp **** // =============================================================================
  15:funsape/peripheral/int0.hpp **** // Include guard (START)
  16:funsape/peripheral/int0.hpp **** // =============================================================================
  17:funsape/peripheral/int0.hpp **** 
  18:funsape/peripheral/int0.hpp **** #ifndef __INT0_HPP
  19:funsape/peripheral/int0.hpp **** #define __INT0_HPP                      2304
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 23


  20:funsape/peripheral/int0.hpp **** 
  21:funsape/peripheral/int0.hpp **** // =============================================================================
  22:funsape/peripheral/int0.hpp **** // Dependencies
  23:funsape/peripheral/int0.hpp **** // =============================================================================
  24:funsape/peripheral/int0.hpp **** 
  25:funsape/peripheral/int0.hpp **** //     /////////////////     GLOBAL DEFINITIONS FILE    /////////////////     //
  26:funsape/peripheral/int0.hpp **** #include "../globalDefines.hpp"
  27:funsape/peripheral/int0.hpp **** #if !defined(__GLOBAL_DEFINES_HPP)
  28:funsape/peripheral/int0.hpp **** #    error "Global definitions file is corrupted!"
  29:funsape/peripheral/int0.hpp **** #elif __GLOBAL_DEFINES_HPP != __INT0_HPP
  30:funsape/peripheral/int0.hpp **** #    error "Version mismatch between file header and global definitions file!"
  31:funsape/peripheral/int0.hpp **** #endif
  32:funsape/peripheral/int0.hpp **** 
  33:funsape/peripheral/int0.hpp **** //     //////////////////     LIBRARY DEPENDENCIES     //////////////////     //
  34:funsape/peripheral/int0.hpp **** #include "../util/debug.hpp"
  35:funsape/peripheral/int0.hpp **** #if !defined(__DEBUG_HPP)
  36:funsape/peripheral/int0.hpp **** #   error "Header file (debug.hpp) is corrupted!"
  37:funsape/peripheral/int0.hpp **** #elif __DEBUG_HPP != __INT0_HPP
  38:funsape/peripheral/int0.hpp **** #   error "Version mismatch between header file and library dependency (debug.hpp)!"
  39:funsape/peripheral/int0.hpp **** #endif
  40:funsape/peripheral/int0.hpp **** 
  41:funsape/peripheral/int0.hpp **** // =============================================================================
  42:funsape/peripheral/int0.hpp **** // Undefining previous definitions
  43:funsape/peripheral/int0.hpp **** // =============================================================================
  44:funsape/peripheral/int0.hpp **** 
  45:funsape/peripheral/int0.hpp **** // NONE
  46:funsape/peripheral/int0.hpp **** 
  47:funsape/peripheral/int0.hpp **** // =============================================================================
  48:funsape/peripheral/int0.hpp **** // Constant definitions
  49:funsape/peripheral/int0.hpp **** // =============================================================================
  50:funsape/peripheral/int0.hpp **** 
  51:funsape/peripheral/int0.hpp **** // NONE
  52:funsape/peripheral/int0.hpp **** 
  53:funsape/peripheral/int0.hpp **** // =============================================================================
  54:funsape/peripheral/int0.hpp **** // New data types
  55:funsape/peripheral/int0.hpp **** // =============================================================================
  56:funsape/peripheral/int0.hpp **** 
  57:funsape/peripheral/int0.hpp **** // NONE
  58:funsape/peripheral/int0.hpp **** 
  59:funsape/peripheral/int0.hpp **** // =============================================================================
  60:funsape/peripheral/int0.hpp **** // Interrupt callback functions
  61:funsape/peripheral/int0.hpp **** // =============================================================================
  62:funsape/peripheral/int0.hpp **** 
  63:funsape/peripheral/int0.hpp **** //!
  64:funsape/peripheral/int0.hpp **** //! \brief          INT0 interrupt callback function
  65:funsape/peripheral/int0.hpp **** //! \details        This function is called when the INT0 interrupt is treated.
  66:funsape/peripheral/int0.hpp **** //!                     It is a weak function that can be overwritten by user
  67:funsape/peripheral/int0.hpp **** //!                     code.
  68:funsape/peripheral/int0.hpp **** //!
  69:funsape/peripheral/int0.hpp **** void int0InterruptCallback();
  70:funsape/peripheral/int0.hpp **** 
  71:funsape/peripheral/int0.hpp **** // =============================================================================
  72:funsape/peripheral/int0.hpp **** // Int0 Class
  73:funsape/peripheral/int0.hpp **** // =============================================================================
  74:funsape/peripheral/int0.hpp **** 
  75:funsape/peripheral/int0.hpp **** //!
  76:funsape/peripheral/int0.hpp **** //! \brief          Int0 class
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 24


  77:funsape/peripheral/int0.hpp **** //! \details        Int0 class
  78:funsape/peripheral/int0.hpp **** //!
  79:funsape/peripheral/int0.hpp **** class Int0
  80:funsape/peripheral/int0.hpp **** {
  81:funsape/peripheral/int0.hpp ****     // -------------------------------------------------------------------------
  82:funsape/peripheral/int0.hpp ****     // New data types ----------------------------------------------------------
  83:funsape/peripheral/int0.hpp **** public:
  84:funsape/peripheral/int0.hpp **** 
  85:funsape/peripheral/int0.hpp ****     //     /////////////////     INT0 Trigger Sense     /////////////////     //
  86:funsape/peripheral/int0.hpp ****     //!
  87:funsape/peripheral/int0.hpp ****     //! \brief      Sense Trigger enumeration
  88:funsape/peripheral/int0.hpp ****     //! \details    Sense Trigger events associated with INT0.
  89:funsape/peripheral/int0.hpp ****     //! \warning    The value associate with the symbolic names may change
  90:funsape/peripheral/int0.hpp ****     //!                 between builds and might not reflect the register/bits
  91:funsape/peripheral/int0.hpp ****     //!                 real values. In order to ensure compatibility between
  92:funsape/peripheral/int0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
  93:funsape/peripheral/int0.hpp ****     //!                 the VALUE.
  94:funsape/peripheral/int0.hpp ****     //!
  95:funsape/peripheral/int0.hpp ****     enum class SenseMode : uint8_t {
  96:funsape/peripheral/int0.hpp ****         LOW_LEVEL           = 0,    //!< Trigger interrupt continuously while pin is in logic low l
  97:funsape/peripheral/int0.hpp ****         BOTH_EDGES          = 1,    //!< Trigger interrupt at both edges
  98:funsape/peripheral/int0.hpp ****         FALLING_EDGE        = 2,    //!< Trigger interrupt at falling edge
  99:funsape/peripheral/int0.hpp ****         RISING_EDGE         = 3,    //!< Trigger interrupt rising edge
 100:funsape/peripheral/int0.hpp ****     };
 101:funsape/peripheral/int0.hpp **** 
 102:funsape/peripheral/int0.hpp ****     // -------------------------------------------------------------------------
 103:funsape/peripheral/int0.hpp ****     // Constructors ------------------------------------------------------------
 104:funsape/peripheral/int0.hpp **** public:
 105:funsape/peripheral/int0.hpp **** 
 106:funsape/peripheral/int0.hpp ****     //!
 107:funsape/peripheral/int0.hpp ****     //! \brief      Int0 class constructor
 108:funsape/peripheral/int0.hpp ****     //! \details    Creates an Int0 object
 109:funsape/peripheral/int0.hpp ****     //!
 110:funsape/peripheral/int0.hpp ****     Int0(
 111:funsape/peripheral/int0.hpp ****             void
 112:funsape/peripheral/int0.hpp ****     );
 113:funsape/peripheral/int0.hpp **** 
 114:funsape/peripheral/int0.hpp ****     //!
 115:funsape/peripheral/int0.hpp ****     //! \brief      Int0 class destructor
 116:funsape/peripheral/int0.hpp ****     //! \details    Destroys an Int0 object
 117:funsape/peripheral/int0.hpp ****     //!
 118:funsape/peripheral/int0.hpp ****     ~Int0(
 119:funsape/peripheral/int0.hpp ****             void
 120:funsape/peripheral/int0.hpp ****     );
 121:funsape/peripheral/int0.hpp **** 
 122:funsape/peripheral/int0.hpp ****     // -------------------------------------------------------------------------
 123:funsape/peripheral/int0.hpp ****     // Methods -----------------------------------------------------------------
 124:funsape/peripheral/int0.hpp **** public:
 125:funsape/peripheral/int0.hpp ****     //     ///////////////////     INITIALIZATION    ////////////////////     //
 126:funsape/peripheral/int0.hpp **** 
 127:funsape/peripheral/int0.hpp ****     //!
 128:funsape/peripheral/int0.hpp ****     //! \brief      Initializes the INT0 module
 129:funsape/peripheral/int0.hpp ****     //! \details    Initializes the INT0 module.
 130:funsape/peripheral/int0.hpp ****     //! \param      senseMode_p         Trigger sense mode
 131:funsape/peripheral/int0.hpp ****     //! \return     bool_t              True on success / False on failure
 132:funsape/peripheral/int0.hpp ****     //!
 133:funsape/peripheral/int0.hpp ****     bool_t init(
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 25


 134:funsape/peripheral/int0.hpp ****             SenseMode senseMode_p
 135:funsape/peripheral/int0.hpp ****     );
 136:funsape/peripheral/int0.hpp **** 
 137:funsape/peripheral/int0.hpp ****     //!
 138:funsape/peripheral/int0.hpp ****     //! \brief      Configures the trigger sense mode
 139:funsape/peripheral/int0.hpp ****     //! \details    Configures the trigger sense mode.
 140:funsape/peripheral/int0.hpp ****     //! \param      senseMode_p         Trigger sense mode
 141:funsape/peripheral/int0.hpp ****     //! \return     bool_t              True on success / False on failure
 142:funsape/peripheral/int0.hpp ****     //!
 143:funsape/peripheral/int0.hpp ****     bool_t setSenseMode(
 144:funsape/peripheral/int0.hpp ****             SenseMode senseMode_p
 145:funsape/peripheral/int0.hpp ****     );
 146:funsape/peripheral/int0.hpp **** 
 147:funsape/peripheral/int0.hpp ****     //     /////////////////     CONTROL AND STATUS    //////////////////     //
 148:funsape/peripheral/int0.hpp **** 
 149:funsape/peripheral/int0.hpp ****     //!
 150:funsape/peripheral/int0.hpp ****     //! \brief      Returns the last error
 151:funsape/peripheral/int0.hpp ****     //! \details    Returns the last error.
 152:funsape/peripheral/int0.hpp ****     //! \return     Error               Error status of the last operation
 153:funsape/peripheral/int0.hpp ****     //!
 154:funsape/peripheral/int0.hpp ****     Error           getLastError(
 155:funsape/peripheral/int0.hpp ****             void
 156:funsape/peripheral/int0.hpp ****     );
 157:funsape/peripheral/int0.hpp **** 
 158:funsape/peripheral/int0.hpp ****     //     //////////////////////    INTERRUPT     //////////////////////     //
 159:funsape/peripheral/int0.hpp **** 
 160:funsape/peripheral/int0.hpp ****     //!
 161:funsape/peripheral/int0.hpp ****     //! \brief      Activates interrupt
 162:funsape/peripheral/int0.hpp ****     //! \details    Activates interrupt.
 163:funsape/peripheral/int0.hpp ****     //!
 164:funsape/peripheral/int0.hpp ****     void inlined activateInterrupt(
 165:funsape/peripheral/int0.hpp ****             void
 166:funsape/peripheral/int0.hpp ****     );
 167:funsape/peripheral/int0.hpp **** 
 168:funsape/peripheral/int0.hpp ****     //!
 169:funsape/peripheral/int0.hpp ****     //! \brief      Clears interrupt flag
 170:funsape/peripheral/int0.hpp ****     //! \details    Clears interrupt flag.
 171:funsape/peripheral/int0.hpp ****     //!
 172:funsape/peripheral/int0.hpp ****     void inlined clearInterruptRequest(
 173:funsape/peripheral/int0.hpp ****             void
 174:funsape/peripheral/int0.hpp ****     );
 175:funsape/peripheral/int0.hpp **** 
 176:funsape/peripheral/int0.hpp ****     //!
 177:funsape/peripheral/int0.hpp ****     //! \brief      Deactivates interrupt
 178:funsape/peripheral/int0.hpp ****     //! \details    Deactivates interrupt.
 179:funsape/peripheral/int0.hpp ****     //!
 180:funsape/peripheral/int0.hpp ****     void inlined deactivateInterrupt(
 181:funsape/peripheral/int0.hpp ****             void
 182:funsape/peripheral/int0.hpp ****     );
 183:funsape/peripheral/int0.hpp **** 
 184:funsape/peripheral/int0.hpp ****     // -------------------------------------------------------------------------
 185:funsape/peripheral/int0.hpp ****     // Properties --------------------------------------------------------------
 186:funsape/peripheral/int0.hpp **** private:
 187:funsape/peripheral/int0.hpp ****     bool_t          _isInitialized      : 1;
 188:funsape/peripheral/int0.hpp ****     SenseMode       _senseMode;
 189:funsape/peripheral/int0.hpp ****     Error           _lastError;
 190:funsape/peripheral/int0.hpp **** }; // class Int0
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 26


 191:funsape/peripheral/int0.hpp **** 
 192:funsape/peripheral/int0.hpp **** // =============================================================================
 193:funsape/peripheral/int0.hpp **** // Inlined class functions
 194:funsape/peripheral/int0.hpp **** // =============================================================================
 195:funsape/peripheral/int0.hpp **** 
 196:funsape/peripheral/int0.hpp **** //     ////////////////////////    INTERRUPT     ////////////////////////     //
 197:funsape/peripheral/int0.hpp **** void inlined Int0::activateInterrupt(void)
 165               		.loc 4 197 14 view .LVU37
 166               	.LBB9:
 198:funsape/peripheral/int0.hpp **** {
 199:funsape/peripheral/int0.hpp ****     setBit(EIMSK, INT0);
 167               		.loc 4 199 5 view .LVU38
 168 008e 8DB3      		in r24,0x1d
 169 0090 8160      		ori r24,lo8(1)
 170 0092 8DBB      		out 0x1d,r24
 200:funsape/peripheral/int0.hpp ****     return;
 171               		.loc 4 200 5 view .LVU39
 172 0094 00C0      		rjmp .L4
 173               	.L6:
 174               	.LBE9:
 175               	.LBE8:
  70:main.cpp      **** 
  71:main.cpp      ****     while(1) {
  72:main.cpp      ****         //event machine
  73:main.cpp      ****         if(systemFlags.updateDisplay == true) {
  74:main.cpp      ****             //updates display
  75:main.cpp      ****             printf("%u\n\n", counter);
 176               		.loc 2 75 13 view .LVU40
 177               		.loc 2 75 19 is_stmt 0 view .LVU41
 178 0096 8091 0000 		lds r24,counter
 179 009a 1F92      		push __zero_reg__
 180 009c 8F93      		push r24
 181 009e 80E0      		ldi r24,lo8(.LC2)
 182 00a0 90E0      		ldi r25,hi8(.LC2)
 183 00a2 9F93      		push r25
 184 00a4 8F93      		push r24
 185 00a6 0E94 0000 		call printf
 186               	.LVL9:
  76:main.cpp      ****             systemFlags.updateDisplay = false;
 187               		.loc 2 76 13 is_stmt 1 view .LVU42
 188               		.loc 2 76 39 is_stmt 0 view .LVU43
 189 00aa 8091 0000 		lds r24,systemFlags
 190 00ae 8E7F      		andi r24,lo8(~(1<<0))
 191 00b0 8093 0000 		sts systemFlags,r24
 192 00b4 0F90      		pop __tmp_reg__
 193 00b6 0F90      		pop __tmp_reg__
 194 00b8 0F90      		pop __tmp_reg__
 195 00ba 0F90      		pop __tmp_reg__
 196 00bc 00C0      		rjmp .L3
 197               	.L7:
  77:main.cpp      ****         }
  78:main.cpp      ****         if(systemFlags.readRTC) {
  79:main.cpp      ****             //read rtc
  80:main.cpp      ****             counter++;
 198               		.loc 2 80 13 is_stmt 1 view .LVU44
 199               		.loc 2 80 20 is_stmt 0 view .LVU45
 200 00be 8091 0000 		lds r24,counter
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 27


 201 00c2 8F5F      		subi r24,lo8(-(1))
 202 00c4 8093 0000 		sts counter,r24
  81:main.cpp      ****             systemFlags.updateDisplay = true;
 203               		.loc 2 81 13 is_stmt 1 view .LVU46
 204               		.loc 2 81 39 is_stmt 0 view .LVU47
 205 00c8 8091 0000 		lds r24,systemFlags
 206 00cc 8160      		ori r24,lo8(1<<0)
 207 00ce 8093 0000 		sts systemFlags,r24
  82:main.cpp      ****             //clar rtc flag
  83:main.cpp      ****             systemFlags.readRTC = false;
 208               		.loc 2 83 13 is_stmt 1 view .LVU48
 209               		.loc 2 83 33 is_stmt 0 view .LVU49
 210 00d2 8091 0000 		lds r24,systemFlags
 211 00d6 8D7F      		andi r24,lo8(~(1<<1))
 212 00d8 8093 0000 		sts systemFlags,r24
 213               	.L4:
  71:main.cpp      ****         //event machine
 214               		.loc 2 71 5 is_stmt 1 view .LVU50
  73:main.cpp      ****             //updates display
 215               		.loc 2 73 9 view .LVU51
  73:main.cpp      ****             //updates display
 216               		.loc 2 73 24 is_stmt 0 view .LVU52
 217 00dc 8091 0000 		lds r24,systemFlags
  73:main.cpp      ****             //updates display
 218               		.loc 2 73 9 view .LVU53
 219 00e0 80FD      		sbrc r24,0
 220 00e2 00C0      		rjmp .L6
 221               	.L3:
  78:main.cpp      ****             //read rtc
 222               		.loc 2 78 9 is_stmt 1 view .LVU54
  78:main.cpp      ****             //read rtc
 223               		.loc 2 78 24 is_stmt 0 view .LVU55
 224 00e4 8091 0000 		lds r24,systemFlags
  78:main.cpp      ****             //read rtc
 225               		.loc 2 78 9 view .LVU56
 226 00e8 81FF      		sbrs r24,1
 227 00ea 00C0      		rjmp .L4
 228 00ec 00C0      		rjmp .L7
 229               		.cfi_endproc
 230               	.LFE36:
 232               	.global	counter
 233               		.section	.bss.counter,"aw",@nobits
 236               	counter:
 237 0000 00        		.zero	1
 238               	.global	systemFlags
 239               		.section	.bss.systemFlags,"aw",@nobits
 242               	systemFlags:
 243 0000 00        		.zero	1
 244               		.text
 245               	.Letext0:
 246               		.file 5 "f:\\importante\\faculdade\\mcc\\vscode-avr-win\\toolchains\\avr-gcc\\avr\\include\\stdint
 247               		.file 6 "funsape/device/hd44780.hpp"
 248               		.file 7 "f:\\importante\\faculdade\\mcc\\vscode-avr-win\\toolchains\\avr-gcc\\avr\\include\\math.h
 249               		.file 8 "f:\\importante\\faculdade\\mcc\\vscode-avr-win\\toolchains\\avr-gcc\\avr\\include\\stdio.
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 28


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:2      *ABS*:000000000000003e __SP_H__
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:3      *ABS*:000000000000003d __SP_L__
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:4      *ABS*:000000000000003f __SREG__
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:5      *ABS*:0000000000000000 __tmp_reg__
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:6      *ABS*:0000000000000001 __zero_reg__
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:14     .text._Z7getTickv:0000000000000000 _Z7getTickv
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:17     .text._Z7getTickv:0000000000000000 .Loc.0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:18     .text._Z7getTickv:0000000000000000 L0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:23     .text._Z7getTickv:0000000000000000 .Loc.1
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:24     .text._Z7getTickv:0000000000000000 .Loc.2
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:30     .text._Z7getTickv:0000000000000008 L0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:43     .text.main:0000000000000000 main
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:46     .text.main:0000000000000000 .Loc.3
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:47     .text.main:0000000000000000 L0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:62     .text.main:0000000000000010 .Loc.4
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:63     .text.main:0000000000000010 .Loc.5
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:68     .text.main:0000000000000018 .Loc.6
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:69     .text.main:0000000000000018 .Loc.7
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:242    .bss.systemFlags:0000000000000000 systemFlags
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:71     .text.main:000000000000001c .Loc.8
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:75     .text.main:0000000000000022 .Loc.9
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:79     .text.main:0000000000000028 .Loc.10
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:80     .text.main:0000000000000028 .Loc.11
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:90     .text.main:000000000000003a .Loc.12
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:91     .text.main:000000000000003a .Loc.13
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:99     .text.main:0000000000000048 .Loc.14
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:100    .text.main:0000000000000048 .Loc.15
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:105    .text.main:0000000000000050 .Loc.16
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:106    .text.main:0000000000000050 .Loc.17
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:111    .text.main:0000000000000058 .Loc.18
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:112    .text.main:0000000000000058 .Loc.19
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:117    .text.main:0000000000000060 .Loc.20
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:121    .text.main:0000000000000060 .Loc.21
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:123    .text.main:0000000000000060 .Loc.22
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:124    .text.main:0000000000000060 .Loc.23
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:125    .text.main:0000000000000060 .Loc.24
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:126    .text.main:0000000000000060 .Loc.25
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:127    .text.main:0000000000000060 .Loc.26
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:128    .text.main:0000000000000060 .Loc.27
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:129    .text.main:0000000000000060 .Loc.28
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:137    .text.main:0000000000000070 L0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:140    .text.main:0000000000000072 .Loc.29
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:143    .text.main:0000000000000072 .Loc.30
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:144    .text.main:0000000000000072 .Loc.31
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:149    .text.main:000000000000007a .Loc.32
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:150    .text.main:000000000000007a .Loc.33
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:154    .text.main:0000000000000084 .Loc.34
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:155    .text.main:0000000000000084 .Loc.35
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:161    .text.main:000000000000008e .Loc.36
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:165    .text.main:000000000000008e .Loc.37
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:167    .text.main:000000000000008e .Loc.38
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:171    .text.main:0000000000000094 .Loc.39
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:176    .text.main:0000000000000096 .Loc.40
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:177    .text.main:0000000000000096 .Loc.41
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:236    .bss.counter:0000000000000000 counter
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 29


C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:187    .text.main:00000000000000aa .Loc.42
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:188    .text.main:00000000000000aa .Loc.43
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:198    .text.main:00000000000000be .Loc.44
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:199    .text.main:00000000000000be .Loc.45
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:203    .text.main:00000000000000c8 .Loc.46
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:204    .text.main:00000000000000c8 .Loc.47
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:208    .text.main:00000000000000d2 .Loc.48
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:209    .text.main:00000000000000d2 .Loc.49
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:214    .text.main:00000000000000dc .Loc.50
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:215    .text.main:00000000000000dc .Loc.51
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:216    .text.main:00000000000000dc .Loc.52
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:218    .text.main:00000000000000e0 .Loc.53
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:222    .text.main:00000000000000e4 .Loc.54
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:223    .text.main:00000000000000e4 .Loc.55
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:225    .text.main:00000000000000e8 .Loc.56
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:229    .text.main:00000000000000ee L0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:33     .text._Z7getTickv:0000000000000008 L0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:233    .text.main:00000000000000ee L0
                     .debug_frame:0000000000000000 L0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:133    .text.main:0000000000000066 .L11
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:213    .text.main:00000000000000dc .L4
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:221    .text.main:00000000000000e4 .L3
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:173    .text.main:0000000000000096 .L6
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:197    .text.main:00000000000000be .L7
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:1573   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:2476   .debug_rnglists:000000000000000c .LLRL3
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:2486   .debug_line:0000000000000000 .Ldebug_line0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:44     .text.main:0000000000000000 .LFB36
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:230    .text.main:00000000000000ee .LFE36
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:119    .text.main:0000000000000060 .LBI6
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:118    .text.main:0000000000000060 .LBB6
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:142    .text.main:0000000000000072 .LBE6
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:2420   .debug_loclists:000000000000000e .LLST0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:2417   .debug_loclists:000000000000000c .LVUS0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:2432   .debug_loclists:000000000000001e .LLST1
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:2429   .debug_loclists:000000000000001c .LVUS1
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:2444   .debug_loclists:000000000000002e .LLST2
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:2441   .debug_loclists:000000000000002c .LVUS2
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:163    .text.main:000000000000008e .LBI8
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:162    .text.main:000000000000008e .LBB8
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:175    .text.main:0000000000000096 .LBE8
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:67     .text.main:0000000000000018 .LVL0
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:89     .text.main:000000000000003a .LVL1
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:98     .text.main:0000000000000048 .LVL2
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:104    .text.main:0000000000000050 .LVL3
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:110    .text.main:0000000000000058 .LVL4
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:116    .text.main:0000000000000060 .LVL5
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:148    .text.main:000000000000007a .LVL7
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:160    .text.main:000000000000008e .LVL8
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:186    .text.main:00000000000000aa .LVL9
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:15     .text._Z7getTickv:0000000000000000 .LFB32
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:31     .text._Z7getTickv:0000000000000008 .LFE32
C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s:251    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN7Hd44780C1Ev
_ZN7Hd4478014controlPortSetEPVhhhh
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccCFhUoN.s 			page 30


_ZN7Hd447804initENS_4SizeENS_4FontEbb
_ZN7Hd447805stdioEv
puts
_ZN7Hd4478011clearScreenEv
int0
_ZN4Int04initENS_9SenseModeE
printf
__do_copy_data
__do_clear_bss
