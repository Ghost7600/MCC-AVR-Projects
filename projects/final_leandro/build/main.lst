GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 1


   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "C:\\D\\IFSC\\MCC\\projects\\final_leandro" "main.cpp"
  11               		.section	.text._Z7getTickv,"ax",@progbits
  12               		.weak	_Z7getTickv
  14               	_Z7getTickv:
  15               	.LFB32:
  16               		.file 1 "funsape/globalDefines.hpp"
   1:funsape/globalDefines.hpp **** //!
   2:funsape/globalDefines.hpp **** //! \file           globalDefines.hpp
   3:funsape/globalDefines.hpp **** //! \brief          Global definitions file
   4:funsape/globalDefines.hpp **** //! \author         Leandro Schwarz (bladabuska+funsapeavr8lib@gmail.com)
   5:funsape/globalDefines.hpp **** //! \date           2023-04-05
   6:funsape/globalDefines.hpp **** //! \version        23.04
   7:funsape/globalDefines.hpp **** //! \copyright      license
   8:funsape/globalDefines.hpp **** //! \details        Global definitions file.
   9:funsape/globalDefines.hpp **** //! \todo           Todo list
  10:funsape/globalDefines.hpp **** //!
  11:funsape/globalDefines.hpp **** 
  12:funsape/globalDefines.hpp **** // =============================================================================
  13:funsape/globalDefines.hpp **** // Include guard (START)
  14:funsape/globalDefines.hpp **** // =============================================================================
  15:funsape/globalDefines.hpp **** 
  16:funsape/globalDefines.hpp **** #ifndef __GLOBAL_DEFINES_HPP
  17:funsape/globalDefines.hpp **** #define __GLOBAL_DEFINES_HPP                    2304
  18:funsape/globalDefines.hpp **** 
  19:funsape/globalDefines.hpp **** // =============================================================================
  20:funsape/globalDefines.hpp **** // Basic definitions
  21:funsape/globalDefines.hpp **** // =============================================================================
  22:funsape/globalDefines.hpp **** 
  23:funsape/globalDefines.hpp **** #ifndef F_CPU
  24:funsape/globalDefines.hpp **** #   define F_CPU    16000000UL
  25:funsape/globalDefines.hpp **** #endif
  26:funsape/globalDefines.hpp **** 
  27:funsape/globalDefines.hpp **** // =============================================================================
  28:funsape/globalDefines.hpp **** // Dependencies
  29:funsape/globalDefines.hpp **** // =============================================================================
  30:funsape/globalDefines.hpp **** 
  31:funsape/globalDefines.hpp **** //     //////////////////     AVR STANDARD LIBRARY     //////////////////     //
  32:funsape/globalDefines.hpp **** #include <avr/io.h>
  33:funsape/globalDefines.hpp **** #include <avr/interrupt.h>
  34:funsape/globalDefines.hpp **** #include <util/delay.h>
  35:funsape/globalDefines.hpp **** #include <util/atomic.h>
  36:funsape/globalDefines.hpp **** 
  37:funsape/globalDefines.hpp **** //     ///////////////////     STANDARD C LIBRARY     ///////////////////     //
  38:funsape/globalDefines.hpp **** #include <stddef.h>
  39:funsape/globalDefines.hpp **** #include <stdint.h>
  40:funsape/globalDefines.hpp **** #include <stdio.h>
  41:funsape/globalDefines.hpp **** #include <stdlib.h>
  42:funsape/globalDefines.hpp **** #include <string.h>
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 2


  43:funsape/globalDefines.hpp **** 
  44:funsape/globalDefines.hpp **** //     //////////////////     LIBRARY DEPENDENCIES     //////////////////     //
  45:funsape/globalDefines.hpp **** #include "pinout.hpp"
  46:funsape/globalDefines.hpp **** #if !defined(__PINOUT_HPP)
  47:funsape/globalDefines.hpp **** #   error "Header file (pinout.hpp) is corrupted!"
  48:funsape/globalDefines.hpp **** #elif __PINOUT_HPP != __GLOBAL_DEFINES_HPP
  49:funsape/globalDefines.hpp **** #   error "Version mismatch between header file and library dependency (pinout.hpp)!"
  50:funsape/globalDefines.hpp **** #endif
  51:funsape/globalDefines.hpp **** 
  52:funsape/globalDefines.hpp **** // =============================================================================
  53:funsape/globalDefines.hpp **** // Undefining previous definitions
  54:funsape/globalDefines.hpp **** // =============================================================================
  55:funsape/globalDefines.hpp **** 
  56:funsape/globalDefines.hpp **** // NONE
  57:funsape/globalDefines.hpp **** 
  58:funsape/globalDefines.hpp **** // =============================================================================
  59:funsape/globalDefines.hpp **** // Constant definitions
  60:funsape/globalDefines.hpp **** // =============================================================================
  61:funsape/globalDefines.hpp **** 
  62:funsape/globalDefines.hpp **** #define inlined                         inline __attribute__((always_inline))
  63:funsape/globalDefines.hpp **** #define weakened                        __attribute__((weak))
  64:funsape/globalDefines.hpp **** 
  65:funsape/globalDefines.hpp **** // =============================================================================
  66:funsape/globalDefines.hpp **** // New data types
  67:funsape/globalDefines.hpp **** // =============================================================================
  68:funsape/globalDefines.hpp **** 
  69:funsape/globalDefines.hpp **** //     ////////////////////     BASIC VARIABLES     /////////////////////     //
  70:funsape/globalDefines.hpp **** typedef bool                            bool_t;
  71:funsape/globalDefines.hpp **** typedef char                            char_t;
  72:funsape/globalDefines.hpp **** 
  73:funsape/globalDefines.hpp **** //     ///////////////////     CONSTANT VARIABLES    ////////////////////     //
  74:funsape/globalDefines.hpp **** typedef const bool_t                    cbool_t;
  75:funsape/globalDefines.hpp **** typedef const char_t                    cchar_t;
  76:funsape/globalDefines.hpp **** typedef const int8_t                    cint8_t;
  77:funsape/globalDefines.hpp **** typedef const int16_t                   cint16_t;
  78:funsape/globalDefines.hpp **** typedef const int32_t                   cint32_t;
  79:funsape/globalDefines.hpp **** typedef const int64_t                   cint64_t;
  80:funsape/globalDefines.hpp **** typedef const uint8_t                   cuint8_t;
  81:funsape/globalDefines.hpp **** typedef const uint16_t                  cuint16_t;
  82:funsape/globalDefines.hpp **** typedef const uint32_t                  cuint32_t;
  83:funsape/globalDefines.hpp **** typedef const uint64_t                  cuint64_t;
  84:funsape/globalDefines.hpp **** 
  85:funsape/globalDefines.hpp **** //     ///////////////////     VOLATILE VARIABLES    ////////////////////     //
  86:funsape/globalDefines.hpp **** typedef volatile bool_t                 vbool_t;
  87:funsape/globalDefines.hpp **** typedef volatile char_t                 vchar_t;
  88:funsape/globalDefines.hpp **** typedef volatile int8_t                 vint8_t;
  89:funsape/globalDefines.hpp **** typedef volatile int16_t                vint16_t;
  90:funsape/globalDefines.hpp **** typedef volatile int32_t                vint32_t;
  91:funsape/globalDefines.hpp **** typedef volatile int64_t                vint64_t;
  92:funsape/globalDefines.hpp **** typedef volatile uint8_t                vuint8_t;
  93:funsape/globalDefines.hpp **** typedef volatile uint16_t               vuint16_t;
  94:funsape/globalDefines.hpp **** typedef volatile uint32_t               vuint32_t;
  95:funsape/globalDefines.hpp **** typedef volatile uint64_t               vuint64_t;
  96:funsape/globalDefines.hpp **** 
  97:funsape/globalDefines.hpp **** //     /////////////////     AVR PLATFORM VARIABLES    //////////////////     //
  98:funsape/globalDefines.hpp **** typedef int16_t                         int_t;          // 16-bit (AVR)
  99:funsape/globalDefines.hpp **** typedef uint16_t                        uint_t;         // 16-bit (AVR)
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 3


 100:funsape/globalDefines.hpp **** typedef cint16_t                        cint_t;         // 16-bit (AVR)
 101:funsape/globalDefines.hpp **** typedef cuint16_t                       cuint_t;        // 16-bit (AVR)
 102:funsape/globalDefines.hpp **** typedef vint16_t                        vint_t;         // 16-bit (AVR)
 103:funsape/globalDefines.hpp **** typedef vuint16_t                       vuint_t;        // 16-bit (AVR)
 104:funsape/globalDefines.hpp **** typedef uint8_t                         ioPinIndex_t;   // 8-bit (AVR)
 105:funsape/globalDefines.hpp **** typedef vuint8_t                       *ioRegAddress_t; // 8-bit address (AVR)
 106:funsape/globalDefines.hpp **** 
 107:funsape/globalDefines.hpp **** //     //////////////////     BINARY ENUMERATIONS     ///////////////////     //
 108:funsape/globalDefines.hpp **** enum class Activation : cbool_t {
 109:funsape/globalDefines.hpp ****     OFF                                 = false,
 110:funsape/globalDefines.hpp ****     ON                                  = true
 111:funsape/globalDefines.hpp **** };
 112:funsape/globalDefines.hpp **** 
 113:funsape/globalDefines.hpp **** enum class DisplayOrientation : cbool_t {
 114:funsape/globalDefines.hpp ****     LANDSCAPE                           = false,
 115:funsape/globalDefines.hpp ****     PORTRAIT                            = true
 116:funsape/globalDefines.hpp **** };
 117:funsape/globalDefines.hpp **** 
 118:funsape/globalDefines.hpp **** enum class DriverMode : cbool_t {
 119:funsape/globalDefines.hpp ****     PUSH_PULL                           = false,
 120:funsape/globalDefines.hpp ****     OPEN_DRAIN                          = true,
 121:funsape/globalDefines.hpp **** };
 122:funsape/globalDefines.hpp **** 
 123:funsape/globalDefines.hpp **** enum class Edge : cbool_t {
 124:funsape/globalDefines.hpp ****     FALLING                             = false,
 125:funsape/globalDefines.hpp ****     RISING                              = true
 126:funsape/globalDefines.hpp **** };
 127:funsape/globalDefines.hpp **** 
 128:funsape/globalDefines.hpp **** enum class IoOperation : cbool_t {
 129:funsape/globalDefines.hpp ****     WRITE                               = false,
 130:funsape/globalDefines.hpp ****     READ                                = true
 131:funsape/globalDefines.hpp **** };
 132:funsape/globalDefines.hpp **** 
 133:funsape/globalDefines.hpp **** enum class LogicLevel : cbool_t {
 134:funsape/globalDefines.hpp ****     LOW                                 = false,
 135:funsape/globalDefines.hpp ****     HIGH                                = true
 136:funsape/globalDefines.hpp **** };
 137:funsape/globalDefines.hpp **** 
 138:funsape/globalDefines.hpp **** enum class PinDirection : cbool_t {
 139:funsape/globalDefines.hpp ****     INPUT                               = false,
 140:funsape/globalDefines.hpp ****     OUTPUT                              = true,
 141:funsape/globalDefines.hpp **** };
 142:funsape/globalDefines.hpp **** 
 143:funsape/globalDefines.hpp **** enum class Rotation : cbool_t {
 144:funsape/globalDefines.hpp ****     CLOCKWISE                           = false,
 145:funsape/globalDefines.hpp ****     COUNTERCLOCKWISE                    = true
 146:funsape/globalDefines.hpp **** };
 147:funsape/globalDefines.hpp **** 
 148:funsape/globalDefines.hpp **** enum class State : cbool_t {
 149:funsape/globalDefines.hpp ****     OFF                                 = false,
 150:funsape/globalDefines.hpp ****     ON                                  = true
 151:funsape/globalDefines.hpp **** };
 152:funsape/globalDefines.hpp **** 
 153:funsape/globalDefines.hpp **** //     ///////////////////     PLAIN ENUMERATIONS    ////////////////////     //
 154:funsape/globalDefines.hpp **** enum class Axis : cuint8_t {
 155:funsape/globalDefines.hpp ****     //                                     Z-AXIS     Y-AXIS     X-AXIS
 156:funsape/globalDefines.hpp ****     NONE                                = (0 << 2) | (0 << 1) | (0 << 0),
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 4


 157:funsape/globalDefines.hpp ****     X                                   = (0 << 2) | (0 << 1) | (1 << 0),
 158:funsape/globalDefines.hpp ****     Y                                   = (0 << 2) | (1 << 1) | (0 << 0),
 159:funsape/globalDefines.hpp ****     XY                                  = (0 << 2) | (1 << 1) | (1 << 0),
 160:funsape/globalDefines.hpp ****     Z                                   = (1 << 2) | (0 << 1) | (0 << 0),
 161:funsape/globalDefines.hpp ****     XZ                                  = (1 << 2) | (0 << 1) | (1 << 0),
 162:funsape/globalDefines.hpp ****     YZ                                  = (1 << 2) | (1 << 1) | (0 << 0),
 163:funsape/globalDefines.hpp ****     ALL                                 = (1 << 2) | (1 << 1) | (1 << 0)
 164:funsape/globalDefines.hpp **** };
 165:funsape/globalDefines.hpp **** 
 166:funsape/globalDefines.hpp **** inlined Axis operator|(Axis a, Axis b)
 167:funsape/globalDefines.hpp **** {
 168:funsape/globalDefines.hpp ****     return static_cast<Axis>(static_cast<cint8_t>(a) | static_cast<uint8_t>(b));
 169:funsape/globalDefines.hpp **** }
 170:funsape/globalDefines.hpp **** 
 171:funsape/globalDefines.hpp **** inlined Axis &operator|=(Axis &a, Axis b)
 172:funsape/globalDefines.hpp **** {
 173:funsape/globalDefines.hpp ****     return a = static_cast<Axis>(static_cast<uint8_t>(a) | static_cast<uint8_t>(b));
 174:funsape/globalDefines.hpp **** }
 175:funsape/globalDefines.hpp **** 
 176:funsape/globalDefines.hpp **** inlined Axis operator&(Axis a, Axis b)
 177:funsape/globalDefines.hpp **** {
 178:funsape/globalDefines.hpp ****     return static_cast<Axis>(static_cast<uint8_t>(a) & static_cast<uint8_t>(b));
 179:funsape/globalDefines.hpp **** }
 180:funsape/globalDefines.hpp **** 
 181:funsape/globalDefines.hpp **** inlined Axis &operator&=(Axis &a, Axis b)
 182:funsape/globalDefines.hpp **** {
 183:funsape/globalDefines.hpp ****     return a = static_cast<Axis>(static_cast<uint8_t>(a) & static_cast<uint8_t>(b));
 184:funsape/globalDefines.hpp **** }
 185:funsape/globalDefines.hpp **** 
 186:funsape/globalDefines.hpp **** enum class Direction : cuint8_t {
 187:funsape/globalDefines.hpp ****     LEFT                                = 0,
 188:funsape/globalDefines.hpp ****     RIGHT                               = 1,
 189:funsape/globalDefines.hpp ****     UP                                  = 2,
 190:funsape/globalDefines.hpp ****     DOWN                                = 3
 191:funsape/globalDefines.hpp **** };
 192:funsape/globalDefines.hpp **** 
 193:funsape/globalDefines.hpp **** enum class InterfaceMode : cuint8_t {
 194:funsape/globalDefines.hpp ****     BLOCKING_MODE                       = 0,
 195:funsape/globalDefines.hpp ****     INTERRUPT_MODE                      = 1,
 196:funsape/globalDefines.hpp ****     DMA_MODE                            = 2
 197:funsape/globalDefines.hpp **** };
 198:funsape/globalDefines.hpp **** 
 199:funsape/globalDefines.hpp **** enum class ThermometricScale : cuint8_t {
 200:funsape/globalDefines.hpp ****     CELSIUS                             = 0,
 201:funsape/globalDefines.hpp ****     DELISLE                             = 1,
 202:funsape/globalDefines.hpp ****     FAHRENHEIT                          = 2,
 203:funsape/globalDefines.hpp ****     KELVIN                              = 3,
 204:funsape/globalDefines.hpp ****     NEWTON                              = 4,
 205:funsape/globalDefines.hpp ****     RANKINE                             = 5,
 206:funsape/globalDefines.hpp ****     REAUMUR                             = 6,
 207:funsape/globalDefines.hpp ****     ROMER                               = 7
 208:funsape/globalDefines.hpp **** };
 209:funsape/globalDefines.hpp **** 
 210:funsape/globalDefines.hpp **** enum class Error : cuint16_t {
 211:funsape/globalDefines.hpp ****     // General error codes
 212:funsape/globalDefines.hpp ****     NONE                                                = 0x0000,   // Success - No errors occurred
 213:funsape/globalDefines.hpp ****     AXIS_INVALID                                        = 0x0001,   // Invalid axis
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 5


 214:funsape/globalDefines.hpp ****     NOT_IMPLEMENTED                                     = 0x0002,   // Not implemented yet
 215:funsape/globalDefines.hpp ****     UNDER_DEVELOPMENT                                   = 0x0003,   // This part of the code is sti
 216:funsape/globalDefines.hpp ****     NOT_INITIALIZED                                     = 0x0004,   // Not initialized
 217:funsape/globalDefines.hpp ****     // BUSY                                                = 0x0005,   // TODO: Describe parameter
 218:funsape/globalDefines.hpp ****     // DEVICE_NOT_SUPPORTED                                = 0x0006,   // Device is not currently s
 219:funsape/globalDefines.hpp ****     FEATURE_NOT_SUPPORTED                               = 0x0007,   // Unsupported feature or confi
 220:funsape/globalDefines.hpp ****     // FUNCTION_POINTER_NULL                               = 0x0008,   // TODO: Describe parameter
 221:funsape/globalDefines.hpp ****     // INSTANCE_INVALID                                    = 0x0009,   // Invalid instance
 222:funsape/globalDefines.hpp ****     // LOCKED                                              = 0x000A,   // Accessed a locked device
 223:funsape/globalDefines.hpp ****     MEMORY_ALLOCATION                                   = 0x000B,   // Memory allocation failed
 224:funsape/globalDefines.hpp ****     // MODE_NOT_SUPPORTED                                  = 0x000C,   // Mode is not currently sup
 225:funsape/globalDefines.hpp ****     // NOT_READY                                           = 0x000D,   // TODO: Describe parameter
 226:funsape/globalDefines.hpp ****     // READ_PROTECTED                                      = 0x000E,   // Tried to read a read prot
 227:funsape/globalDefines.hpp ****     // WRITE_PROTECTED                                     = 0x000F,   // Tried to write a write pr
 228:funsape/globalDefines.hpp **** 
 229:funsape/globalDefines.hpp ****     // Function arguments related error codes
 230:funsape/globalDefines.hpp ****     ARGUMENT_CANNOT_BE_ZERO                             = 0x0010,   // TODO: Describe parameter
 231:funsape/globalDefines.hpp ****     ARGUMENT_POINTER_NULL                               = 0x0011,   // NULL pointer was passed as a
 232:funsape/globalDefines.hpp ****     ARGUMENT_VALUE_INVALID                              = 0x0012,   // TODO: Describe parameter
 233:funsape/globalDefines.hpp ****     // ARGUMENTS_MISMATCH                                  = 0x0013,   // A function was called wit
 234:funsape/globalDefines.hpp ****     // ARGUMENTS_WRONG_NUMBER                              = 0x0014,   // A function was called wit
 235:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_5                            = 0x0015,   // Generic error (use only o
 236:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_6                            = 0x0016,   // Generic error (use only o
 237:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_7                            = 0x0017,   // Generic error (use only o
 238:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_8                            = 0x0018,   // Generic error (use only o
 239:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_9                            = 0x0019,   // Generic error (use only o
 240:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_10                           = 0x001A,   // Generic error (use only o
 241:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_11                           = 0x001B,   // Generic error (use only o
 242:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_12                           = 0x001C,   // Generic error (use only o
 243:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_13                           = 0x001D,   // Generic error (use only o
 244:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_14                           = 0x001E,   // Generic error (use only o
 245:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR                              = 0x001F,   // Generic error (use only o
 246:funsape/globalDefines.hpp **** 
 247:funsape/globalDefines.hpp ****     // Buffer related error codes
 248:funsape/globalDefines.hpp ****     // BUFFER_EMPTY                                        = 0x0020,   // Buffer is empty
 249:funsape/globalDefines.hpp ****     BUFFER_FULL                                         = 0x0021,   // Buffer is full
 250:funsape/globalDefines.hpp ****     // BUFFER_NOT_ENOUGH_ELEMENTS                          = 0x0022,   // Not enough space in buffe
 251:funsape/globalDefines.hpp ****     // BUFFER_NOT_ENOUGH_SPACE                             = 0x0023,   // Not enough space in buffe
 252:funsape/globalDefines.hpp ****     // BUFFER_POINTER_NULL                                 = 0x0024,   // Buffer size was set to ze
 253:funsape/globalDefines.hpp ****     BUFFER_SIZE_TOO_LARGE                               = 0x0025,   // Buffer size was set to a lar
 254:funsape/globalDefines.hpp ****     BUFFER_SIZE_TOO_SMALL                               = 0x0026,   // Buffer size was set to a ver
 255:funsape/globalDefines.hpp ****     BUFFER_SIZE_ZERO                                    = 0x0027,   // Buffer size was set to zero
 256:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_8                              = 0x0028,   // Generic error (use only o
 257:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_9                              = 0x0029,   // Generic error (use only o
 258:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_10                             = 0x002A,   // Generic error (use only o
 259:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_11                             = 0x002B,   // Generic error (use only o
 260:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_12                             = 0x002C,   // Generic error (use only o
 261:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_13                             = 0x002D,   // Generic error (use only o
 262:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_14                             = 0x002E,   // Generic error (use only o
 263:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_15                             = 0x002F,   // Generic error (use only o
 264:funsape/globalDefines.hpp **** 
 265:funsape/globalDefines.hpp ****     // Clock configuration related error codes
 266:funsape/globalDefines.hpp ****     CLOCK_PRESCALER_CHANGE_FAILED                       = 0x0030,   // Clock prescaler change faile
 267:funsape/globalDefines.hpp ****     CLOCK_PRESCALER_NOT_SUPPORTED                       = 0x0031,   // Clock prescaler configuratio
 268:funsape/globalDefines.hpp ****     CLOCK_SPEED_TOO_HIGH                                = 0x0032,   // TODO: Describe parameter
 269:funsape/globalDefines.hpp ****     CLOCK_SPEED_TOO_LOW                                 = 0x0033,   // TODO: Describe parameter
 270:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_4                               = 0x0034,   // Generic error (use only o
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 6


 271:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_5                               = 0x0035,   // Generic error (use only o
 272:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_6                               = 0x0036,   // Generic error (use only o
 273:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_7                               = 0x0037,   // Generic error (use only o
 274:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_8                               = 0x0038,   // Generic error (use only o
 275:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_9                               = 0x0039,   // Generic error (use only o
 276:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_10                              = 0x003A,   // Generic error (use only o
 277:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_11                              = 0x003B,   // Generic error (use only o
 278:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_12                              = 0x003C,   // Generic error (use only o
 279:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_13                              = 0x003D,   // Generic error (use only o
 280:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_14                              = 0x003E,   // Generic error (use only o
 281:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_15                              = 0x003F,   // Generic error (use only o
 282:funsape/globalDefines.hpp **** 
 283:funsape/globalDefines.hpp ****     // Communication related error codes
 284:funsape/globalDefines.hpp ****     COMMUNICATION_FAILED                                = 0x0040,   // TODO: Describe parameter
 285:funsape/globalDefines.hpp ****     COMMUNICATION_NO_DEVICE_SELECTED                    = 0x0041,   // TODO: Describe parameter
 286:funsape/globalDefines.hpp ****     // COMMUNICATION_PORT_NOT_SET                          = 0x0042,   // TODO: Describe parameter
 287:funsape/globalDefines.hpp ****     COMMUNICATION_TIMEOUT                               = 0x0043,   // The operation timed out
 288:funsape/globalDefines.hpp ****     // COMMUNICATION_DEVICE_ID_MATCH_FAILED                = 0x0044,   // TODO: Describe parameter
 289:funsape/globalDefines.hpp ****     CHECKSUM_ERROR                                      = 0x0045,   // TODO: Describe parameter
 290:funsape/globalDefines.hpp ****     FRAME_ERROR                                         = 0x0046,   // TODO: Describe parameter
 291:funsape/globalDefines.hpp ****     PACKAGE_AWAITING                                    = 0x0047,   // Try to write data to a ready
 292:funsape/globalDefines.hpp ****     // PACKAGE_NOT_READY                                   = 0x0048,   // Try to read data from a n
 293:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_9                       = 0x0049,   // Generic error (use only o
 294:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_10                      = 0x004A,   // Generic error (use only o
 295:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_11                      = 0x004B,   // Generic error (use only o
 296:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_12                      = 0x004C,   // Generic error (use only o
 297:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_13                      = 0x004D,   // Generic error (use only o
 298:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_14                      = 0x004E,   // Generic error (use only o
 299:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_15                      = 0x004F,   // Generic error (use only o
 300:funsape/globalDefines.hpp **** 
 301:funsape/globalDefines.hpp ****     // DateTime class related error codes
 302:funsape/globalDefines.hpp ****     DATE_NOT_INITIALIZED                                = 0x0050,   // TODO: Describe parameter
 303:funsape/globalDefines.hpp ****     // HOUR_INVALID                                        = 0x0051,   // TODO: Describe parameter
 304:funsape/globalDefines.hpp ****     // MILLISECOND_INVALID                                 = 0x0052,   // TODO: Describe parameter
 305:funsape/globalDefines.hpp ****     // MINUTE_INVALID                                      = 0x0053,   // TODO: Describe parameter
 306:funsape/globalDefines.hpp ****     // MONTH_DAY_INVALID                                   = 0x0054,   // TODO: Describe parameter
 307:funsape/globalDefines.hpp ****     // MONTH_INVALID                                       = 0x0055,   // TODO: Describe parameter
 308:funsape/globalDefines.hpp ****     // SECOND_INVALID                                      = 0x0056,   // TODO: Describe parameter
 309:funsape/globalDefines.hpp ****     TIME_NOT_INITIALIZED                                = 0x0057,   // TODO: Describe parameter
 310:funsape/globalDefines.hpp ****     // TIMEZONE_INVALID                                    = 0x0058,   // TODO: Describe parameter
 311:funsape/globalDefines.hpp ****     // YEAR_INVALID                                        = 0x0059,   // TODO: Describe parameter
 312:funsape/globalDefines.hpp ****     DATE_INVALID                                        = 0x005A,   // TODO: Describe parameter
 313:funsape/globalDefines.hpp ****     TIME_INVALID                                        = 0x005B,   // TODO: Describe parameter
 314:funsape/globalDefines.hpp ****     // GENERIC_ERROR_13                                    = 0x005C,   // Generic error (use only o
 315:funsape/globalDefines.hpp ****     // GENERIC_ERROR_14                                    = 0x005D,   // Generic error (use only o
 316:funsape/globalDefines.hpp ****     // GENERIC_ERROR_15                                    = 0x005F,   // Generic error (use only o
 317:funsape/globalDefines.hpp **** 
 318:funsape/globalDefines.hpp ****     // Handler related error codes
 319:funsape/globalDefines.hpp ****     BUS_HANDLER_NOT_SUPPORTED                           = 0x0060,   // TODO: Describe parameter
 320:funsape/globalDefines.hpp ****     BUS_HANDLER_POINTER_NULL                            = 0x0061,   // TODO: Describe parameter
 321:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_2                             = 0x0062,   // Generic error (use only o
 322:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_3                             = 0x0063,   // Generic error (use only o
 323:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_4                             = 0x0064,   // Generic error (use only o
 324:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_5                             = 0x0065,   // Generic error (use only o
 325:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_6                             = 0x0066,   // Generic error (use only o
 326:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_7                             = 0x0067,   // Generic error (use only o
 327:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_8                             = 0x0068,   // Generic error (use only o
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 7


 328:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_9                             = 0x0069,   // Generic error (use only o
 329:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_10                            = 0x006A,   // Generic error (use only o
 330:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_11                            = 0x006B,   // Generic error (use only o
 331:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_12                            = 0x006C,   // Generic error (use only o
 332:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_13                            = 0x006D,   // Generic error (use only o
 333:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_14                            = 0x006E,   // Generic error (use only o
 334:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_15                            = 0x006F,   // Generic error (use only o
 335:funsape/globalDefines.hpp **** 
 336:funsape/globalDefines.hpp ****     // External interrupts related error codes
 337:funsape/globalDefines.hpp ****     // INTERRUPT_NOT_AVAILABLE                             = 0x0070,   // TODO: Describe parameter
 338:funsape/globalDefines.hpp ****     // INTERRUPT_PORT_OUTPUT_MODE_NOT_SUPPORTED            = 0x0071,   // TODO: Describe parameter
 339:funsape/globalDefines.hpp ****     // INTERRUPT_SENSE_MODE_NOT_SUPPORTED                  = 0x0072,   // TODO: Describe parameter
 340:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_3                           = 0x0073,   // Generic error (use only o
 341:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_4                           = 0x0074,   // Generic error (use only o
 342:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_5                           = 0x0075,   // Generic error (use only o
 343:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_6                           = 0x0076,   // Generic error (use only o
 344:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_7                           = 0x0077,   // Generic error (use only o
 345:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_8                           = 0x0078,   // Generic error (use only o
 346:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_9                           = 0x0079,   // Generic error (use only o
 347:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_10                          = 0x007A,   // Generic error (use only o
 348:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_11                          = 0x007B,   // Generic error (use only o
 349:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_12                          = 0x007C,   // Generic error (use only o
 350:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_13                          = 0x007D,   // Generic error (use only o
 351:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_14                          = 0x007E,   // Generic error (use only o
 352:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_15                          = 0x007F,   // Generic error (use only o
 353:funsape/globalDefines.hpp **** 
 354:funsape/globalDefines.hpp **** 
 355:funsape/globalDefines.hpp ****     // Package API class related error codes
 356:funsape/globalDefines.hpp ****     // PACKAGE_API_PACKAGE_DATA_FULL                       = 0x0080,   // TODO: Describe parameter
 357:funsape/globalDefines.hpp ****     // PACKAGE_API_PACKAGE_NOT_READY                       = 0x0081,   // TODO: Describe parameter
 358:funsape/globalDefines.hpp ****     // PACKAGE_API_PAYLOAD_DATA_NULL                       = 0x0082,   // TODO: Describe parameter
 359:funsape/globalDefines.hpp ****     // PACKAGE_API_PAYLOAD_SIZE_NULL                       = 0x0083,   // TODO: Describe parameter
 360:funsape/globalDefines.hpp ****     // PACKAGE_API_SOURCE_ADDRESS_INVALID                  = 0x0084,   // TODO: Describe parameter
 361:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_5                         = 0x0085,   // Generic error (use only o
 362:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_6                         = 0x0086,   // Generic error (use only o
 363:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_7                         = 0x0087,   // Generic error (use only o
 364:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_8                         = 0x0088,   // Generic error (use only o
 365:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_9                         = 0x0089,   // Generic error (use only o
 366:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_10                        = 0x008A,   // Generic error (use only o
 367:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_11                        = 0x008B,   // Generic error (use only o
 368:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_12                        = 0x008C,   // Generic error (use only o
 369:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_13                        = 0x008D,   // Generic error (use only o
 370:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_14                        = 0x008E,   // Generic error (use only o
 371:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_15                        = 0x008F,   // Generic error (use only o
 372:funsape/globalDefines.hpp **** 
 373:funsape/globalDefines.hpp ****     // SPI related error codes
 374:funsape/globalDefines.hpp ****     // SPI_BUSY_FLAG                                       = 0x0090,   // TODO: Describe parameter
 375:funsape/globalDefines.hpp ****     // SPI_CRC                                             = 0x0091,   // TODO: Describe parameter
 376:funsape/globalDefines.hpp ****     // SPI_DMA                                             = 0x0092,   // TODO: Describe parameter
 377:funsape/globalDefines.hpp ****     // SPI_MODE_FAULT                                      = 0x0093,   // TODO: Describe parameter
 378:funsape/globalDefines.hpp ****     // SPI_OVERRUN                                         = 0x0094,   // TODO: Describe parameter
 379:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_5                                 = 0x0095,   // Generic error (use only o
 380:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_6                                 = 0x0096,   // Generic error (use only o
 381:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_7                                 = 0x0097,   // Generic error (use only o
 382:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_8                                 = 0x0098,   // Generic error (use only o
 383:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_9                                 = 0x0099,   // Generic error (use only o
 384:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_10                                = 0x009A,   // Generic error (use only o
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 8


 385:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_11                                = 0x009B,   // Generic error (use only o
 386:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_12                                = 0x009C,   // Generic error (use only o
 387:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_13                                = 0x009D,   // Generic error (use only o
 388:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_14                                = 0x009E,   // Generic error (use only o
 389:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_15                                = 0x009F,   // Generic error (use only o
 390:funsape/globalDefines.hpp **** 
 391:funsape/globalDefines.hpp ****     // TWI related error codes
 392:funsape/globalDefines.hpp ****     // TWI_AF_FLAG                                         = 0x00A0,   // TWI AF flag error
 393:funsape/globalDefines.hpp ****     // TWI_ARBITRATION_LOST                                = 0x00A1,   // TWI bus arbitration lost
 394:funsape/globalDefines.hpp ****     // TWI_BUS_ERROR                                       = 0x00A2,   // TWI bus error
 395:funsape/globalDefines.hpp ****     // TWI_DMA                                             = 0x00A3,   // DMA parameter error
 396:funsape/globalDefines.hpp ****     // TWI_DMA_PARAM                                       = 0x00A4,   // DMA transfer error
 397:funsape/globalDefines.hpp ****     // TWI_OVERRUN                                         = 0x00A5,   // TWI overrun
 398:funsape/globalDefines.hpp ****     // TWI_SIZE_MANAGEMENT_ERROR                           = 0x00A6,   // Size management error
 399:funsape/globalDefines.hpp ****     // TWI_INVALID_DEVICE_ADDRESS                          = 0x00A7,   // TODO: Describe parameter
 400:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_8                                 = 0x00A8,   // Generic error (use only o
 401:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_9                                 = 0x00A9,   // Generic error (use only o
 402:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_10                                = 0x00AA,   // Generic error (use only o
 403:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_11                                = 0x00AB,   // Generic error (use only o
 404:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_12                                = 0x00AC,   // Generic error (use only o
 405:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_13                                = 0x00AD,   // Generic error (use only o
 406:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_14                                = 0x00AE,   // Generic error (use only o
 407:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_15                                = 0x00AF,   // Generic error (use only o
 408:funsape/globalDefines.hpp **** 
 409:funsape/globalDefines.hpp ****     // USART related error codes
 410:funsape/globalDefines.hpp ****     USART_BAUD_RATE_NOT_SUPPORTED                       = 0x00B0,   // TODO: Describe parameter
 411:funsape/globalDefines.hpp ****     // USART_CONFIGURATION_PARAMETER_WRONG                 = 0x00B1,   // TODO: Describe parameter
 412:funsape/globalDefines.hpp ****     USART_DATA_SIZE_NOT_SUPPORTED                       = 0x00B2,   // TODO: Describe parameter
 413:funsape/globalDefines.hpp ****     USART_FRAME_FORMAT_NOT_SUPPORTED                    = 0x00B3,   // TODO: Describe parameter
 414:funsape/globalDefines.hpp ****     USART_PARITY_NOT_SUPPORTED                          = 0x00B4,   // TODO: Describe parameter
 415:funsape/globalDefines.hpp ****     USART_STOP_BIT_NOT_SUPPORTED                        = 0x00B5,   // TODO: Describe parameter
 416:funsape/globalDefines.hpp ****     USART_MODE_NOT_SUPPORTED                            = 0x00B6,   // TODO: Describe parameter
 417:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_7                               = 0x00B7,   // Generic error (use only o
 418:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_8                               = 0x00B8,   // Generic error (use only o
 419:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_9                               = 0x00B9,   // Generic error (use only o
 420:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_10                              = 0x00BA,   // Generic error (use only o
 421:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_11                              = 0x00BB,   // Generic error (use only o
 422:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_12                              = 0x00BC,   // Generic error (use only o
 423:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_13                              = 0x00BD,   // Generic error (use only o
 424:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_14                              = 0x00BE,   // Generic error (use only o
 425:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_15                              = 0x00BF,   // Generic error (use only o
 426:funsape/globalDefines.hpp **** 
 427:funsape/globalDefines.hpp ****     // LCD related error codes
 428:funsape/globalDefines.hpp ****     // LCD_CONTROL_PORT_NOT_SET                            = 0x00C0,   // TODO: Describe parameter
 429:funsape/globalDefines.hpp ****     // LCD_CONTROL_PIN_E_INVALID                           = 0x00C1,   // TODO: Describe parameter
 430:funsape/globalDefines.hpp ****     // LCD_CONTROL_PIN_RS_INVALID                          = 0x00C2,   // TODO: Describe parameter
 431:funsape/globalDefines.hpp ****     // LCD_CONTROL_PIN_RW_INVALID                          = 0x00C3,   // TODO: Describe parameter
 432:funsape/globalDefines.hpp ****     // LCD_DATA_PORT_NOT_SET                               = 0x00C4,   // TODO: Describe parameter
 433:funsape/globalDefines.hpp ****     // LCD_DATA_PIN_INDEX_OUT_OF_BOUNDARIES                = 0x00C5,   // TODO: Describe parameter
 434:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_6                                 = 0x00C6,   // Generic error (use only o
 435:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_7                                 = 0x00C7,   // Generic error (use only o
 436:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_8                                 = 0x00C8,   // Generic error (use only o
 437:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_9                                 = 0x00C9,   // Generic error (use only o
 438:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_10                                = 0x00CA,   // Generic error (use only o
 439:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_11                                = 0x00CB,   // Generic error (use only o
 440:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_12                                = 0x00CC,   // Generic error (use only o
 441:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_13                                = 0x00CD,   // Generic error (use only o
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 9


 442:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_14                                = 0x00CE,   // Generic error (use only o
 443:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_15                                = 0x00CF,   // Generic error (use only o
 444:funsape/globalDefines.hpp **** 
 445:funsape/globalDefines.hpp ****     // GPIO related error codes
 446:funsape/globalDefines.hpp ****     GPIO_PORT_NOT_SET                                   = 0x00D0,   // Gpio port was not set before
 447:funsape/globalDefines.hpp ****     GPIO_DATA_PORT_NOT_SET                              = 0x00D1,   // Gpio data port was not set b
 448:funsape/globalDefines.hpp ****     GPIO_CONTROL_PORT_NOT_SET                           = 0x00D2,   // Gpio control port was not se
 449:funsape/globalDefines.hpp ****     GPIO_PORT_INVALID                                   = 0x00D3,   // Gpio port address is invalid
 450:funsape/globalDefines.hpp ****     GPIO_DATA_PORT_INVALID                              = 0x00D4,   // Gpio data port address is in
 451:funsape/globalDefines.hpp ****     GPIO_CONTROL_PORT_INVALID                           = 0x00D5,   // Gpio control port address is
 452:funsape/globalDefines.hpp ****     GPIO_PIN_INDEX_INVALID                              = 0x00D6,   // Invalid GPIO Pin
 453:funsape/globalDefines.hpp ****     GPIO_PIN_INDEX_OUT_OF_BOUNDARIES                    = 0x00D7,   // Gpio pin index was out of bo
 454:funsape/globalDefines.hpp ****     // GPIO_NO_PIN_SET                                     = 0x00D8,   // No pin selected at Gpio p
 455:funsape/globalDefines.hpp ****     // GPIO_ADDRESS_INVALID                                = 0x00D9,   // Invalid GPIO Port
 456:funsape/globalDefines.hpp ****     // GPIO_PORT_LOGIC_CONTENTION                          = 0x00DA,   // TODO: Describe parameter
 457:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_11                               = 0x00DB,   // Generic error (use only o
 458:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_12                               = 0x00DC,   // Generic error (use only o
 459:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_13                               = 0x00DD,   // Generic error (use only o
 460:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_14                               = 0x00DE,   // Generic error (use only o
 461:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_15                               = 0x00DF,   // Generic error (use only o
 462:funsape/globalDefines.hpp **** 
 463:funsape/globalDefines.hpp ****     // HAL related error codes
 464:funsape/globalDefines.hpp ****     // HAL_UNKNOWN_ERROR                                   = 0x00E0,   // TODO: Describe parameter
 465:funsape/globalDefines.hpp ****     // HAL_STATUS_ERROR                                    = 0x00E1,   // TODO: Describe parameter
 466:funsape/globalDefines.hpp ****     // HAL_STATUS_BUSY                                     = 0x00E2,   // TODO: Describe parameter
 467:funsape/globalDefines.hpp ****     // HAL_STATUS_TIMEOUT                                  = 0x00E3,   // TODO: Describe parameter
 468:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_4                                 = 0x00E4,   // Generic error (use only o
 469:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_5                                 = 0x00E5,   // Generic error (use only o
 470:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_6                                 = 0x00E6,   // Generic error (use only o
 471:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_7                                 = 0x00E7,   // Generic error (use only o
 472:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_8                                 = 0x00E8,   // Generic error (use only o
 473:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_9                                 = 0x00E9,   // Generic error (use only o
 474:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_10                                = 0x00EA,   // Generic error (use only o
 475:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_11                                = 0x00EB,   // Generic error (use only o
 476:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_12                                = 0x00EC,   // Generic error (use only o
 477:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_13                                = 0x00ED,   // Generic error (use only o
 478:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_14                                = 0x00EE,   // Generic error (use only o
 479:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_15                                = 0x00EF,   // Generic error (use only o
 480:funsape/globalDefines.hpp **** 
 481:funsape/globalDefines.hpp ****     // System related error codes
 482:funsape/globalDefines.hpp ****     // SYSTEM_US_TIMER_HANDLER_NULL                        = 0x00F0,   // TODO: Describe parameter
 483:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_1                              = 0x00F1,   // Generic error (use only o
 484:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_2                              = 0x00F2,   // Generic error (use only o
 485:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_3                              = 0x00F3,   // Generic error (use only o
 486:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_4                              = 0x00F4,   // Generic error (use only o
 487:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_5                              = 0x00F5,   // Generic error (use only o
 488:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_6                              = 0x00F6,   // Generic error (use only o
 489:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_7                              = 0x00F7,   // Generic error (use only o
 490:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_8                              = 0x00F8,   // Generic error (use only o
 491:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_9                              = 0x00F9,   // Generic error (use only o
 492:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_10                             = 0x00FA,   // Generic error (use only o
 493:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_11                             = 0x00FB,   // Generic error (use only o
 494:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_12                             = 0x00FC,   // Generic error (use only o
 495:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_13                             = 0x00FD,   // Generic error (use only o
 496:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_14                             = 0x00FE,   // Generic error (use only o
 497:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_15                             = 0x00FF,   // Generic error (use only o
 498:funsape/globalDefines.hpp **** 
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 10


 499:funsape/globalDefines.hpp ****     // FatFs related error codes
 500:funsape/globalDefines.hpp ****     // FAT_FS_UNKNOWN_ERROR                                = 0x0100,   // TODO: Describe parameter
 501:funsape/globalDefines.hpp ****     // FAT_FS_DRIVE_UNSUPPORTED                            = 0x0101,   // TODO: Describe parameter
 502:funsape/globalDefines.hpp ****     // FAT_FS_DISK_NOT_INSERTED                            = 0x0102,   // TODO: Describe parameter
 503:funsape/globalDefines.hpp ****     // FAT_FS_INITIALIZATION_FAILED                        = 0x0103,   // TODO: Describe parameter
 504:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_4                              = 0x0104,   // Generic error (use only o
 505:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_5                              = 0x0105,   // Generic error (use only o
 506:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_6                              = 0x0106,   // Generic error (use only o
 507:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_7                              = 0x0107,   // Generic error (use only o
 508:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_8                              = 0x0108,   // Generic error (use only o
 509:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_9                              = 0x0109,   // Generic error (use only o
 510:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_10                             = 0x010A,   // Generic error (use only o
 511:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_11                             = 0x010B,   // Generic error (use only o
 512:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_12                             = 0x010C,   // Generic error (use only o
 513:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_13                             = 0x010D,   // Generic error (use only o
 514:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_14                             = 0x010E,   // Generic error (use only o
 515:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_15                             = 0x010F,   // Generic error (use only o
 516:funsape/globalDefines.hpp **** 
 517:funsape/globalDefines.hpp ****     // Uncategorized error codes
 518:funsape/globalDefines.hpp ****     // LCD_OUT_OF_BOUNDARIES                               = 0xFFF1,   // TODO: Describe parameter
 519:funsape/globalDefines.hpp ****     // CONTROLLER_NOT_SUPPORTED                            = 0xFFF2,   // Unsupported controller
 520:funsape/globalDefines.hpp ****     // DEVICE_ID_MATCH_FAILED                              = 0xFFF3,   // Device ID doesn't match
 521:funsape/globalDefines.hpp ****     // DMA_NOT_SUPPORTED                                   = 0xFFF4,   // DMA interface mode is not
 522:funsape/globalDefines.hpp ****     // DMA_TRANSFER_ERROR                                  = 0xFFF5,   // DMA transfer error
 523:funsape/globalDefines.hpp ****     // MESSAGE_TOO_LONG                                    = 0xFFF6,   // Message is to long to be 
 524:funsape/globalDefines.hpp ****     // VALID_DATA_NOT_AVAILABLE                            = 0xFFF7,   // Valid data was unavailabl
 525:funsape/globalDefines.hpp ****     // PERIPHERAL_NOT_READY                                = 0xFFF8,   // TODO: Describe parameter
 526:funsape/globalDefines.hpp ****     // STOPWATCH_NOT_STARTED                               = 0xFFF9,   // TODO: Describe parameter
 527:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_10                      = 0xFFFA,   // Generic error (use only o
 528:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_11                      = 0xFFFB,   // Generic error (use only o
 529:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_12                      = 0xFFFC,   // Generic error (use only o
 530:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_13                      = 0xFFFD,   // Generic error (use only o
 531:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_14                      = 0xFFFE,   // Generic error (use only o
 532:funsape/globalDefines.hpp **** 
 533:funsape/globalDefines.hpp ****     KEYPAD_COLUMNS_PIN_INDEX_INVALID                    = 0xFFF9,
 534:funsape/globalDefines.hpp ****     KEYPAD_LINES_PIN_INDEX_INVALID                      = 0xFFFA,
 535:funsape/globalDefines.hpp **** 
 536:funsape/globalDefines.hpp ****     KEYPAD_LINES_GPIO_PORT_INVALID                      = 0xFFFB,
 537:funsape/globalDefines.hpp ****     KEYPAD_COLUMNS_GPIO_PORT_INVALID                    = 0xFFFC,
 538:funsape/globalDefines.hpp ****     KEYPAD_TYPE_UNSUPPORTED                             = 0xFFFD,
 539:funsape/globalDefines.hpp ****     KEY_VALUES_NOT_SET                                  = 0xFFFE,
 540:funsape/globalDefines.hpp ****     // "I don't have the slightest idea" error code
 541:funsape/globalDefines.hpp ****     UNKNOWN                                             = 0xFFFF,   // Unknown error - Ops!!!!
 542:funsape/globalDefines.hpp **** };
 543:funsape/globalDefines.hpp **** 
 544:funsape/globalDefines.hpp **** // =============================================================================
 545:funsape/globalDefines.hpp **** // Macrofunctions
 546:funsape/globalDefines.hpp **** // =============================================================================
 547:funsape/globalDefines.hpp **** 
 548:funsape/globalDefines.hpp **** //     //////////////////////     DATA VALIDITY    //////////////////////     //
 549:funsape/globalDefines.hpp **** #define isGpioAddressValid(gpioPort)    (       \
 550:funsape/globalDefines.hpp ****         (IS_GPIO_ALL_INSTANCE(gpioPort))        \
 551:funsape/globalDefines.hpp ****         ? (bool_t)true                          \
 552:funsape/globalDefines.hpp ****         : (bool_t)false)
 553:funsape/globalDefines.hpp **** #define isGpioPinIndexValid(gpioPin)    (       \
 554:funsape/globalDefines.hpp ****         (IS_GPIO_ALL_PIN_NUMBER(gpioPin))       \
 555:funsape/globalDefines.hpp ****         ? (bool_t)true                          \
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 11


 556:funsape/globalDefines.hpp ****         : (bool_t)false)
 557:funsape/globalDefines.hpp **** #define isPointerValid(ptr)             (       \
 558:funsape/globalDefines.hpp ****         ((void *)(ptr))                         \
 559:funsape/globalDefines.hpp ****         ? (bool_t)true                          \
 560:funsape/globalDefines.hpp ****         : (bool_t)false)
 561:funsape/globalDefines.hpp **** 
 562:funsape/globalDefines.hpp **** //     //////////////////////     BIT HANDLING     //////////////////////     //
 563:funsape/globalDefines.hpp **** #ifndef setBit
 564:funsape/globalDefines.hpp **** #   define setBit(reg, bit)                     ((reg) |= (1 << (bit)))
 565:funsape/globalDefines.hpp **** #endif
 566:funsape/globalDefines.hpp **** #ifndef clrBit
 567:funsape/globalDefines.hpp **** #   define clrBit(reg, bit)                     ((reg) &= ~(1 << (bit)))
 568:funsape/globalDefines.hpp **** #endif
 569:funsape/globalDefines.hpp **** #ifndef cplBit
 570:funsape/globalDefines.hpp **** #   define cplBit(reg, bit)                     ((reg) ^= (1 << (bit)))
 571:funsape/globalDefines.hpp **** #endif
 572:funsape/globalDefines.hpp **** 
 573:funsape/globalDefines.hpp **** //     ///////////////////////     BIT TESTING    ///////////////////////     //
 574:funsape/globalDefines.hpp **** #ifndef isBitSet
 575:funsape/globalDefines.hpp **** #   define isBitSet(reg, bit)                   (((reg) >> (bit)) & 1)
 576:funsape/globalDefines.hpp **** #endif
 577:funsape/globalDefines.hpp **** #ifndef isBitClr
 578:funsape/globalDefines.hpp **** #   define isBitClr(reg, bit)                   (!isBitSet(reg,bit))
 579:funsape/globalDefines.hpp **** #endif
 580:funsape/globalDefines.hpp **** 
 581:funsape/globalDefines.hpp **** //     ///////////////////////     BIT LOOPING    ///////////////////////     //
 582:funsape/globalDefines.hpp **** #ifndef waitUntilBitIsSet
 583:funsape/globalDefines.hpp **** #   define waitUntilBitIsSet(reg, bit)          do{     \
 584:funsape/globalDefines.hpp ****         doNothing();                                    \
 585:funsape/globalDefines.hpp ****     } while (isBitClr((reg), (bit)))
 586:funsape/globalDefines.hpp **** #endif
 587:funsape/globalDefines.hpp **** #ifndef waitUntilBitIsClear
 588:funsape/globalDefines.hpp **** #   define waitUntilBitIsClear(reg, bit)        do{     \
 589:funsape/globalDefines.hpp ****         doNothing();                                    \
 590:funsape/globalDefines.hpp ****     }while(isBitSet((reg), (bit)))
 591:funsape/globalDefines.hpp **** #endif
 592:funsape/globalDefines.hpp **** 
 593:funsape/globalDefines.hpp **** //     ////////////////////     BIT MASK HANDLING    ////////////////////     //
 594:funsape/globalDefines.hpp **** #ifndef setMask
 595:funsape/globalDefines.hpp **** #   define setMask(reg, mask)                   ((reg) |= (mask))
 596:funsape/globalDefines.hpp **** #endif
 597:funsape/globalDefines.hpp **** #ifndef clrMask
 598:funsape/globalDefines.hpp **** #   define clrMask(reg, mask)                   ((reg) &= ~(mask))
 599:funsape/globalDefines.hpp **** #endif
 600:funsape/globalDefines.hpp **** #ifndef cplMask
 601:funsape/globalDefines.hpp **** #   define cplMask(reg, mask)                   ((reg) ^= (mask))
 602:funsape/globalDefines.hpp **** #endif
 603:funsape/globalDefines.hpp **** 
 604:funsape/globalDefines.hpp **** //     ////////////////     BIT MASK OFFSET HANDLING     ////////////////     //
 605:funsape/globalDefines.hpp **** #ifndef setMaskOffset
 606:funsape/globalDefines.hpp **** #   define setMaskOffset(reg, mask, offset)     ((reg) |= ((mask) << (offset)))
 607:funsape/globalDefines.hpp **** #endif
 608:funsape/globalDefines.hpp **** #ifndef clrMaskOffset
 609:funsape/globalDefines.hpp **** #   define clrMaskOffset(reg, mask, offset)     ((reg) &= ~((mask) << (offset)))
 610:funsape/globalDefines.hpp **** #endif
 611:funsape/globalDefines.hpp **** #ifndef cplMaskOffset
 612:funsape/globalDefines.hpp **** #   define cplMaskOffset(reg, mask, offset)     ((reg) ^= ((mask) << (offset)))
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 12


 613:funsape/globalDefines.hpp **** #endif
 614:funsape/globalDefines.hpp **** 
 615:funsape/globalDefines.hpp **** //     /////////////     DATA MANIPULATION (8-BITS WIDE)    /////////////     //
 616:funsape/globalDefines.hpp **** #define byteGetNibble1(dataByte)        (((dataByte) >> 4) & 0x0F)
 617:funsape/globalDefines.hpp **** #define byteGetNibble0(dataByte)        ((dataByte) & 0x0F)
 618:funsape/globalDefines.hpp **** #define byteSwitchNibbles(dataByte)     ((byteGetNibble0(dataByte) << 4) | \
 619:funsape/globalDefines.hpp ****         (byteGetNibble1(dataByte)))
 620:funsape/globalDefines.hpp **** 
 621:funsape/globalDefines.hpp **** //     ////////////     DATA MANIPULATION (16-BITS WIDE)     ////////////     //
 622:funsape/globalDefines.hpp **** #define hwordGetByte1(dataHword)        (((dataHword) >> 8) & 0x00FF)
 623:funsape/globalDefines.hpp **** #define hwordGetByte0(dataHword)        ((dataHword) & 0x00FF)
 624:funsape/globalDefines.hpp **** #define hwordSwitchBytes(dataHword)     ((hwordGetByte0(dataHword) << 8) | \
 625:funsape/globalDefines.hpp ****         (hwordGetByte1(dataHword)))
 626:funsape/globalDefines.hpp **** 
 627:funsape/globalDefines.hpp **** //     ////////////     DATA MANIPULATION (32-BITS WIDE)     ////////////     //
 628:funsape/globalDefines.hpp **** #define wordGetByte3(dataWord)          (((dataWord) >> 24) & 0x000000FF)
 629:funsape/globalDefines.hpp **** #define wordGetByte2(dataWord)          (((dataWord) >> 16) & 0x000000FF)
 630:funsape/globalDefines.hpp **** #define wordGetByte1(dataWord)          (((dataWord) >> 8) & 0x000000FF)
 631:funsape/globalDefines.hpp **** #define wordGetByte0(dataWord)          ((dataWord) & 0x000000FF)
 632:funsape/globalDefines.hpp **** #define wordSwitchBytes(dataWord)       ((wordGetByte0(dataWord) << 24)  | \
 633:funsape/globalDefines.hpp ****         (wordGetByte1(dataWord) << 16) | \
 634:funsape/globalDefines.hpp ****         (wordGetByte2(dataWord) << 8)  | \
 635:funsape/globalDefines.hpp ****         (wordGetByte3(dataWord)))
 636:funsape/globalDefines.hpp **** #define wordGetHword1(dataWord)         (((dataWord) >> 16) & 0x0000FFFF)
 637:funsape/globalDefines.hpp **** #define wordGetHword0(dataWord)         ((dataWord) & 0x0000FFFF)
 638:funsape/globalDefines.hpp **** #define wordSwitchHwords(dataWord)      ((wordGetHword0(dataWord) << 16) | \
 639:funsape/globalDefines.hpp ****         (wordGetHword1(dataWord)))
 640:funsape/globalDefines.hpp **** 
 641:funsape/globalDefines.hpp **** //     ////////////     DATA MANIPULATION (64-BITS WIDE)     ////////////     //
 642:funsape/globalDefines.hpp **** #define dwordGetByte7(dataDword)        (((dataDword) >> 56) & 0x00000000000000FF)
 643:funsape/globalDefines.hpp **** #define dwordGetByte6(dataDword)        (((dataDword) >> 48) & 0x00000000000000FF)
 644:funsape/globalDefines.hpp **** #define dwordGetByte5(dataDword)        (((dataDword) >> 40) & 0x00000000000000FF)
 645:funsape/globalDefines.hpp **** #define dwordGetByte4(dataDword)        (((dataDword) >> 32) & 0x00000000000000FF)
 646:funsape/globalDefines.hpp **** #define dwordGetByte3(dataDword)        (((dataDword) >> 24) & 0x00000000000000FF)
 647:funsape/globalDefines.hpp **** #define dwordGetByte2(dataDword)        (((dataDword) >> 16) & 0x00000000000000FF)
 648:funsape/globalDefines.hpp **** #define dwordGetByte1(dataDword)        (((dataDword) >> 8) & 0x00000000000000FF)
 649:funsape/globalDefines.hpp **** #define dwordGetByte0(dataDword)        ((dataDword) & 0x00000000000000FF)
 650:funsape/globalDefines.hpp **** #define dwordSwitchBytes(dataDword)     ((dwordGetByte0(dataDword) << 56)  | \
 651:funsape/globalDefines.hpp ****         (dwordGetByte1(dataDword) << 48) | \
 652:funsape/globalDefines.hpp ****         (dwordGetByte2(dataDword) << 40) | \
 653:funsape/globalDefines.hpp ****         (dwordGetByte3(dataDword) << 32) | \
 654:funsape/globalDefines.hpp ****         (dwordGetByte4(dataDword) << 24) | \
 655:funsape/globalDefines.hpp ****         (dwordGetByte5(dataDword) << 16) | \
 656:funsape/globalDefines.hpp ****         (dwordGetByte6(dataDword) << 8)  | \
 657:funsape/globalDefines.hpp ****         (dwordGetByte7(dataDword)))
 658:funsape/globalDefines.hpp **** #define dwordGetHword3(dataDword)       ((dataDword >> 48) & 0x000000000000FFFF)
 659:funsape/globalDefines.hpp **** #define dwordGetHword2(dataDword)       ((dataDword >> 32) & 0x000000000000FFFF)
 660:funsape/globalDefines.hpp **** #define dwordGetHword1(dataDword)       ((dataDword >> 16) & 0x000000000000FFFF)
 661:funsape/globalDefines.hpp **** #define dwordGetHword0(dataDword)       ((dataDword >> 0) & 0x000000000000FFFF)
 662:funsape/globalDefines.hpp **** #define dwordSwitchHwords(dataDword)    ((dwordGetHword0(dataDword) << 48)  | \
 663:funsape/globalDefines.hpp ****         (dwordGetHword1(dataDword) << 32) | \
 664:funsape/globalDefines.hpp ****         (dwordGetHword2(dataDword) << 16) | \
 665:funsape/globalDefines.hpp ****         (dwordGetHword3(dataDword)))
 666:funsape/globalDefines.hpp **** #define dwordGetWord1(dataDword)         (((dataDword) >> 32) & 0x00000000FFFFFFFF)
 667:funsape/globalDefines.hpp **** #define dwordGetWord0(dataDword)         ((dataDword) & 0x00000000FFFFFFFF)
 668:funsape/globalDefines.hpp **** #define dwordSwitchWords(dataDword)     ((dwordGetWord0(dataDword) << 32)  | \
 669:funsape/globalDefines.hpp ****         (dwordGetWord1(dataDword)))
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 13


 670:funsape/globalDefines.hpp **** 
 671:funsape/globalDefines.hpp **** //     /////////////////////     TRUNCATE VALUES    /////////////////////     //
 672:funsape/globalDefines.hpp **** #define getMaximumOf(var1, var2)        (       \
 673:funsape/globalDefines.hpp ****         ((var1) > (var2))                       \
 674:funsape/globalDefines.hpp ****         ? (var1)                                \
 675:funsape/globalDefines.hpp ****         : (var2))
 676:funsape/globalDefines.hpp **** #define getMinimumOf(var1, var2)        (       \
 677:funsape/globalDefines.hpp ****         ((var1) < (var2))                       \
 678:funsape/globalDefines.hpp ****         ? (var1)                                \
 679:funsape/globalDefines.hpp ****         : (var2))
 680:funsape/globalDefines.hpp **** #define truncateBetween(var, min, max)  (       \
 681:funsape/globalDefines.hpp ****         ((var) < (min))                         \
 682:funsape/globalDefines.hpp ****         ? (min)                                 \
 683:funsape/globalDefines.hpp ****         : (((var) > (max))                      \
 684:funsape/globalDefines.hpp ****                 ? (max)                         \
 685:funsape/globalDefines.hpp ****                 : (var)                         \
 686:funsape/globalDefines.hpp ****         ))
 687:funsape/globalDefines.hpp **** 
 688:funsape/globalDefines.hpp **** //     //////////////////////     STRINGIFYING    ///////////////////////     //
 689:funsape/globalDefines.hpp **** #define stringifyName(constant)         #constant
 690:funsape/globalDefines.hpp **** #define stringifyValue(constant)        stringifyName(constant)
 691:funsape/globalDefines.hpp **** 
 692:funsape/globalDefines.hpp **** // =============================================================================
 693:funsape/globalDefines.hpp **** // Extern global variables
 694:funsape/globalDefines.hpp **** // =============================================================================
 695:funsape/globalDefines.hpp **** 
 696:funsape/globalDefines.hpp **** // NONE
 697:funsape/globalDefines.hpp **** 
 698:funsape/globalDefines.hpp **** // =============================================================================
 699:funsape/globalDefines.hpp **** // Inline functions declaration
 700:funsape/globalDefines.hpp **** // =============================================================================
 701:funsape/globalDefines.hpp **** 
 702:funsape/globalDefines.hpp **** //     ///////////////////     CHARACTER HANDLING    ////////////////////     //
 703:funsape/globalDefines.hpp **** char_t inlined toLowerCase(cchar_t character_p);
 704:funsape/globalDefines.hpp **** char_t inlined toUpperCase(cchar_t character_p);
 705:funsape/globalDefines.hpp **** 
 706:funsape/globalDefines.hpp **** //     /////////////////////     DATA VALIDITY     //////////////////////     //
 707:funsape/globalDefines.hpp **** bool_t inlined isAsciiLowerCaseLetter(cchar_t character_p);
 708:funsape/globalDefines.hpp **** bool_t inlined isAsciiUpperCaseLetter(cchar_t character_p);
 709:funsape/globalDefines.hpp **** bool_t inlined isAsciiCommand(cchar_t character_p);
 710:funsape/globalDefines.hpp **** bool_t inlined isAsciiLetter(cchar_t character_p);
 711:funsape/globalDefines.hpp **** bool_t inlined isAsciiNumber(cchar_t character_p);
 712:funsape/globalDefines.hpp **** bool_t inlined isAsciiSymbol(cchar_t character_p);
 713:funsape/globalDefines.hpp **** 
 714:funsape/globalDefines.hpp **** //     /////////////////////     SYSTEM ACTIONS    //////////////////////     //
 715:funsape/globalDefines.hpp **** void inlined die(Error errorCode_p);
 716:funsape/globalDefines.hpp **** void inlined doNop(void);
 717:funsape/globalDefines.hpp **** void inlined doNothing(void);
 718:funsape/globalDefines.hpp **** void inlined systemHalt(void (*function_p)(void) = nullptr);
 719:funsape/globalDefines.hpp **** 
 720:funsape/globalDefines.hpp **** // =============================================================================
 721:funsape/globalDefines.hpp **** // Inline functions definitions
 722:funsape/globalDefines.hpp **** // =============================================================================
 723:funsape/globalDefines.hpp **** 
 724:funsape/globalDefines.hpp **** //     ///////////////////     CHARACTER HANDLING    ////////////////////     //
 725:funsape/globalDefines.hpp **** char_t inlined toLowerCase(cchar_t character_p)
 726:funsape/globalDefines.hpp **** {
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 14


 727:funsape/globalDefines.hpp ****     return ((isAsciiUpperCaseLetter(character_p)) ? (character_p + 0x20) : character_p);
 728:funsape/globalDefines.hpp **** }
 729:funsape/globalDefines.hpp **** 
 730:funsape/globalDefines.hpp **** char_t inlined toUpperCase(cchar_t character_p)
 731:funsape/globalDefines.hpp **** {
 732:funsape/globalDefines.hpp ****     return ((isAsciiLowerCaseLetter(character_p)) ? (character_p - 0x20) : character_p);
 733:funsape/globalDefines.hpp **** }
 734:funsape/globalDefines.hpp **** 
 735:funsape/globalDefines.hpp **** //     /////////////////////     DATA VALIDITY     //////////////////////     //
 736:funsape/globalDefines.hpp **** bool_t inlined isAsciiLowerCaseLetter(cchar_t character_p)
 737:funsape/globalDefines.hpp **** {
 738:funsape/globalDefines.hpp ****     return ((bool_t)(((character_p >= 'a') && (character_p <= 'z')) ? true : false));
 739:funsape/globalDefines.hpp **** }
 740:funsape/globalDefines.hpp **** 
 741:funsape/globalDefines.hpp **** bool_t inlined isAsciiUpperCaseLetter(cchar_t character_p)
 742:funsape/globalDefines.hpp **** {
 743:funsape/globalDefines.hpp ****     return ((bool_t)(((character_p >= 'A') && (character_p <= 'Z')) ? true : false));
 744:funsape/globalDefines.hpp **** }
 745:funsape/globalDefines.hpp **** 
 746:funsape/globalDefines.hpp **** bool_t inlined isAsciiCommand(cchar_t character_p)
 747:funsape/globalDefines.hpp **** {
 748:funsape/globalDefines.hpp ****     return ((bool_t)((character_p < ' ') ? true : false));
 749:funsape/globalDefines.hpp **** }
 750:funsape/globalDefines.hpp **** 
 751:funsape/globalDefines.hpp **** bool_t inlined isAsciiLetter(cchar_t character_p)
 752:funsape/globalDefines.hpp **** {
 753:funsape/globalDefines.hpp ****     return ((bool_t)((isAsciiLowerCaseLetter(character_p) || (isAsciiUpperCaseLetter(character_p)) 
 754:funsape/globalDefines.hpp **** }
 755:funsape/globalDefines.hpp **** 
 756:funsape/globalDefines.hpp **** bool_t inlined isAsciiNumber(cchar_t character_p)
 757:funsape/globalDefines.hpp **** {
 758:funsape/globalDefines.hpp ****     return ((bool_t)(((character_p >= '0') && (character_p <= '9')) ? true : false));
 759:funsape/globalDefines.hpp **** }
 760:funsape/globalDefines.hpp **** 
 761:funsape/globalDefines.hpp **** bool_t inlined isAsciiSymbol(cchar_t character_p)
 762:funsape/globalDefines.hpp **** {
 763:funsape/globalDefines.hpp ****     return ((bool_t)(((!isAsciiNumber(character_p)) && (!isAsciiCommand(character_p)) &&
 764:funsape/globalDefines.hpp ****                                     (!isAsciiLetter(character_p))) ? true : false));
 765:funsape/globalDefines.hpp **** }
 766:funsape/globalDefines.hpp **** 
 767:funsape/globalDefines.hpp **** //     /////////////////////     SYSTEM ACTIONS    //////////////////////     //
 768:funsape/globalDefines.hpp **** void inlined die(Error errorCode_p)
 769:funsape/globalDefines.hpp **** {
 770:funsape/globalDefines.hpp ****     printf("Failed with error=%u (0x%04x).\r", (cuint16_t)errorCode_p, (cuint16_t)errorCode_p);
 771:funsape/globalDefines.hpp ****     systemHalt();
 772:funsape/globalDefines.hpp **** 
 773:funsape/globalDefines.hpp ****     return;
 774:funsape/globalDefines.hpp **** }
 775:funsape/globalDefines.hpp **** 
 776:funsape/globalDefines.hpp **** void inlined doNop(void)
 777:funsape/globalDefines.hpp **** {
 778:funsape/globalDefines.hpp ****     asm volatile("nop");
 779:funsape/globalDefines.hpp **** 
 780:funsape/globalDefines.hpp ****     return;
 781:funsape/globalDefines.hpp **** }
 782:funsape/globalDefines.hpp **** 
 783:funsape/globalDefines.hpp **** void inlined doNothing(void)
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 15


 784:funsape/globalDefines.hpp **** {
 785:funsape/globalDefines.hpp ****     return;
 786:funsape/globalDefines.hpp **** }
 787:funsape/globalDefines.hpp **** 
 788:funsape/globalDefines.hpp **** void inlined systemHalt(void (*function_p)(void))
 789:funsape/globalDefines.hpp **** {
 790:funsape/globalDefines.hpp ****     if(isPointerValid(function_p)) {
 791:funsape/globalDefines.hpp ****         function_p();
 792:funsape/globalDefines.hpp ****     }
 793:funsape/globalDefines.hpp ****     while(1) {
 794:funsape/globalDefines.hpp ****         doNothing();
 795:funsape/globalDefines.hpp ****     }
 796:funsape/globalDefines.hpp **** 
 797:funsape/globalDefines.hpp ****     return;
 798:funsape/globalDefines.hpp **** }
 799:funsape/globalDefines.hpp **** 
 800:funsape/globalDefines.hpp **** // =============================================================================
 801:funsape/globalDefines.hpp **** // Public functions weakly defined
 802:funsape/globalDefines.hpp **** // =============================================================================
 803:funsape/globalDefines.hpp **** 
 804:funsape/globalDefines.hpp **** #define delayMs(time_p)                 _delay_ms(time_p)
 805:funsape/globalDefines.hpp **** #define delayUs(time_p)                 _delay_us(time_p)
 806:funsape/globalDefines.hpp **** 
 807:funsape/globalDefines.hpp **** weakened uint32_t getTick(void)
 808:funsape/globalDefines.hpp **** {
  17               		.loc 1 808 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 809:funsape/globalDefines.hpp ****     // TODO
 810:funsape/globalDefines.hpp ****     return 0;
  23               		.loc 1 810 5 view .LVU1
 811:funsape/globalDefines.hpp **** }
  24               		.loc 1 811 1 is_stmt 0 view .LVU2
  25 0000 60E0      		ldi r22,0
  26 0002 70E0      		ldi r23,0
  27 0004 CB01      		movw r24,r22
  28               	/* epilogue start */
  29 0006 0895      		ret
  30               		.cfi_endproc
  31               	.LFE32:
  33               		.section	.rodata.main.str1.1,"aMS",@progbits,1
  34               	.LC0:
  35 0000 4865 6C6C 		.string	"Hello "
  35      6F20 00
  36               		.section	.text.main,"ax",@progbits
  37               	.global	main
  39               	main:
  40               	.LFB74:
  41               		.file 2 "main.cpp"
   1:main.cpp      **** 
   2:main.cpp      **** #define F_CPU 16000000UL
   3:main.cpp      **** 
   4:main.cpp      **** #include <util/delay.h>
   5:main.cpp      **** #include <avr/interrupt.h>
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 16


   6:main.cpp      **** #include "funsape/globalDefines.hpp"
   7:main.cpp      **** #include "funsape/peripheral/usart0.hpp"
   8:main.cpp      **** #include "zfm20.hpp"
   9:main.cpp      **** #include "funsape/peripheral/timer0.hpp"
  10:main.cpp      **** #include "funsape/peripheral/int0.hpp"
  11:main.cpp      **** #include "kbitbang.hpp"
  12:main.cpp      **** // #include <xc.h>
  13:main.cpp      **** // #include <avr/interrupt.h>
  14:main.cpp      **** // #include <util/delay.h>
  15:main.cpp      **** // #include <stdio.h>
  16:main.cpp      **** // #include "inc/LCD_interface.h"
  17:main.cpp      **** // #include "inc/UART_interface.h"
  18:main.cpp      **** // #include "inc/FP_interface.h"
  19:main.cpp      **** // #include "inc/keys_interface.h"
  20:main.cpp      **** 
  21:main.cpp      **** 
  22:main.cpp      **** 
  23:main.cpp      **** int main()
  24:main.cpp      **** {
  42               		.loc 2 24 1 is_stmt 1 view -0
  43               		.cfi_startproc
  44 0000 CDB7      		in r28,__SP_L__
  45 0002 DEB7      		in r29,__SP_H__
  46               		.cfi_def_cfa_register 28
  47 0004 6F97      		sbiw r28,31
  48               		.cfi_def_cfa_offset 33
  49 0006 0FB6      		in __tmp_reg__,__SREG__
  50 0008 F894      		cli
  51 000a DEBF      		out __SP_H__,r29
  52 000c 0FBE      		out __SREG__,__tmp_reg__
  53 000e CDBF      		out __SP_L__,r28
  54               	/* prologue: function */
  55               	/* frame size = 31 */
  56               	/* stack size = 31 */
  57               	.L__stack_usage = 31
  25:main.cpp      ****     usart0.setBaudRate(Usart0::BaudRate::BAUD_RATE_57600);
  58               		.loc 2 25 5 view .LVU4
  59               		.loc 2 25 23 is_stmt 0 view .LVU5
  60 0010 40E0      		ldi r20,0
  61 0012 51EE      		ldi r21,lo8(-31)
  62 0014 60E0      		ldi r22,0
  63 0016 70E0      		ldi r23,0
  64 0018 80E0      		ldi r24,lo8(usart0)
  65 001a 90E0      		ldi r25,hi8(usart0)
  66 001c 0E94 0000 		call _ZN6Usart011setBaudRateENS_8BaudRateE
  67               	.LVL0:
  26:main.cpp      ****     usart0.enableTransmitter();
  68               		.loc 2 26 5 is_stmt 1 view .LVU6
  69               	.LBB16:
  70               	.LBI16:
  71               		.file 3 "funsape/peripheral/usart0.hpp"
   1:funsape/peripheral/usart0.hpp **** //!
   2:funsape/peripheral/usart0.hpp **** //! \file           USART.hpp
   3:funsape/peripheral/usart0.hpp **** //! \brief          USART/USART communication peripheral control for the FunSAPE AVR8 Library
   4:funsape/peripheral/usart0.hpp **** //! \author         Leandro Schwarz (bladabuska+funsapeavr8lib@gmail.com)
   5:funsape/peripheral/usart0.hpp **** //! \date           2023-04-05
   6:funsape/peripheral/usart0.hpp **** //! \version        23.04
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 17


   7:funsape/peripheral/usart0.hpp **** //! \copyright      license
   8:funsape/peripheral/usart0.hpp **** //! \details        USART/USART communication peripheral control for the FunSAPE AVR8 Library
   9:funsape/peripheral/usart0.hpp **** //! \todo           USART and USART in SPI mode
  10:funsape/peripheral/usart0.hpp **** //!
  11:funsape/peripheral/usart0.hpp **** 
  12:funsape/peripheral/usart0.hpp **** // =============================================================================
  13:funsape/peripheral/usart0.hpp **** // Include guard (START)
  14:funsape/peripheral/usart0.hpp **** // =============================================================================
  15:funsape/peripheral/usart0.hpp **** 
  16:funsape/peripheral/usart0.hpp **** #ifndef __USART0_HPP
  17:funsape/peripheral/usart0.hpp **** #define __USART0_HPP                            2304
  18:funsape/peripheral/usart0.hpp **** 
  19:funsape/peripheral/usart0.hpp **** // =============================================================================
  20:funsape/peripheral/usart0.hpp **** // Dependencies
  21:funsape/peripheral/usart0.hpp **** // =============================================================================
  22:funsape/peripheral/usart0.hpp **** 
  23:funsape/peripheral/usart0.hpp **** //     /////////////////     GLOBAL DEFINITIONS FILE    /////////////////     //
  24:funsape/peripheral/usart0.hpp **** #include "../globalDefines.hpp"
  25:funsape/peripheral/usart0.hpp **** #if !defined(__GLOBAL_DEFINES_HPP)
  26:funsape/peripheral/usart0.hpp **** #    error "Global definitions file is corrupted!"
  27:funsape/peripheral/usart0.hpp **** #elif __GLOBAL_DEFINES_HPP != __USART0_HPP
  28:funsape/peripheral/usart0.hpp **** #    error "Version mismatch between file header and global definitions file!"
  29:funsape/peripheral/usart0.hpp **** #endif
  30:funsape/peripheral/usart0.hpp **** 
  31:funsape/peripheral/usart0.hpp **** //     //////////////////     LIBRARY DEPENDENCIES     //////////////////     //
  32:funsape/peripheral/usart0.hpp **** #include "../util/debug.hpp"
  33:funsape/peripheral/usart0.hpp **** #if !defined(__DEBUG_HPP)
  34:funsape/peripheral/usart0.hpp **** #   error "Header file (debug.hpp) is corrupted!"
  35:funsape/peripheral/usart0.hpp **** #elif __DEBUG_HPP != __USART0_HPP
  36:funsape/peripheral/usart0.hpp **** #   error "Version mismatch between header file and library dependency (debug.hpp)!"
  37:funsape/peripheral/usart0.hpp **** #endif
  38:funsape/peripheral/usart0.hpp **** 
  39:funsape/peripheral/usart0.hpp **** #include "../util/systemStatus.hpp"
  40:funsape/peripheral/usart0.hpp **** 
  41:funsape/peripheral/usart0.hpp **** extern FILE usartStream;
  42:funsape/peripheral/usart0.hpp **** 
  43:funsape/peripheral/usart0.hpp **** // =============================================================================
  44:funsape/peripheral/usart0.hpp **** // Undefining previous definitions
  45:funsape/peripheral/usart0.hpp **** // =============================================================================
  46:funsape/peripheral/usart0.hpp **** 
  47:funsape/peripheral/usart0.hpp **** // NONE
  48:funsape/peripheral/usart0.hpp **** 
  49:funsape/peripheral/usart0.hpp **** // =============================================================================
  50:funsape/peripheral/usart0.hpp **** // Constant definitions
  51:funsape/peripheral/usart0.hpp **** // =============================================================================
  52:funsape/peripheral/usart0.hpp **** 
  53:funsape/peripheral/usart0.hpp **** // NONE
  54:funsape/peripheral/usart0.hpp **** 
  55:funsape/peripheral/usart0.hpp **** // =============================================================================
  56:funsape/peripheral/usart0.hpp **** // New data types
  57:funsape/peripheral/usart0.hpp **** // =============================================================================
  58:funsape/peripheral/usart0.hpp **** 
  59:funsape/peripheral/usart0.hpp **** // NONE
  60:funsape/peripheral/usart0.hpp **** 
  61:funsape/peripheral/usart0.hpp **** // =============================================================================
  62:funsape/peripheral/usart0.hpp **** // Interrupt callback functions
  63:funsape/peripheral/usart0.hpp **** // =============================================================================
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 18


  64:funsape/peripheral/usart0.hpp **** 
  65:funsape/peripheral/usart0.hpp **** //!
  66:funsape/peripheral/usart0.hpp **** //! \brief          USART Reception Complete interrupt callback function
  67:funsape/peripheral/usart0.hpp **** //! \details        This function is called when the USART Reception Complete
  68:funsape/peripheral/usart0.hpp **** //!                     interrupt is treated. It is a weak function that can be
  69:funsape/peripheral/usart0.hpp **** //!                     overwritten by user code.
  70:funsape/peripheral/usart0.hpp **** //!
  71:funsape/peripheral/usart0.hpp **** void usartReceptionCompleteCallback(void);
  72:funsape/peripheral/usart0.hpp **** 
  73:funsape/peripheral/usart0.hpp **** //!
  74:funsape/peripheral/usart0.hpp **** //! \brief          USART Transmission Buffer Empty interrupt callback function
  75:funsape/peripheral/usart0.hpp **** //! \details        This function is called when the USART Transmission Buffer
  76:funsape/peripheral/usart0.hpp **** //!                     Empty interrupt is treated. It is a weak function that
  77:funsape/peripheral/usart0.hpp **** //!                     can be overwritten by user code.
  78:funsape/peripheral/usart0.hpp **** //!
  79:funsape/peripheral/usart0.hpp **** void usartTransmissionBufferEmptyCallback(void);
  80:funsape/peripheral/usart0.hpp **** 
  81:funsape/peripheral/usart0.hpp **** //!
  82:funsape/peripheral/usart0.hpp **** //! \brief          USART Transmission Complete interrupt callback function
  83:funsape/peripheral/usart0.hpp **** //! \details        This function is called when the USART Transmission Complete
  84:funsape/peripheral/usart0.hpp **** //!                     interrupt is treated. It is a weak function that can be
  85:funsape/peripheral/usart0.hpp **** //!                     overwritten by user code.
  86:funsape/peripheral/usart0.hpp **** //!
  87:funsape/peripheral/usart0.hpp **** void usartTransmissionCompleteCallback(void);
  88:funsape/peripheral/usart0.hpp **** 
  89:funsape/peripheral/usart0.hpp **** // =============================================================================
  90:funsape/peripheral/usart0.hpp **** // Usart Class
  91:funsape/peripheral/usart0.hpp **** // =============================================================================
  92:funsape/peripheral/usart0.hpp **** 
  93:funsape/peripheral/usart0.hpp **** //!
  94:funsape/peripheral/usart0.hpp **** //! \brief          Usart0 class
  95:funsape/peripheral/usart0.hpp **** //! \details        Usart0 class
  96:funsape/peripheral/usart0.hpp **** //!
  97:funsape/peripheral/usart0.hpp **** class Usart0
  98:funsape/peripheral/usart0.hpp **** {
  99:funsape/peripheral/usart0.hpp ****     // -------------------------------------------------------------------------
 100:funsape/peripheral/usart0.hpp ****     // New data types ----------------------------------------------------------
 101:funsape/peripheral/usart0.hpp **** public:
 102:funsape/peripheral/usart0.hpp **** 
 103:funsape/peripheral/usart0.hpp ****     //     ///////////////     USART0 Operation Mode     ////////////////     //
 104:funsape/peripheral/usart0.hpp ****     //!
 105:funsape/peripheral/usart0.hpp ****     //! \brief      USART0 Operation Mode enumeration
 106:funsape/peripheral/usart0.hpp ****     //! \details    Operation mode associated with the USART0.
 107:funsape/peripheral/usart0.hpp ****     //! \warning    The value associate with the symbolic names may change
 108:funsape/peripheral/usart0.hpp ****     //!                 between builds and might not reflect the register/bits
 109:funsape/peripheral/usart0.hpp ****     //!                 real values. In order to ensure compatibility between
 110:funsape/peripheral/usart0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
 111:funsape/peripheral/usart0.hpp ****     //!                 the VALUE.
 112:funsape/peripheral/usart0.hpp ****     //!
 113:funsape/peripheral/usart0.hpp ****     enum class Mode : uint8_t {
 114:funsape/peripheral/usart0.hpp ****         ASYNCHRONOUS                            = 0,    //!< Peripheral in UART without double spee
 115:funsape/peripheral/usart0.hpp ****         ASYNCHRONOUS_DOUBLE_SPEED               = 1,    //!< Peripheral in UART with double speed m
 116:funsape/peripheral/usart0.hpp ****         SYNCHRONOUS_TX_RISING_RX_FALLING        = 2,    //!< Peripheral in USART mode on falling ed
 117:funsape/peripheral/usart0.hpp ****         SYNCHRONOUS_TX_FALLING_RX_RISING        = 3,    //!< Peripheral in USART mode on rising edg
 118:funsape/peripheral/usart0.hpp ****         MASTER_SPI_MODE_0                       = 4,    //!< Peripheral in master SPI mode 0.
 119:funsape/peripheral/usart0.hpp ****         MASTER_SPI_MODE_1                       = 5,    //!< Peripheral in master SPI mode 1.
 120:funsape/peripheral/usart0.hpp ****         MASTER_SPI_MODE_2                       = 6,    //!< Peripheral in master SPI mode 2.
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 19


 121:funsape/peripheral/usart0.hpp ****         MASTER_SPI_MODE_3                       = 7,    //!< Peripheral in master SPI mode 3.
 122:funsape/peripheral/usart0.hpp ****     };
 123:funsape/peripheral/usart0.hpp **** 
 124:funsape/peripheral/usart0.hpp ****     //     ///////////////    USART0 Reception Error     ////////////////     //
 125:funsape/peripheral/usart0.hpp ****     //!
 126:funsape/peripheral/usart0.hpp ****     //! \brief      USART0 Reception Error enumeration
 127:funsape/peripheral/usart0.hpp ****     //! \details    Reception error associated with the USART0.
 128:funsape/peripheral/usart0.hpp ****     //! \warning    The value associate with the symbolic names may change
 129:funsape/peripheral/usart0.hpp ****     //!                 between builds and might not reflect the register/bits
 130:funsape/peripheral/usart0.hpp ****     //!                 real values. In order to ensure compatibility between
 131:funsape/peripheral/usart0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
 132:funsape/peripheral/usart0.hpp ****     //!                 the VALUE.
 133:funsape/peripheral/usart0.hpp ****     //!
 134:funsape/peripheral/usart0.hpp ****     enum class ReceptionError : uint8_t {
 135:funsape/peripheral/usart0.hpp ****         NONE                            = 0,            //!< No reception errors occurred
 136:funsape/peripheral/usart0.hpp ****         FRAME_ERROR                     = (1 << 0),     //!< Frame format invalid
 137:funsape/peripheral/usart0.hpp ****         PARITY_ERROR                    = (1 << 1),     //!< Parity check failed
 138:funsape/peripheral/usart0.hpp ****         DATA_OVERRUN_ERROR              = (1 << 2),     //!< Data lost
 139:funsape/peripheral/usart0.hpp ****         ALL                             = (1 << 0) | (1 << 1) | (1 << 2)
 140:funsape/peripheral/usart0.hpp ****     };
 141:funsape/peripheral/usart0.hpp **** 
 142:funsape/peripheral/usart0.hpp ****     friend inlined ReceptionError operator|(ReceptionError a, ReceptionError b);
 143:funsape/peripheral/usart0.hpp ****     friend inlined ReceptionError &operator|=(ReceptionError &a, ReceptionError b);
 144:funsape/peripheral/usart0.hpp ****     friend inlined ReceptionError operator&(ReceptionError a, ReceptionError b);
 145:funsape/peripheral/usart0.hpp ****     friend inlined ReceptionError &operator&=(ReceptionError &a, ReceptionError b);
 146:funsape/peripheral/usart0.hpp ****     friend inlined ReceptionError operator~(ReceptionError a);
 147:funsape/peripheral/usart0.hpp **** 
 148:funsape/peripheral/usart0.hpp ****     //     /////////////////    USART0 Parity Mode     //////////////////     //
 149:funsape/peripheral/usart0.hpp ****     //!
 150:funsape/peripheral/usart0.hpp ****     //! \brief      USART0 Parity Mode enumeration
 151:funsape/peripheral/usart0.hpp ****     //! \details    Parity mode associated with the USART0.
 152:funsape/peripheral/usart0.hpp ****     //! \warning    The value associate with the symbolic names may change
 153:funsape/peripheral/usart0.hpp ****     //!                 between builds and might not reflect the register/bits
 154:funsape/peripheral/usart0.hpp ****     //!                 real values. In order to ensure compatibility between
 155:funsape/peripheral/usart0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
 156:funsape/peripheral/usart0.hpp ****     //!                 the VALUE.
 157:funsape/peripheral/usart0.hpp ****     //!
 158:funsape/peripheral/usart0.hpp ****     enum class Parity : uint8_t {
 159:funsape/peripheral/usart0.hpp ****         NONE                            = 0,    //!< No parity.
 160:funsape/peripheral/usart0.hpp ****         ODD                             = 1,    //!< Odd parity.
 161:funsape/peripheral/usart0.hpp ****         EVEN                            = 2     //!< Even parity.
 162:funsape/peripheral/usart0.hpp ****     };
 163:funsape/peripheral/usart0.hpp **** 
 164:funsape/peripheral/usart0.hpp ****     //     //////////////////     USART0 StopBits     ///////////////////     //
 165:funsape/peripheral/usart0.hpp ****     //!
 166:funsape/peripheral/usart0.hpp ****     //! \brief      USART0 StopBits enumeration
 167:funsape/peripheral/usart0.hpp ****     //! \details    Number of stop bits associated with the USART0.
 168:funsape/peripheral/usart0.hpp ****     //! \warning    The value associate with the symbolic names may change
 169:funsape/peripheral/usart0.hpp ****     //!                 between builds and might not reflect the register/bits
 170:funsape/peripheral/usart0.hpp ****     //!                 real values. In order to ensure compatibility between
 171:funsape/peripheral/usart0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
 172:funsape/peripheral/usart0.hpp ****     //!                 the VALUE.
 173:funsape/peripheral/usart0.hpp ****     //!
 174:funsape/peripheral/usart0.hpp ****     enum class StopBits : uint8_t {
 175:funsape/peripheral/usart0.hpp ****         SINGLE                          = 0,    //!< One stop bit
 176:funsape/peripheral/usart0.hpp ****         DOUBLE                          = 1     //|< Two stop bits
 177:funsape/peripheral/usart0.hpp ****     };
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 20


 178:funsape/peripheral/usart0.hpp **** 
 179:funsape/peripheral/usart0.hpp ****     //     //////////////////     USART0 DataSize     ///////////////////     //
 180:funsape/peripheral/usart0.hpp ****     //!
 181:funsape/peripheral/usart0.hpp ****     //! \brief      USART0 DataSize enumeration
 182:funsape/peripheral/usart0.hpp ****     //! \details    Data size associated with the USART0.
 183:funsape/peripheral/usart0.hpp ****     //! \warning    The value associate with the symbolic names may change
 184:funsape/peripheral/usart0.hpp ****     //!                 between builds and might not reflect the register/bits
 185:funsape/peripheral/usart0.hpp ****     //!                 real values. In order to ensure compatibility between
 186:funsape/peripheral/usart0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
 187:funsape/peripheral/usart0.hpp ****     //!                 the VALUE.
 188:funsape/peripheral/usart0.hpp ****     //!
 189:funsape/peripheral/usart0.hpp ****     enum class DataSize : uint8_t {
 190:funsape/peripheral/usart0.hpp ****         DATA_5_BITS                     = 0,
 191:funsape/peripheral/usart0.hpp ****         DATA_6_BITS                     = 1,
 192:funsape/peripheral/usart0.hpp ****         DATA_7_BITS                     = 2,
 193:funsape/peripheral/usart0.hpp ****         DATA_8_BITS                     = 3,
 194:funsape/peripheral/usart0.hpp ****         DATA_9_BITS                     = 7,
 195:funsape/peripheral/usart0.hpp ****     };
 196:funsape/peripheral/usart0.hpp **** 
 197:funsape/peripheral/usart0.hpp ****     //     /////////////////    USART0 FrameFormat     //////////////////     //
 198:funsape/peripheral/usart0.hpp ****     //!
 199:funsape/peripheral/usart0.hpp ****     //! \brief      USART0 FrameFormat enumeration
 200:funsape/peripheral/usart0.hpp ****     //! \details    Frame format mode associated with the USART0.
 201:funsape/peripheral/usart0.hpp ****     //! \warning    The value associate with the symbolic names may change
 202:funsape/peripheral/usart0.hpp ****     //!                 between builds and might not reflect the register/bits
 203:funsape/peripheral/usart0.hpp ****     //!                 real values. In order to ensure compatibility between
 204:funsape/peripheral/usart0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
 205:funsape/peripheral/usart0.hpp ****     //!                 the VALUE.
 206:funsape/peripheral/usart0.hpp ****     //!
 207:funsape/peripheral/usart0.hpp ****     enum class FrameFormat : uint8_t {
 208:funsape/peripheral/usart0.hpp ****         //                      = 0bDDDDPPSS
 209:funsape/peripheral/usart0.hpp ****         // DDDD -> Number of data bits (5-8)
 210:funsape/peripheral/usart0.hpp ****         // PP   -> Parity (NONE / ODD / EVEN)
 211:funsape/peripheral/usart0.hpp ****         // SS   -> Number of stop bits (1-2)
 212:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_8_N_1        = 0b10000001,
 213:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_8_O_1        = 0b10000101,
 214:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_8_E_1        = 0b10001001,
 215:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_8_N_2        = 0b10000010,
 216:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_8_O_2        = 0b10000110,
 217:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_8_E_2        = 0b10001010,
 218:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_9_N_1        = 0b10010001,
 219:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_9_O_1        = 0b10010101,
 220:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_9_E_1        = 0b10011001,
 221:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_9_N_2        = 0b10010010,
 222:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_9_O_2        = 0b10010110,
 223:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_9_E_2        = 0b10011010,
 224:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_5_N_1        = 0b01010001,
 225:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_5_O_1        = 0b01010101,
 226:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_5_E_1        = 0b01011001,
 227:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_5_N_2        = 0b01010010,
 228:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_5_O_2        = 0b01010110,
 229:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_5_E_2        = 0b01011010,
 230:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_6_N_1        = 0b01100001,
 231:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_6_O_1        = 0b01100101,
 232:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_6_E_1        = 0b01101001,
 233:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_6_N_2        = 0b01100010,
 234:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_6_O_2        = 0b01100110,
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 21


 235:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_6_E_2        = 0b01101010,
 236:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_7_N_1        = 0b01110001,
 237:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_7_O_1        = 0b01110101,
 238:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_7_E_1        = 0b01111001,
 239:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_7_N_2        = 0b01110010,
 240:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_7_O_2        = 0b01110110,
 241:funsape/peripheral/usart0.hpp ****         FRAME_FORMAT_7_E_2        = 0b01111010
 242:funsape/peripheral/usart0.hpp ****     };
 243:funsape/peripheral/usart0.hpp **** 
 244:funsape/peripheral/usart0.hpp ****     //     //////////////////    USART0 Baud Rate     ///////////////////     //
 245:funsape/peripheral/usart0.hpp ****     //!
 246:funsape/peripheral/usart0.hpp ****     //! \brief      USART0 Baud Rate enumeration
 247:funsape/peripheral/usart0.hpp ****     //! \details    Baud rate speed associated with the USART0.
 248:funsape/peripheral/usart0.hpp ****     //! \warning    The value associate with the symbolic names may change
 249:funsape/peripheral/usart0.hpp ****     //!                 between builds and might not reflect the register/bits
 250:funsape/peripheral/usart0.hpp ****     //!                 real values. In order to ensure compatibility between
 251:funsape/peripheral/usart0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
 252:funsape/peripheral/usart0.hpp ****     //!                 the VALUE.
 253:funsape/peripheral/usart0.hpp ****     //!
 254:funsape/peripheral/usart0.hpp ****     enum class BaudRate : uint32_t {
 255:funsape/peripheral/usart0.hpp ****         BAUD_RATE_600                   = 600UL,
 256:funsape/peripheral/usart0.hpp ****         BAUD_RATE_1200                  = 1200UL,
 257:funsape/peripheral/usart0.hpp ****         BAUD_RATE_1800                  = 1800UL,
 258:funsape/peripheral/usart0.hpp ****         BAUD_RATE_2400                  = 2400UL,
 259:funsape/peripheral/usart0.hpp ****         BAUD_RATE_4800                  = 4800UL,
 260:funsape/peripheral/usart0.hpp ****         BAUD_RATE_9600                  = 9600UL,
 261:funsape/peripheral/usart0.hpp ****         BAUD_RATE_14400                 = 14400UL,
 262:funsape/peripheral/usart0.hpp ****         BAUD_RATE_19200                 = 19200UL,
 263:funsape/peripheral/usart0.hpp ****         BAUD_RATE_28800                 = 28800UL,
 264:funsape/peripheral/usart0.hpp ****         BAUD_RATE_38400                 = 38400UL,
 265:funsape/peripheral/usart0.hpp ****         BAUD_RATE_56000                 = 56000UL,
 266:funsape/peripheral/usart0.hpp ****         BAUD_RATE_57600                 = 57600UL,
 267:funsape/peripheral/usart0.hpp ****         BAUD_RATE_115200                = 115200UL,
 268:funsape/peripheral/usart0.hpp ****         BAUD_RATE_128000                = 128000UL,
 269:funsape/peripheral/usart0.hpp ****         BAUD_RATE_230400                = 230400UL,
 270:funsape/peripheral/usart0.hpp ****         BAUD_RATE_256000                = 256000UL
 271:funsape/peripheral/usart0.hpp ****     };
 272:funsape/peripheral/usart0.hpp ****     // -------------------------------------------------------------------------
 273:funsape/peripheral/usart0.hpp ****     // Constructors ------------------------------------------------------------
 274:funsape/peripheral/usart0.hpp **** public:
 275:funsape/peripheral/usart0.hpp ****     //!
 276:funsape/peripheral/usart0.hpp ****     //! \brief      Usart0 class constructor
 277:funsape/peripheral/usart0.hpp ****     //! \details    Creates an Usart0 object
 278:funsape/peripheral/usart0.hpp ****     //!
 279:funsape/peripheral/usart0.hpp ****     Usart0(
 280:funsape/peripheral/usart0.hpp ****             BaudRate baudRate_p = BaudRate::BAUD_RATE_9600,
 281:funsape/peripheral/usart0.hpp ****             Mode mode_p = Mode::ASYNCHRONOUS,
 282:funsape/peripheral/usart0.hpp ****             FrameFormat format = FrameFormat::FRAME_FORMAT_8_N_1
 283:funsape/peripheral/usart0.hpp ****     );
 284:funsape/peripheral/usart0.hpp **** 
 285:funsape/peripheral/usart0.hpp ****     //!
 286:funsape/peripheral/usart0.hpp ****     //! \brief      Usart0 class constructor
 287:funsape/peripheral/usart0.hpp ****     //! \details    Creates an Usart0 object
 288:funsape/peripheral/usart0.hpp ****     //!
 289:funsape/peripheral/usart0.hpp ****     ~Usart0(
 290:funsape/peripheral/usart0.hpp ****             void
 291:funsape/peripheral/usart0.hpp ****     );
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 22


 292:funsape/peripheral/usart0.hpp **** 
 293:funsape/peripheral/usart0.hpp ****     // -------------------------------------------------------------------------
 294:funsape/peripheral/usart0.hpp ****     // Methods -----------------------------------------------------------------
 295:funsape/peripheral/usart0.hpp **** public:
 296:funsape/peripheral/usart0.hpp ****     //     ///////////////////     CONFIGURATION     ////////////////////     //
 297:funsape/peripheral/usart0.hpp **** 
 298:funsape/peripheral/usart0.hpp ****     //!
 299:funsape/peripheral/usart0.hpp ****     //! \brief      Initializes the USART0 module
 300:funsape/peripheral/usart0.hpp ****     //! \details    Initializes the USART0 module.
 301:funsape/peripheral/usart0.hpp ****     //! \return     bool_t              True on success / False on failure
 302:funsape/peripheral/usart0.hpp ****     //!
 303:funsape/peripheral/usart0.hpp ****     bool_t init(
 304:funsape/peripheral/usart0.hpp ****             void
 305:funsape/peripheral/usart0.hpp ****     );
 306:funsape/peripheral/usart0.hpp **** 
 307:funsape/peripheral/usart0.hpp ****     //!
 308:funsape/peripheral/usart0.hpp ****     //! \brief      Disables USART receiver
 309:funsape/peripheral/usart0.hpp ****     //! \details    Disables USART receiver
 310:funsape/peripheral/usart0.hpp ****     //!
 311:funsape/peripheral/usart0.hpp ****     void inlined disableReceiver(void);
 312:funsape/peripheral/usart0.hpp **** 
 313:funsape/peripheral/usart0.hpp ****     //!
 314:funsape/peripheral/usart0.hpp ****     //! \brief      Disables USART transmitter
 315:funsape/peripheral/usart0.hpp ****     //! \details    Disables USART transmitter
 316:funsape/peripheral/usart0.hpp ****     //!
 317:funsape/peripheral/usart0.hpp ****     void inlined disableTransmitter(void);
 318:funsape/peripheral/usart0.hpp **** 
 319:funsape/peripheral/usart0.hpp ****     //!
 320:funsape/peripheral/usart0.hpp ****     //! \brief      Enables USART receiver
 321:funsape/peripheral/usart0.hpp ****     //! \details    Enables USART receiver
 322:funsape/peripheral/usart0.hpp ****     //!
 323:funsape/peripheral/usart0.hpp ****     void inlined enableReceiver(void);
 324:funsape/peripheral/usart0.hpp **** 
 325:funsape/peripheral/usart0.hpp ****     //!
 326:funsape/peripheral/usart0.hpp ****     //! \brief      Enables USART transmitter
 327:funsape/peripheral/usart0.hpp ****     //! \details    Enables USART transmitter
 328:funsape/peripheral/usart0.hpp ****     //!
 329:funsape/peripheral/usart0.hpp ****     void inlined enableTransmitter(void);
 330:funsape/peripheral/usart0.hpp **** 
 331:funsape/peripheral/usart0.hpp ****     //!
 332:funsape/peripheral/usart0.hpp ****     //! \brief          Sets data size
 333:funsape/peripheral/usart0.hpp ****     //! \details        Sets data size.
 334:funsape/peripheral/usart0.hpp ****     //! \param          dataSize_p      Data size
 335:funsape/peripheral/usart0.hpp ****     //!
 336:funsape/peripheral/usart0.hpp ****     bool_t setDataSize(
 337:funsape/peripheral/usart0.hpp ****             const DataSize dataSize_p
 338:funsape/peripheral/usart0.hpp ****     );
 339:funsape/peripheral/usart0.hpp **** 
 340:funsape/peripheral/usart0.hpp ****     bool_t setMode(
 341:funsape/peripheral/usart0.hpp ****             const Mode mode_p
 342:funsape/peripheral/usart0.hpp ****     );
 343:funsape/peripheral/usart0.hpp **** 
 344:funsape/peripheral/usart0.hpp ****     bool_t setStopBits(
 345:funsape/peripheral/usart0.hpp ****             const StopBits stopBits_p
 346:funsape/peripheral/usart0.hpp ****     );
 347:funsape/peripheral/usart0.hpp **** 
 348:funsape/peripheral/usart0.hpp ****     bool_t setParity(
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 23


 349:funsape/peripheral/usart0.hpp ****             const Parity parity_p
 350:funsape/peripheral/usart0.hpp ****     );
 351:funsape/peripheral/usart0.hpp **** 
 352:funsape/peripheral/usart0.hpp ****     bool_t setBaudRate(
 353:funsape/peripheral/usart0.hpp ****             const BaudRate baudRate_p
 354:funsape/peripheral/usart0.hpp ****     );
 355:funsape/peripheral/usart0.hpp **** 
 356:funsape/peripheral/usart0.hpp ****     bool_t setFrameFormat(
 357:funsape/peripheral/usart0.hpp ****             const FrameFormat frameFormat_p
 358:funsape/peripheral/usart0.hpp ****     );
 359:funsape/peripheral/usart0.hpp **** 
 360:funsape/peripheral/usart0.hpp ****     //     ///////////////////////     STATUS    ////////////////////////     //
 361:funsape/peripheral/usart0.hpp **** 
 362:funsape/peripheral/usart0.hpp ****     //!
 363:funsape/peripheral/usart0.hpp ****     //! \brief      Verifies reception status
 364:funsape/peripheral/usart0.hpp ****     //! \details    Verifies reception status.
 365:funsape/peripheral/usart0.hpp ****     //! \return     bool_t              True on reception ended / False otherwise
 366:funsape/peripheral/usart0.hpp ****     //!
 367:funsape/peripheral/usart0.hpp ****     bool_t inlined isReceptionComplete(void);
 368:funsape/peripheral/usart0.hpp **** 
 369:funsape/peripheral/usart0.hpp ****     //!
 370:funsape/peripheral/usart0.hpp ****     //! \brief      Verifies transmission buffer status
 371:funsape/peripheral/usart0.hpp ****     //! \details    Verifies transmission buffer status.
 372:funsape/peripheral/usart0.hpp ****     //! \return     bool_t              True on buffer empty / False otherwise
 373:funsape/peripheral/usart0.hpp ****     //!
 374:funsape/peripheral/usart0.hpp ****     bool_t inlined isTransmissionBufferEmpty(void);
 375:funsape/peripheral/usart0.hpp **** 
 376:funsape/peripheral/usart0.hpp ****     //!
 377:funsape/peripheral/usart0.hpp ****     //! \brief      Verifies transmission status
 378:funsape/peripheral/usart0.hpp ****     //! \details    Verifies transmission status.
 379:funsape/peripheral/usart0.hpp ****     //! \return     bool_t              True on transmission ended / False otherwise
 380:funsape/peripheral/usart0.hpp ****     //!
 381:funsape/peripheral/usart0.hpp ****     bool_t inlined isTransmissionComplete(void);
 382:funsape/peripheral/usart0.hpp **** 
 383:funsape/peripheral/usart0.hpp ****     //!
 384:funsape/peripheral/usart0.hpp ****     //! \brief      Get status of the last reception
 385:funsape/peripheral/usart0.hpp ****     //! \details    Get status of the last reception.
 386:funsape/peripheral/usart0.hpp ****     //! \param      errorCode_p         Pointer to store the reception error code
 387:funsape/peripheral/usart0.hpp ****     //! \return     bool_t              True on success / False on failure
 388:funsape/peripheral/usart0.hpp ****     //!
 389:funsape/peripheral/usart0.hpp ****     bool_t getReceptionStatus(
 390:funsape/peripheral/usart0.hpp ****             ReceptionError *errorCode_p
 391:funsape/peripheral/usart0.hpp ****     );
 392:funsape/peripheral/usart0.hpp **** 
 393:funsape/peripheral/usart0.hpp ****     //     /////////////////////     INTERRUPTS    //////////////////////     //
 394:funsape/peripheral/usart0.hpp **** 
 395:funsape/peripheral/usart0.hpp ****     //!
 396:funsape/peripheral/usart0.hpp ****     //! \brief      Activates Reception Complete interrupt
 397:funsape/peripheral/usart0.hpp ****     //! \details    Activates Reception Complete interrupt.
 398:funsape/peripheral/usart0.hpp ****     //!
 399:funsape/peripheral/usart0.hpp ****     void inlined activateReceptionCompleteInterrupt(void);
 400:funsape/peripheral/usart0.hpp **** 
 401:funsape/peripheral/usart0.hpp ****     //!
 402:funsape/peripheral/usart0.hpp ****     //! \brief      Activates Transmission Buffer Empty interrupt
 403:funsape/peripheral/usart0.hpp ****     //! \details    Activates Transmission Buffer Empty interrupt.
 404:funsape/peripheral/usart0.hpp ****     //!
 405:funsape/peripheral/usart0.hpp ****     void inlined activateTransmissionBufferEmptyInterrupt(void);
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 24


 406:funsape/peripheral/usart0.hpp **** 
 407:funsape/peripheral/usart0.hpp ****     //!
 408:funsape/peripheral/usart0.hpp ****     //! \brief      Activates Transmission Complete interrupt
 409:funsape/peripheral/usart0.hpp ****     //! \details    Activates Transmission Complete interrupt.
 410:funsape/peripheral/usart0.hpp ****     //!
 411:funsape/peripheral/usart0.hpp ****     void inlined activateTransmissionCompleteInterrupt(void);
 412:funsape/peripheral/usart0.hpp **** 
 413:funsape/peripheral/usart0.hpp ****     //!
 414:funsape/peripheral/usart0.hpp ****     //! \brief      Deactivates Reception Complete interrupt
 415:funsape/peripheral/usart0.hpp ****     //! \details    Deactivates Reception Complete interrupt
 416:funsape/peripheral/usart0.hpp ****     //!
 417:funsape/peripheral/usart0.hpp ****     void inlined deactivateReceptionCompleteInterrupt(void);
 418:funsape/peripheral/usart0.hpp **** 
 419:funsape/peripheral/usart0.hpp ****     //!
 420:funsape/peripheral/usart0.hpp ****     //! \brief      Deactivates Transmission Buffer Empty interrupt
 421:funsape/peripheral/usart0.hpp ****     //! \details    Deactivates Transmission Buffer Empty interrupt.
 422:funsape/peripheral/usart0.hpp ****     //!
 423:funsape/peripheral/usart0.hpp ****     void inlined deactivateTransmissionBufferEmptyInterrupt(void) ;
 424:funsape/peripheral/usart0.hpp **** 
 425:funsape/peripheral/usart0.hpp ****     //!
 426:funsape/peripheral/usart0.hpp ****     //! \brief      Deactivates Transmission Complete interrupt
 427:funsape/peripheral/usart0.hpp ****     //! \details    Deactivates Transmission Complete interrupt.
 428:funsape/peripheral/usart0.hpp ****     //!
 429:funsape/peripheral/usart0.hpp ****     void inlined deactivateTransmissionCompleteInterrupt(void);
 430:funsape/peripheral/usart0.hpp **** 
 431:funsape/peripheral/usart0.hpp ****     //!
 432:funsape/peripheral/usart0.hpp ****     //! \brief      Redirects standard i/o streams
 433:funsape/peripheral/usart0.hpp ****     //! \details    Redirects standard i/o streams.
 434:funsape/peripheral/usart0.hpp ****     //!
 435:funsape/peripheral/usart0.hpp ****     void inlined stdio(void);
 436:funsape/peripheral/usart0.hpp **** 
 437:funsape/peripheral/usart0.hpp ****     // UCSRA    U2X0
 438:funsape/peripheral/usart0.hpp ****     // UCSRA    MPCM0
 439:funsape/peripheral/usart0.hpp **** 
 440:funsape/peripheral/usart0.hpp ****     bool_t sendData(cuint16_t data_p);
 441:funsape/peripheral/usart0.hpp ****     bool_t receiveData(uint16_t *data_p);
 442:funsape/peripheral/usart0.hpp ****     void flushReceptionBuffer(void);
 443:funsape/peripheral/usart0.hpp ****     char receiveDataStd(FILE *stream_p);
 444:funsape/peripheral/usart0.hpp ****     int16_t sendDataStd(char data_p, FILE *stream_p);
 445:funsape/peripheral/usart0.hpp **** 
 446:funsape/peripheral/usart0.hpp **** 
 447:funsape/peripheral/usart0.hpp **** private:
 448:funsape/peripheral/usart0.hpp ****     char _receiveDataStd(FILE *stream_p);
 449:funsape/peripheral/usart0.hpp ****     void _clearDataOverrunError(void);
 450:funsape/peripheral/usart0.hpp ****     void _clearFrameError(void);
 451:funsape/peripheral/usart0.hpp ****     void _clearParityError(void);
 452:funsape/peripheral/usart0.hpp **** 
 453:funsape/peripheral/usart0.hpp ****     // -------------------------------------------------------------------------
 454:funsape/peripheral/usart0.hpp ****     // Properties --------------------------------------------------------------
 455:funsape/peripheral/usart0.hpp **** private:
 456:funsape/peripheral/usart0.hpp ****     //     ////////////////     RECEPTION ERROR FLAGS    ////////////////     //
 457:funsape/peripheral/usart0.hpp ****     bool_t  _isDataOverrunError                         : 1;
 458:funsape/peripheral/usart0.hpp ****     bool_t  _isFrameError                               : 1;
 459:funsape/peripheral/usart0.hpp ****     bool_t  _isParityError                              : 1;
 460:funsape/peripheral/usart0.hpp **** 
 461:funsape/peripheral/usart0.hpp ****     //     /////////////////     CONTROL AND STATUS     /////////////////     //
 462:funsape/peripheral/usart0.hpp ****     bool_t  _isInitialized                              : 1;
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 25


 463:funsape/peripheral/usart0.hpp ****     bool_t  _isReceiverEnabled                          : 1;
 464:funsape/peripheral/usart0.hpp ****     bool_t  _isReceptionCompleteInterruptEnabled        : 1;
 465:funsape/peripheral/usart0.hpp ****     bool_t  _isTransmissionBufferEmptyInterruptEnabled  : 1;
 466:funsape/peripheral/usart0.hpp ****     bool_t  _isTransmissionCompleteInterruptEnabled     : 1;
 467:funsape/peripheral/usart0.hpp ****     bool_t  _isTransmitterEnabled                       : 1;
 468:funsape/peripheral/usart0.hpp ****     Error   _lastError;
 469:funsape/peripheral/usart0.hpp **** 
 470:funsape/peripheral/usart0.hpp ****     //     ////////////////////     CONFIGURATION    ////////////////////     //
 471:funsape/peripheral/usart0.hpp ****     DataSize        _dataSize;
 472:funsape/peripheral/usart0.hpp ****     Mode            _mode;
 473:funsape/peripheral/usart0.hpp ****     BaudRate        _baudRate;
 474:funsape/peripheral/usart0.hpp ****     Parity          _parity;
 475:funsape/peripheral/usart0.hpp ****     StopBits        _stopBits;
 476:funsape/peripheral/usart0.hpp **** }; // class Usart0
 477:funsape/peripheral/usart0.hpp **** 
 478:funsape/peripheral/usart0.hpp **** // =============================================================================
 479:funsape/peripheral/usart0.hpp **** // Class inlined functions
 480:funsape/peripheral/usart0.hpp **** // =============================================================================
 481:funsape/peripheral/usart0.hpp **** 
 482:funsape/peripheral/usart0.hpp **** void inlined Usart0::disableReceiver(void)
 483:funsape/peripheral/usart0.hpp **** {
 484:funsape/peripheral/usart0.hpp ****     clrBit(UCSR0B, RXEN0);
 485:funsape/peripheral/usart0.hpp ****     return;
 486:funsape/peripheral/usart0.hpp **** }
 487:funsape/peripheral/usart0.hpp **** 
 488:funsape/peripheral/usart0.hpp **** void inlined Usart0::disableTransmitter(void)
 489:funsape/peripheral/usart0.hpp **** {
 490:funsape/peripheral/usart0.hpp ****     clrBit(UCSR0B, TXEN0);
 491:funsape/peripheral/usart0.hpp ****     return;
 492:funsape/peripheral/usart0.hpp **** }
 493:funsape/peripheral/usart0.hpp **** 
 494:funsape/peripheral/usart0.hpp **** void inlined Usart0::enableReceiver(void)
 495:funsape/peripheral/usart0.hpp **** {
 496:funsape/peripheral/usart0.hpp ****     setBit(UCSR0B, RXEN0);
 497:funsape/peripheral/usart0.hpp ****     return;
 498:funsape/peripheral/usart0.hpp **** }
 499:funsape/peripheral/usart0.hpp **** 
 500:funsape/peripheral/usart0.hpp **** void inlined Usart0::enableTransmitter(void)
  72               		.loc 3 500 14 view .LVU7
  73               	.LBB17:
 501:funsape/peripheral/usart0.hpp **** {
 502:funsape/peripheral/usart0.hpp ****     setBit(UCSR0B, TXEN0);
  74               		.loc 3 502 5 view .LVU8
  75 0020 E1EC      		ldi r30,lo8(-63)
  76 0022 F0E0      		ldi r31,0
  77 0024 8081      		ld r24,Z
  78 0026 8860      		ori r24,lo8(8)
  79 0028 8083      		st Z,r24
 503:funsape/peripheral/usart0.hpp ****     return;
  80               		.loc 3 503 5 view .LVU9
  81               	.LBE17:
  82               	.LBE16:
  27:main.cpp      ****     usart0.enableReceiver();
  83               		.loc 2 27 5 view .LVU10
  84               	.LVL1:
  85               	.LBB18:
  86               	.LBI18:
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 26


 494:funsape/peripheral/usart0.hpp **** {
  87               		.loc 3 494 14 view .LVU11
  88               	.LBB19:
 496:funsape/peripheral/usart0.hpp ****     return;
  89               		.loc 3 496 5 view .LVU12
  90 002a 8081      		ld r24,Z
  91 002c 8061      		ori r24,lo8(16)
  92 002e 8083      		st Z,r24
 497:funsape/peripheral/usart0.hpp **** }
  93               		.loc 3 497 5 view .LVU13
  94               	.LBE19:
  95               	.LBE18:
  28:main.cpp      ****     usart0.init();
  96               		.loc 2 28 5 view .LVU14
  97               		.loc 2 28 16 is_stmt 0 view .LVU15
  98 0030 80E0      		ldi r24,lo8(usart0)
  99 0032 90E0      		ldi r25,hi8(usart0)
 100 0034 0E94 0000 		call _ZN6Usart04initEv
 101               	.LVL2:
  29:main.cpp      ****     usart0.stdio();
 102               		.loc 2 29 5 is_stmt 1 view .LVU16
 103               	.LBB20:
 104               	.LBI20:
 504:funsape/peripheral/usart0.hpp **** }
 505:funsape/peripheral/usart0.hpp **** 
 506:funsape/peripheral/usart0.hpp **** bool_t inlined Usart0::isReceptionComplete(void)
 507:funsape/peripheral/usart0.hpp **** {
 508:funsape/peripheral/usart0.hpp ****     return isBitSet(UCSR0A, RXC0);
 509:funsape/peripheral/usart0.hpp **** }
 510:funsape/peripheral/usart0.hpp **** 
 511:funsape/peripheral/usart0.hpp **** bool_t inlined Usart0::isTransmissionBufferEmpty(void)
 512:funsape/peripheral/usart0.hpp **** {
 513:funsape/peripheral/usart0.hpp ****     return isBitSet(UCSR0A, UDRE0);
 514:funsape/peripheral/usart0.hpp **** }
 515:funsape/peripheral/usart0.hpp **** 
 516:funsape/peripheral/usart0.hpp **** bool_t inlined Usart0::isTransmissionComplete(void)
 517:funsape/peripheral/usart0.hpp **** {
 518:funsape/peripheral/usart0.hpp ****     return isBitSet(UCSR0A, TXC0);
 519:funsape/peripheral/usart0.hpp **** }
 520:funsape/peripheral/usart0.hpp **** 
 521:funsape/peripheral/usart0.hpp **** void inlined Usart0::activateReceptionCompleteInterrupt(void)
 522:funsape/peripheral/usart0.hpp **** {
 523:funsape/peripheral/usart0.hpp ****     setBit(UCSR0B, RXCIE0);
 524:funsape/peripheral/usart0.hpp ****     return;
 525:funsape/peripheral/usart0.hpp **** }
 526:funsape/peripheral/usart0.hpp **** 
 527:funsape/peripheral/usart0.hpp **** void inlined Usart0::activateTransmissionBufferEmptyInterrupt(void)
 528:funsape/peripheral/usart0.hpp **** {
 529:funsape/peripheral/usart0.hpp ****     setBit(UCSR0B, UDRIE0);
 530:funsape/peripheral/usart0.hpp ****     return;
 531:funsape/peripheral/usart0.hpp **** }
 532:funsape/peripheral/usart0.hpp **** 
 533:funsape/peripheral/usart0.hpp **** void inlined Usart0::activateTransmissionCompleteInterrupt(void)
 534:funsape/peripheral/usart0.hpp **** {
 535:funsape/peripheral/usart0.hpp ****     setBit(UCSR0B, TXCIE0);
 536:funsape/peripheral/usart0.hpp ****     return;
 537:funsape/peripheral/usart0.hpp **** }
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 27


 538:funsape/peripheral/usart0.hpp **** 
 539:funsape/peripheral/usart0.hpp **** void inlined Usart0::deactivateReceptionCompleteInterrupt(void)
 540:funsape/peripheral/usart0.hpp **** {
 541:funsape/peripheral/usart0.hpp ****     clrBit(UCSR0B, RXCIE0);
 542:funsape/peripheral/usart0.hpp ****     return;
 543:funsape/peripheral/usart0.hpp **** }
 544:funsape/peripheral/usart0.hpp **** 
 545:funsape/peripheral/usart0.hpp **** void inlined Usart0::deactivateTransmissionBufferEmptyInterrupt(void)
 546:funsape/peripheral/usart0.hpp **** {
 547:funsape/peripheral/usart0.hpp ****     clrBit(UCSR0B, UDRIE0);
 548:funsape/peripheral/usart0.hpp ****     return;
 549:funsape/peripheral/usart0.hpp **** }
 550:funsape/peripheral/usart0.hpp **** 
 551:funsape/peripheral/usart0.hpp **** void inlined Usart0::deactivateTransmissionCompleteInterrupt(void)
 552:funsape/peripheral/usart0.hpp **** {
 553:funsape/peripheral/usart0.hpp ****     clrBit(UCSR0B, TXCIE0);
 554:funsape/peripheral/usart0.hpp ****     return;
 555:funsape/peripheral/usart0.hpp **** }
 556:funsape/peripheral/usart0.hpp **** 
 557:funsape/peripheral/usart0.hpp **** void inlined Usart0::stdio(void)
 105               		.loc 3 557 14 view .LVU17
 106               	.LBB21:
 558:funsape/peripheral/usart0.hpp **** {
 559:funsape/peripheral/usart0.hpp ****     stdin = stdout = stderr = &usartStream;
 107               		.loc 3 559 5 view .LVU18
 108               		.loc 3 559 29 is_stmt 0 view .LVU19
 109 0038 E0E0      		ldi r30,lo8(__iob)
 110 003a F0E0      		ldi r31,hi8(__iob)
 111 003c 80E0      		ldi r24,lo8(usartStream)
 112 003e 90E0      		ldi r25,hi8(usartStream)
 113 0040 9583      		std Z+5,r25
 114 0042 8483      		std Z+4,r24
 115               		.loc 3 559 20 view .LVU20
 116 0044 9383      		std Z+3,r25
 117 0046 8283      		std Z+2,r24
 118               		.loc 3 559 11 view .LVU21
 119 0048 9183      		std Z+1,r25
 120 004a 8083      		st Z,r24
 560:funsape/peripheral/usart0.hpp ****     return;
 121               		.loc 3 560 5 is_stmt 1 view .LVU22
 122               	.LBE21:
 123               	.LBE20:
  30:main.cpp      ****     //printf("USART OK \r\n");
  31:main.cpp      ****     // UART_InterrptInit(57600);
  32:main.cpp      ****     // lcdbegin();
  33:main.cpp      ****     // keys_init();
  34:main.cpp      ****     Zfm20 zfm20;
 124               		.loc 2 34 5 view .LVU23
 125               		.loc 2 34 11 is_stmt 0 view .LVU24
 126 004c CE01      		movw r24,r28
 127 004e 0196      		adiw r24,1
 128 0050 0E94 0000 		call _ZN5Zfm20C1Ev
 129               	.LVL3:
  35:main.cpp      ****     uint8_t auxString[14];
 130               		.loc 2 35 5 is_stmt 1 view .LVU25
  36:main.cpp      ****     uint8_t testdata=0x01;
 131               		.loc 2 36 5 view .LVU26
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 28


  37:main.cpp      **** 
  38:main.cpp      ****     //////////////////////// Configuração do USART de software para bitbang de debugacao/////////
  39:main.cpp      ****     //Timer Configuration
  40:main.cpp      ****     DDRD = 0xFF;
 132               		.loc 2 40 5 view .LVU27
 133               		.loc 2 40 10 is_stmt 0 view .LVU28
 134 0054 1FEF      		ldi r17,lo8(-1)
 135 0056 1AB9      		out 0xa,r17
  41:main.cpp      ****     setBit(PORTD, PD2);
 136               		.loc 2 41 5 is_stmt 1 view .LVU29
 137 0058 8BB1      		in r24,0xb
 138 005a 8460      		ori r24,lo8(4)
 139 005c 8BB9      		out 0xb,r24
  42:main.cpp      ****     Timer0 timer0;
 140               		.loc 2 42 5 view .LVU30
 141               		.loc 2 42 12 is_stmt 0 view .LVU31
 142 005e CE01      		movw r24,r28
 143 0060 4B96      		adiw r24,27
 144 0062 0E94 0000 		call _ZN6Timer0C1Ev
 145               	.LVL4:
  43:main.cpp      ****     timer0.setMode(Timer0::Mode::CTC_OCRA);
 146               		.loc 2 43 5 is_stmt 1 view .LVU32
 147               		.loc 2 43 19 is_stmt 0 view .LVU33
 148 0066 62E0      		ldi r22,lo8(2)
 149 0068 CE01      		movw r24,r28
 150 006a 4B96      		adiw r24,27
 151 006c 0E94 0000 		call _ZN6Timer07setModeENS_4ModeE
 152               	.LVL5:
  44:main.cpp      ****     timer0.setClockSource(Timer0::ClockSource::PRESCALER_8);
 153               		.loc 2 44 5 is_stmt 1 view .LVU34
 154               		.loc 2 44 26 is_stmt 0 view .LVU35
 155 0070 62E0      		ldi r22,lo8(2)
 156 0072 CE01      		movw r24,r28
 157 0074 4B96      		adiw r24,27
 158 0076 0E94 0000 		call _ZN6Timer014setClockSourceENS_11ClockSourceE
 159               	.LVL6:
  45:main.cpp      ****     timer0.setCompareAValue(208);
 160               		.loc 2 45 5 is_stmt 1 view .LVU36
 161               	.LBB22:
 162               	.LBI22:
 163               		.file 4 "funsape/peripheral/timer0.hpp"
   1:funsape/peripheral/timer0.hpp **** //!
   2:funsape/peripheral/timer0.hpp **** //! \file           timer0.hpp
   3:funsape/peripheral/timer0.hpp **** //! \brief          TIMER0 peripheral control for the FunSAPE AVR8 Library
   4:funsape/peripheral/timer0.hpp **** //! \author         Leandro Schwarz (bladabuska+funsapeavr8lib@gmail.com)
   5:funsape/peripheral/timer0.hpp **** //! \date           2023-04-05
   6:funsape/peripheral/timer0.hpp **** //! \version        23.04
   7:funsape/peripheral/timer0.hpp **** //! \copyright      license
   8:funsape/peripheral/timer0.hpp **** //! \details        TIMER0 peripheral control for the FunSAPE AVR8 Library
   9:funsape/peripheral/timer0.hpp **** //! \todo           Todo list
  10:funsape/peripheral/timer0.hpp **** //!
  11:funsape/peripheral/timer0.hpp **** 
  12:funsape/peripheral/timer0.hpp **** // =============================================================================
  13:funsape/peripheral/timer0.hpp **** // Include guard (START)
  14:funsape/peripheral/timer0.hpp **** // =============================================================================
  15:funsape/peripheral/timer0.hpp **** 
  16:funsape/peripheral/timer0.hpp **** #ifndef __TIMER0_HPP
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 29


  17:funsape/peripheral/timer0.hpp **** #define __TIMER0_HPP                            2304
  18:funsape/peripheral/timer0.hpp **** 
  19:funsape/peripheral/timer0.hpp **** // =============================================================================
  20:funsape/peripheral/timer0.hpp **** // Dependencies
  21:funsape/peripheral/timer0.hpp **** // =============================================================================
  22:funsape/peripheral/timer0.hpp **** 
  23:funsape/peripheral/timer0.hpp **** //     /////////////////     GLOBAL DEFINITIONS FILE    /////////////////     //
  24:funsape/peripheral/timer0.hpp **** #include "../globalDefines.hpp"
  25:funsape/peripheral/timer0.hpp **** #if !defined(__GLOBAL_DEFINES_HPP)
  26:funsape/peripheral/timer0.hpp **** #    error "Global definitions file is corrupted!"
  27:funsape/peripheral/timer0.hpp **** #elif __GLOBAL_DEFINES_HPP != __TIMER0_HPP
  28:funsape/peripheral/timer0.hpp **** #    error "Version mismatch between file header and global definitions file!"
  29:funsape/peripheral/timer0.hpp **** #endif
  30:funsape/peripheral/timer0.hpp **** 
  31:funsape/peripheral/timer0.hpp **** //     //////////////////     LIBRARY DEPENDENCIES     //////////////////     //
  32:funsape/peripheral/timer0.hpp **** #include "../util/debug.hpp"
  33:funsape/peripheral/timer0.hpp **** #if !defined(__DEBUG_HPP)
  34:funsape/peripheral/timer0.hpp **** #   error "Header file (debug.hpp) is corrupted!"
  35:funsape/peripheral/timer0.hpp **** #elif __DEBUG_HPP != __TIMER0_HPP
  36:funsape/peripheral/timer0.hpp **** #   error "Version mismatch between header file and library dependency (debug.hpp)!"
  37:funsape/peripheral/timer0.hpp **** #endif
  38:funsape/peripheral/timer0.hpp **** 
  39:funsape/peripheral/timer0.hpp **** // =============================================================================
  40:funsape/peripheral/timer0.hpp **** // Undefining previous definitions
  41:funsape/peripheral/timer0.hpp **** // =============================================================================
  42:funsape/peripheral/timer0.hpp **** 
  43:funsape/peripheral/timer0.hpp **** // NONE
  44:funsape/peripheral/timer0.hpp **** 
  45:funsape/peripheral/timer0.hpp **** // =============================================================================
  46:funsape/peripheral/timer0.hpp **** // Constant definitions
  47:funsape/peripheral/timer0.hpp **** // =============================================================================
  48:funsape/peripheral/timer0.hpp **** 
  49:funsape/peripheral/timer0.hpp **** // NONE
  50:funsape/peripheral/timer0.hpp **** 
  51:funsape/peripheral/timer0.hpp **** // =============================================================================
  52:funsape/peripheral/timer0.hpp **** // New data types
  53:funsape/peripheral/timer0.hpp **** // =============================================================================
  54:funsape/peripheral/timer0.hpp **** 
  55:funsape/peripheral/timer0.hpp **** // NONE
  56:funsape/peripheral/timer0.hpp **** 
  57:funsape/peripheral/timer0.hpp **** // =============================================================================
  58:funsape/peripheral/timer0.hpp **** // Interrupt callback functions
  59:funsape/peripheral/timer0.hpp **** // =============================================================================
  60:funsape/peripheral/timer0.hpp **** 
  61:funsape/peripheral/timer0.hpp **** //!
  62:funsape/peripheral/timer0.hpp **** //! \brief          TIMER0 compare A match interrupt callback function
  63:funsape/peripheral/timer0.hpp **** //! \details        This function is called when the TIMER0 compare A match
  64:funsape/peripheral/timer0.hpp **** //!                     interrupt is treated. It is a weak function that can be
  65:funsape/peripheral/timer0.hpp **** //!                     overwritten by user code.
  66:funsape/peripheral/timer0.hpp **** //!
  67:funsape/peripheral/timer0.hpp **** void timer0CompareACallback();
  68:funsape/peripheral/timer0.hpp **** 
  69:funsape/peripheral/timer0.hpp **** //!
  70:funsape/peripheral/timer0.hpp **** //! \brief          TIMER0 compare B match interrupt callback function
  71:funsape/peripheral/timer0.hpp **** //! \details        This function is called when the TIMER0 compare B match
  72:funsape/peripheral/timer0.hpp **** //!                     interrupt is treated. It is a weak function that can be
  73:funsape/peripheral/timer0.hpp **** //!                     overwritten by user code.
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 30


  74:funsape/peripheral/timer0.hpp **** //!
  75:funsape/peripheral/timer0.hpp **** void timer0CompareBCallback();
  76:funsape/peripheral/timer0.hpp **** 
  77:funsape/peripheral/timer0.hpp **** //!
  78:funsape/peripheral/timer0.hpp **** //! \brief          TIMER0 overflow interrupt callback function
  79:funsape/peripheral/timer0.hpp **** //! \details        This function is called when the TIMER0 overflow interrupt
  80:funsape/peripheral/timer0.hpp **** //!                     is treated. It is a weak function that can be
  81:funsape/peripheral/timer0.hpp **** //!                     overwritten by user code.
  82:funsape/peripheral/timer0.hpp **** //!
  83:funsape/peripheral/timer0.hpp **** void timer0OverflowCallback();
  84:funsape/peripheral/timer0.hpp **** 
  85:funsape/peripheral/timer0.hpp **** // =============================================================================
  86:funsape/peripheral/timer0.hpp **** // Timer0 Class
  87:funsape/peripheral/timer0.hpp **** // =============================================================================
  88:funsape/peripheral/timer0.hpp **** 
  89:funsape/peripheral/timer0.hpp **** //!
  90:funsape/peripheral/timer0.hpp **** //! \brief          Timer0 class
  91:funsape/peripheral/timer0.hpp **** //! \details        Timer0 class
  92:funsape/peripheral/timer0.hpp **** //!
  93:funsape/peripheral/timer0.hpp **** class Timer0
  94:funsape/peripheral/timer0.hpp **** {
  95:funsape/peripheral/timer0.hpp ****     // -------------------------------------------------------------------------
  96:funsape/peripheral/timer0.hpp ****     // New data types ----------------------------------------------------------
  97:funsape/peripheral/timer0.hpp **** public:
  98:funsape/peripheral/timer0.hpp **** 
  99:funsape/peripheral/timer0.hpp ****     //     ////////////////     TIMER0 Clock Source     /////////////////     //
 100:funsape/peripheral/timer0.hpp ****     //!
 101:funsape/peripheral/timer0.hpp ****     //! \brief      Clock source enumeration
 102:funsape/peripheral/timer0.hpp ****     //! \details    Clock prescaler options associated with TIMER0.
 103:funsape/peripheral/timer0.hpp ****     //! \warning    The value associate with the symbolic names may change
 104:funsape/peripheral/timer0.hpp ****     //!                 between builds and might not reflect the register/bits
 105:funsape/peripheral/timer0.hpp ****     //!                 real values. In order to ensure compatibility between
 106:funsape/peripheral/timer0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
 107:funsape/peripheral/timer0.hpp ****     //!                 the VALUE.
 108:funsape/peripheral/timer0.hpp ****     //!
 109:funsape/peripheral/timer0.hpp ****     enum class ClockSource : uint8_t {
 110:funsape/peripheral/timer0.hpp ****         DISABLED                    = 0,    //!< Disables clock, timer is off
 111:funsape/peripheral/timer0.hpp ****         PRESCALER_1                 = 1,    //!< Disables prescaler, timer clock frequency will be 
 112:funsape/peripheral/timer0.hpp ****         PRESCALER_8                 = 2,    //!< Timer clock frequency will be CPU clock divided by
 113:funsape/peripheral/timer0.hpp ****         PRESCALER_64                = 3,    //!< Timer clock frequency will be CPU clock divided by
 114:funsape/peripheral/timer0.hpp ****         PRESCALER_256               = 4,    //!< Timer clock frequency will be CPU clock divided by
 115:funsape/peripheral/timer0.hpp ****         PRESCALER_1024              = 5,    //!< Timer clock frequency will be CPU clock divided by
 116:funsape/peripheral/timer0.hpp ****         T0_FALLING_EDGE             = 6,    //!< Timer clock will be based on the falling edge of a
 117:funsape/peripheral/timer0.hpp ****         T0_RISING_EDGE              = 7     //!< Timer clock will be based on the rising edge of a 
 118:funsape/peripheral/timer0.hpp ****     };
 119:funsape/peripheral/timer0.hpp **** 
 120:funsape/peripheral/timer0.hpp ****     //     ////////////////////     TIMER0 Mode     /////////////////////     //
 121:funsape/peripheral/timer0.hpp ****     //!
 122:funsape/peripheral/timer0.hpp ****     //! \brief      Operation Mode enumeration
 123:funsape/peripheral/timer0.hpp ****     //! \details    Operation Mode options associated with TIMER0.
 124:funsape/peripheral/timer0.hpp ****     //! \warning    The value associate with the symbolic names may change
 125:funsape/peripheral/timer0.hpp ****     //!                 between builds and might not reflect the register/bits
 126:funsape/peripheral/timer0.hpp ****     //!                 real values. In order to ensure compatibility between
 127:funsape/peripheral/timer0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
 128:funsape/peripheral/timer0.hpp ****     //!                 the VALUE.
 129:funsape/peripheral/timer0.hpp ****     //!
 130:funsape/peripheral/timer0.hpp ****     enum class Mode : uint8_t {
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 31


 131:funsape/peripheral/timer0.hpp ****         NORMAL                          = 0,    //!< Normal mode (direction = UP / TOP = 0xFF / UPD
 132:funsape/peripheral/timer0.hpp ****         PWM_PHASE_CORRECTED_MAX         = 1,    //!< PWM mode with phase correction (direction = DO
 133:funsape/peripheral/timer0.hpp ****         CTC_OCRA                        = 2,    //!< CTC mode (direction = UP / TOP = OCR0A / UPDAT
 134:funsape/peripheral/timer0.hpp ****         PWM_FAST_MAX                    = 3,    //!< PWM mode fast (direction = UP / TOP = 0xFF / U
 135:funsape/peripheral/timer0.hpp ****         // RESERVED                     = 4,
 136:funsape/peripheral/timer0.hpp ****         PWM_PHASE_CORRECTED_OCRA        = 5,    //!< PWM mode fast (direction = UP / TOP = OCR0A / 
 137:funsape/peripheral/timer0.hpp ****         // RESERVED                     = 6,
 138:funsape/peripheral/timer0.hpp ****         PWM_FAST_OCRA                   = 7,    //!< PWM mode with phase correction (direction = DO
 139:funsape/peripheral/timer0.hpp ****     };
 140:funsape/peripheral/timer0.hpp **** 
 141:funsape/peripheral/timer0.hpp ****     //     /////////////////     TIMER0 Output Mode    //////////////////     //
 142:funsape/peripheral/timer0.hpp ****     //!
 143:funsape/peripheral/timer0.hpp ****     //! \brief      Output Mode enumeration
 144:funsape/peripheral/timer0.hpp ****     //! \details    Output Mode options associated with TIMER0.
 145:funsape/peripheral/timer0.hpp ****     //! \warning    The value associate with the symbolic names may change
 146:funsape/peripheral/timer0.hpp ****     //!                 between builds and might not reflect the register/bits
 147:funsape/peripheral/timer0.hpp ****     //!                 real values. In order to ensure compatibility between
 148:funsape/peripheral/timer0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
 149:funsape/peripheral/timer0.hpp ****     //!                 the VALUE.
 150:funsape/peripheral/timer0.hpp ****     //!
 151:funsape/peripheral/timer0.hpp ****     enum class OutputMode : uint8_t {
 152:funsape/peripheral/timer0.hpp ****         NORMAL                          = 0,    //!< OC0x disabled. Normal port operation
 153:funsape/peripheral/timer0.hpp ****         TOGGLE_ON_COMPARE               = 1,    //!< OC0x will toggle on OCR0x compare match
 154:funsape/peripheral/timer0.hpp ****         CLEAR_ON_COMPARE                = 2,    //!< OC0x will clear on OCR0x compare match
 155:funsape/peripheral/timer0.hpp ****         SET_ON_COMPARE                  = 3,    //!< OC0x will set on OCR0x compare match
 156:funsape/peripheral/timer0.hpp ****         NON_INVERTING_MODE              = 2,    //!< OC0x will produce a non-inverted PWM signal
 157:funsape/peripheral/timer0.hpp ****         INVERTING_MODE                  = 3,    //!< OC0x will produce a inverted PWM signal
 158:funsape/peripheral/timer0.hpp ****     };
 159:funsape/peripheral/timer0.hpp **** 
 160:funsape/peripheral/timer0.hpp ****     // -------------------------------------------------------------------------
 161:funsape/peripheral/timer0.hpp ****     // Constructors ------------------------------------------------------------
 162:funsape/peripheral/timer0.hpp **** public:
 163:funsape/peripheral/timer0.hpp **** 
 164:funsape/peripheral/timer0.hpp ****     //!
 165:funsape/peripheral/timer0.hpp ****     //! \brief      Timer0 class constructor
 166:funsape/peripheral/timer0.hpp ****     //! \details    Creates an Timer0 object
 167:funsape/peripheral/timer0.hpp ****     //!
 168:funsape/peripheral/timer0.hpp ****     Timer0(
 169:funsape/peripheral/timer0.hpp ****             void
 170:funsape/peripheral/timer0.hpp ****     );
 171:funsape/peripheral/timer0.hpp **** 
 172:funsape/peripheral/timer0.hpp ****     //!
 173:funsape/peripheral/timer0.hpp ****     //! \brief      Timer0 class destructor
 174:funsape/peripheral/timer0.hpp ****     //! \details    Destroys an Timer0 object
 175:funsape/peripheral/timer0.hpp ****     //!
 176:funsape/peripheral/timer0.hpp ****     ~Timer0(
 177:funsape/peripheral/timer0.hpp ****             void
 178:funsape/peripheral/timer0.hpp ****     );
 179:funsape/peripheral/timer0.hpp **** 
 180:funsape/peripheral/timer0.hpp ****     // -------------------------------------------------------------------------
 181:funsape/peripheral/timer0.hpp ****     // Methods -----------------------------------------------------------------
 182:funsape/peripheral/timer0.hpp **** public:
 183:funsape/peripheral/timer0.hpp ****     //     ///////////////////     INITIALIZATION    ////////////////////     //
 184:funsape/peripheral/timer0.hpp **** 
 185:funsape/peripheral/timer0.hpp ****     //!
 186:funsape/peripheral/timer0.hpp ****     //! \brief      Initializes the TIMER0 module
 187:funsape/peripheral/timer0.hpp ****     //! \details    Initializes the TIMER0 module.
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 32


 188:funsape/peripheral/timer0.hpp ****     //! \param      mode_p              Operation mode
 189:funsape/peripheral/timer0.hpp ****     //! \param      clockSource_p       Clock source and prescaler
 190:funsape/peripheral/timer0.hpp ****     //! \return     bool_t              True on success / False on failure
 191:funsape/peripheral/timer0.hpp ****     //!
 192:funsape/peripheral/timer0.hpp ****     bool_t init(
 193:funsape/peripheral/timer0.hpp ****             Mode mode_p,
 194:funsape/peripheral/timer0.hpp ****             ClockSource clockSource_p
 195:funsape/peripheral/timer0.hpp ****     );
 196:funsape/peripheral/timer0.hpp **** 
 197:funsape/peripheral/timer0.hpp ****     //!
 198:funsape/peripheral/timer0.hpp ****     //! \brief      Configures the clock source and the clock prescaler
 199:funsape/peripheral/timer0.hpp ****     //! \details    Configures the clock source and the clock prescaler.
 200:funsape/peripheral/timer0.hpp ****     //! \param      clockSource_p       Clock source and prescaler
 201:funsape/peripheral/timer0.hpp ****     //! \return     bool_t              True on success / False on failure
 202:funsape/peripheral/timer0.hpp ****     //!
 203:funsape/peripheral/timer0.hpp ****     bool_t setClockSource(
 204:funsape/peripheral/timer0.hpp ****             ClockSource clockSource_p
 205:funsape/peripheral/timer0.hpp ****     );
 206:funsape/peripheral/timer0.hpp **** 
 207:funsape/peripheral/timer0.hpp ****     //!
 208:funsape/peripheral/timer0.hpp ****     //! \brief      Configures the operation mode
 209:funsape/peripheral/timer0.hpp ****     //! \details    Configures the operation mode.
 210:funsape/peripheral/timer0.hpp ****     //! \param      mode_p              Operation mode
 211:funsape/peripheral/timer0.hpp ****     //! \return     bool_t              True on success / False on failure
 212:funsape/peripheral/timer0.hpp ****     //!
 213:funsape/peripheral/timer0.hpp ****     bool_t setMode(
 214:funsape/peripheral/timer0.hpp ****             Mode mode_p
 215:funsape/peripheral/timer0.hpp ****     );
 216:funsape/peripheral/timer0.hpp **** 
 217:funsape/peripheral/timer0.hpp ****     //!
 218:funsape/peripheral/timer0.hpp ****     //! \brief      Configures the desired behavior of OCR0x pins during compare match
 219:funsape/peripheral/timer0.hpp ****     //! \details    Configures the desired behavior of OCR0x pins during compare match.
 220:funsape/peripheral/timer0.hpp ****     //! \param      compA_p             Behavior of OCR0A pin during a compare A match
 221:funsape/peripheral/timer0.hpp ****     //! \param      compB_p             Behavior of OCR0B pin during a compare B match
 222:funsape/peripheral/timer0.hpp ****     //! \return     bool_t              True on success / False on failure
 223:funsape/peripheral/timer0.hpp ****     //!
 224:funsape/peripheral/timer0.hpp ****     bool_t setOutputMode(
 225:funsape/peripheral/timer0.hpp ****             OutputMode compA_p,
 226:funsape/peripheral/timer0.hpp ****             OutputMode compB_p
 227:funsape/peripheral/timer0.hpp ****     );
 228:funsape/peripheral/timer0.hpp **** 
 229:funsape/peripheral/timer0.hpp ****     //     /////////////////     CONTROL AND STATUS    //////////////////     //
 230:funsape/peripheral/timer0.hpp **** 
 231:funsape/peripheral/timer0.hpp ****     //!
 232:funsape/peripheral/timer0.hpp ****     //! \brief      Returns the last error
 233:funsape/peripheral/timer0.hpp ****     //! \details    Returns the last error.
 234:funsape/peripheral/timer0.hpp ****     //! \return     Error               Error status of the last operation
 235:funsape/peripheral/timer0.hpp ****     //!
 236:funsape/peripheral/timer0.hpp ****     Error           getLastError(
 237:funsape/peripheral/timer0.hpp ****             void
 238:funsape/peripheral/timer0.hpp ****     );
 239:funsape/peripheral/timer0.hpp **** 
 240:funsape/peripheral/timer0.hpp ****     //     /////////////////////     COMPARE A     //////////////////////     //
 241:funsape/peripheral/timer0.hpp **** 
 242:funsape/peripheral/timer0.hpp ****     //!
 243:funsape/peripheral/timer0.hpp ****     //! \brief      Activates Compare A Match interrupt
 244:funsape/peripheral/timer0.hpp ****     //! \details    Activates Compare A Match interrupt.
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 33


 245:funsape/peripheral/timer0.hpp ****     //!
 246:funsape/peripheral/timer0.hpp ****     void inlined activateCompareAInterrupt(
 247:funsape/peripheral/timer0.hpp ****             void
 248:funsape/peripheral/timer0.hpp ****     );
 249:funsape/peripheral/timer0.hpp **** 
 250:funsape/peripheral/timer0.hpp ****     //!
 251:funsape/peripheral/timer0.hpp ****     //! \brief      Clears Compare A Match interrupt flag
 252:funsape/peripheral/timer0.hpp ****     //! \details    Clears Compare A Match interrupt flag.
 253:funsape/peripheral/timer0.hpp ****     //!
 254:funsape/peripheral/timer0.hpp ****     void inlined clearCompareAInterruptRequest(
 255:funsape/peripheral/timer0.hpp ****             void
 256:funsape/peripheral/timer0.hpp ****     );
 257:funsape/peripheral/timer0.hpp **** 
 258:funsape/peripheral/timer0.hpp ****     //!
 259:funsape/peripheral/timer0.hpp ****     //! \brief      Deactivates Compare A Match interrupt
 260:funsape/peripheral/timer0.hpp ****     //! \details    Deactivates Compare A Match interrupt.
 261:funsape/peripheral/timer0.hpp ****     //!
 262:funsape/peripheral/timer0.hpp ****     void inlined deactivateCompareAInterrupt(
 263:funsape/peripheral/timer0.hpp ****             void
 264:funsape/peripheral/timer0.hpp ****     );
 265:funsape/peripheral/timer0.hpp **** 
 266:funsape/peripheral/timer0.hpp ****     //!
 267:funsape/peripheral/timer0.hpp ****     //! \brief      Forces a Compare A Match condition on output pin
 268:funsape/peripheral/timer0.hpp ****     //! \details    Forces a Compare A Match condition on output pin.
 269:funsape/peripheral/timer0.hpp ****     //!
 270:funsape/peripheral/timer0.hpp ****     void inlined forceCompareA(
 271:funsape/peripheral/timer0.hpp ****             void
 272:funsape/peripheral/timer0.hpp ****     );
 273:funsape/peripheral/timer0.hpp **** 
 274:funsape/peripheral/timer0.hpp ****     //!
 275:funsape/peripheral/timer0.hpp ****     //! \brief      Gets Compare A Match value
 276:funsape/peripheral/timer0.hpp ****     //! \details    Gets Compare A Match value.
 277:funsape/peripheral/timer0.hpp ****     //!
 278:funsape/peripheral/timer0.hpp ****     uint8_t inlined getCompareAValue(
 279:funsape/peripheral/timer0.hpp ****             void
 280:funsape/peripheral/timer0.hpp ****     );
 281:funsape/peripheral/timer0.hpp **** 
 282:funsape/peripheral/timer0.hpp ****     //!
 283:funsape/peripheral/timer0.hpp ****     //! \brief      Sets Compare A Match value
 284:funsape/peripheral/timer0.hpp ****     //! \details    Sets Compare A Match value.
 285:funsape/peripheral/timer0.hpp ****     //!
 286:funsape/peripheral/timer0.hpp ****     void inlined setCompareAValue(
 287:funsape/peripheral/timer0.hpp ****             uint8_t value_p
 288:funsape/peripheral/timer0.hpp ****     );
 289:funsape/peripheral/timer0.hpp **** 
 290:funsape/peripheral/timer0.hpp ****     //     /////////////////////     COMPARE B     //////////////////////     //
 291:funsape/peripheral/timer0.hpp **** 
 292:funsape/peripheral/timer0.hpp ****     //!
 293:funsape/peripheral/timer0.hpp ****     //! \brief      Activates Compare B Match interrupt
 294:funsape/peripheral/timer0.hpp ****     //! \details    Activates Compare B Match interrupt.
 295:funsape/peripheral/timer0.hpp ****     //!
 296:funsape/peripheral/timer0.hpp ****     void inlined activateCompareBInterrupt(
 297:funsape/peripheral/timer0.hpp ****             void
 298:funsape/peripheral/timer0.hpp ****     );
 299:funsape/peripheral/timer0.hpp **** 
 300:funsape/peripheral/timer0.hpp ****     //!
 301:funsape/peripheral/timer0.hpp ****     //! \brief      Clears Compare B Match interrupt flag
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 34


 302:funsape/peripheral/timer0.hpp ****     //! \details    Clears Compare B Match interrupt flag.
 303:funsape/peripheral/timer0.hpp ****     //!
 304:funsape/peripheral/timer0.hpp ****     void inlined clearCompareBInterruptRequest(
 305:funsape/peripheral/timer0.hpp ****             void
 306:funsape/peripheral/timer0.hpp ****     );
 307:funsape/peripheral/timer0.hpp **** 
 308:funsape/peripheral/timer0.hpp ****     //!
 309:funsape/peripheral/timer0.hpp ****     //! \brief      Deactivates Compare B Match interrupt
 310:funsape/peripheral/timer0.hpp ****     //! \details    Deactivates Compare B Match interrupt.
 311:funsape/peripheral/timer0.hpp ****     //!
 312:funsape/peripheral/timer0.hpp ****     void inlined deactivateCompareBInterrupt(
 313:funsape/peripheral/timer0.hpp ****             void
 314:funsape/peripheral/timer0.hpp ****     );
 315:funsape/peripheral/timer0.hpp **** 
 316:funsape/peripheral/timer0.hpp ****     //!
 317:funsape/peripheral/timer0.hpp ****     //! \brief      Forces a Compare B Match condition on output pin
 318:funsape/peripheral/timer0.hpp ****     //! \details    Forces a Compare B Match condition on output pin.
 319:funsape/peripheral/timer0.hpp ****     //!
 320:funsape/peripheral/timer0.hpp ****     void inlined forceCompareB(
 321:funsape/peripheral/timer0.hpp ****             void
 322:funsape/peripheral/timer0.hpp ****     );
 323:funsape/peripheral/timer0.hpp **** 
 324:funsape/peripheral/timer0.hpp ****     //!
 325:funsape/peripheral/timer0.hpp ****     //! \brief      Gets Compare B Match value
 326:funsape/peripheral/timer0.hpp ****     //! \details    Gets Compare B Match value.
 327:funsape/peripheral/timer0.hpp ****     //!
 328:funsape/peripheral/timer0.hpp ****     uint8_t inlined getCompareBValue(
 329:funsape/peripheral/timer0.hpp ****             void
 330:funsape/peripheral/timer0.hpp ****     );
 331:funsape/peripheral/timer0.hpp **** 
 332:funsape/peripheral/timer0.hpp ****     //!
 333:funsape/peripheral/timer0.hpp ****     //! \brief      Sets Compare B Match value
 334:funsape/peripheral/timer0.hpp ****     //! \details    Sets Compare B Match value.
 335:funsape/peripheral/timer0.hpp ****     //!
 336:funsape/peripheral/timer0.hpp ****     void inlined setCompareBValue(
 337:funsape/peripheral/timer0.hpp ****             uint8_t value_p
 338:funsape/peripheral/timer0.hpp ****     );
 339:funsape/peripheral/timer0.hpp **** 
 340:funsape/peripheral/timer0.hpp ****     //     //////////////////////     OVERFLOW    ///////////////////////     //
 341:funsape/peripheral/timer0.hpp **** 
 342:funsape/peripheral/timer0.hpp ****     //!
 343:funsape/peripheral/timer0.hpp ****     //! \brief      Activates Overflow interrupt
 344:funsape/peripheral/timer0.hpp ****     //! \details    Activates Overflow interrupt.
 345:funsape/peripheral/timer0.hpp ****     //!
 346:funsape/peripheral/timer0.hpp ****     void inlined activateOverflowInterrupt(
 347:funsape/peripheral/timer0.hpp ****             void
 348:funsape/peripheral/timer0.hpp ****     );
 349:funsape/peripheral/timer0.hpp **** 
 350:funsape/peripheral/timer0.hpp ****     //!
 351:funsape/peripheral/timer0.hpp ****     //! \brief      Clears Compare A Match interrupt flag
 352:funsape/peripheral/timer0.hpp ****     //! \details    Clears Compare A Match interrupt flag.
 353:funsape/peripheral/timer0.hpp ****     //!
 354:funsape/peripheral/timer0.hpp ****     void inlined clearOverflowInterruptRequest(
 355:funsape/peripheral/timer0.hpp ****             void
 356:funsape/peripheral/timer0.hpp ****     );
 357:funsape/peripheral/timer0.hpp **** 
 358:funsape/peripheral/timer0.hpp ****     //!
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 35


 359:funsape/peripheral/timer0.hpp ****     //! \brief      Deactivates Overflow Match interrupt
 360:funsape/peripheral/timer0.hpp ****     //! \details    Deactivates Overflow Match interrupt.
 361:funsape/peripheral/timer0.hpp ****     //!
 362:funsape/peripheral/timer0.hpp ****     void inlined deactivateOverflowInterrupt(
 363:funsape/peripheral/timer0.hpp ****             void
 364:funsape/peripheral/timer0.hpp ****     );
 365:funsape/peripheral/timer0.hpp **** 
 366:funsape/peripheral/timer0.hpp ****     //!
 367:funsape/peripheral/timer0.hpp ****     //! \brief      Gets counter value
 368:funsape/peripheral/timer0.hpp ****     //! \details    Gets counter value.
 369:funsape/peripheral/timer0.hpp ****     //!
 370:funsape/peripheral/timer0.hpp ****     uint8_t inlined getCounterValue(
 371:funsape/peripheral/timer0.hpp ****             void
 372:funsape/peripheral/timer0.hpp ****     );
 373:funsape/peripheral/timer0.hpp **** 
 374:funsape/peripheral/timer0.hpp ****     //!
 375:funsape/peripheral/timer0.hpp ****     //! \brief      Sets counter value
 376:funsape/peripheral/timer0.hpp ****     //! \details    Sets counter value.
 377:funsape/peripheral/timer0.hpp ****     //!
 378:funsape/peripheral/timer0.hpp ****     void inlined setCounterValue(
 379:funsape/peripheral/timer0.hpp ****             uint8_t value_p
 380:funsape/peripheral/timer0.hpp ****     );
 381:funsape/peripheral/timer0.hpp **** 
 382:funsape/peripheral/timer0.hpp ****     // -------------------------------------------------------------------------
 383:funsape/peripheral/timer0.hpp ****     // Properties --------------------------------------------------------------
 384:funsape/peripheral/timer0.hpp **** private:
 385:funsape/peripheral/timer0.hpp ****     bool_t          _isInitialized      : 1;
 386:funsape/peripheral/timer0.hpp ****     ClockSource     _clockSource;
 387:funsape/peripheral/timer0.hpp ****     Mode            _mode;
 388:funsape/peripheral/timer0.hpp ****     Error           _lastError;
 389:funsape/peripheral/timer0.hpp **** }; // class Timer0
 390:funsape/peripheral/timer0.hpp **** 
 391:funsape/peripheral/timer0.hpp **** // =============================================================================
 392:funsape/peripheral/timer0.hpp **** // Inlined class functions
 393:funsape/peripheral/timer0.hpp **** // =============================================================================
 394:funsape/peripheral/timer0.hpp **** 
 395:funsape/peripheral/timer0.hpp **** //     ///////////////////////     COMPARE A     ////////////////////////     //
 396:funsape/peripheral/timer0.hpp **** void inlined Timer0::activateCompareAInterrupt(void)
 397:funsape/peripheral/timer0.hpp **** {
 398:funsape/peripheral/timer0.hpp ****     setBit(TIMSK0, OCIE0A);
 399:funsape/peripheral/timer0.hpp ****     return;
 400:funsape/peripheral/timer0.hpp **** }
 401:funsape/peripheral/timer0.hpp **** 
 402:funsape/peripheral/timer0.hpp **** void inlined Timer0::clearCompareAInterruptRequest(void)
 403:funsape/peripheral/timer0.hpp **** {
 404:funsape/peripheral/timer0.hpp ****     setBit(TIFR0, OCF0A);
 405:funsape/peripheral/timer0.hpp ****     return;
 406:funsape/peripheral/timer0.hpp **** }
 407:funsape/peripheral/timer0.hpp **** 
 408:funsape/peripheral/timer0.hpp **** void inlined Timer0::deactivateCompareAInterrupt(void)
 409:funsape/peripheral/timer0.hpp **** {
 410:funsape/peripheral/timer0.hpp ****     clrBit(TIMSK0, OCIE0A);
 411:funsape/peripheral/timer0.hpp ****     return;
 412:funsape/peripheral/timer0.hpp **** }
 413:funsape/peripheral/timer0.hpp **** 
 414:funsape/peripheral/timer0.hpp **** void inlined Timer0::forceCompareA(void)
 415:funsape/peripheral/timer0.hpp **** {
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 36


 416:funsape/peripheral/timer0.hpp ****     setBit(TCCR0B, FOC0A);
 417:funsape/peripheral/timer0.hpp ****     return;
 418:funsape/peripheral/timer0.hpp **** }
 419:funsape/peripheral/timer0.hpp **** 
 420:funsape/peripheral/timer0.hpp **** uint8_t inlined Timer0::getCompareAValue(void)
 421:funsape/peripheral/timer0.hpp **** {
 422:funsape/peripheral/timer0.hpp ****     return OCR0A;
 423:funsape/peripheral/timer0.hpp **** }
 424:funsape/peripheral/timer0.hpp **** 
 425:funsape/peripheral/timer0.hpp **** void inlined Timer0::setCompareAValue(uint8_t value_p)
 164               		.loc 4 425 14 view .LVU37
 165               	.LBB23:
 426:funsape/peripheral/timer0.hpp **** {
 427:funsape/peripheral/timer0.hpp ****     OCR0A = value_p;
 166               		.loc 4 427 5 view .LVU38
 167               		.loc 4 427 11 is_stmt 0 view .LVU39
 168 007a 80ED      		ldi r24,lo8(-48)
 169 007c 87BD      		out 0x27,r24
 428:funsape/peripheral/timer0.hpp ****     return;
 170               		.loc 4 428 5 is_stmt 1 view .LVU40
 171               	.LVL7:
 172               		.loc 4 428 5 is_stmt 0 view .LVU41
 173               	.LBE23:
 174               	.LBE22:
  46:main.cpp      **** 
  47:main.cpp      ****     sei();
 175               		.loc 2 47 5 is_stmt 1 view .LVU42
 176               	/* #APP */
 177               	 ;  47 "main.cpp" 1
 178 007e 7894      		sei
 179               	 ;  0 "" 2
  48:main.cpp      ****     delayMs(100);
 180               		.loc 2 48 5 view .LVU43
 181               	.LVL8:
 182               	/* #NOAPP */
 183               	.LBB24:
 184               	.LBI24:
 185               		.file 5 "c:\\d\\ifsc\\vscodeleandro\\ex\\toolchains\\avr-gcc\\avr\\include\\util\\delay.h"
   1:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    All rights reserved.
   5:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
   6:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
   9:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  12:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      distribution.
  16:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  17:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****      from this software without specific prior written permission.
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 37


  20:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  21:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  33:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /* $Id$ */
  34:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  35:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  38:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #  endif
  42:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  44:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #include <inttypes.h>
  45:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #include <math.h>
  47:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  48:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /** \file */
  49:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \code
  51:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     #include <util/delay.h>
  54:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \endcode
  55:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  56:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     used.
  60:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  61:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  70:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 38


  77:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     routines linked into the application.
  78:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  79:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  83:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** */
  84:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  85:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
  89:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  90:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef F_CPU
  91:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /** \ingroup util_delay
  94:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \def F_CPU
  95:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
  97:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 103:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****     integer value.
 107:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****  */
 108:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 110:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 111:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 114:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 115:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #  include <math.h>
 119:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 120:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 121:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** /**
 122:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    \ingroup util_delay
 123:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 124:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 126:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 129:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 131:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 39


 134:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 137:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 142:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    microseconds of delay.
 146:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 147:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    respectively.
 151:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 152:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    \note
 153:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 154:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****    not available to the compiler then.
 163:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 164:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****  */
 165:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** void
 166:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** _delay_ms(double __ms)
 186               		.loc 5 166 1 view .LVU44
 187               	.LBB25:
 167:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** {
 168:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	double __tmp ;
 188               		.loc 5 168 2 view .LVU45
 169:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
 189               		.loc 5 172 2 view .LVU46
 173:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 190               		.loc 5 173 2 view .LVU47
 174:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 191               		.loc 5 174 2 view .LVU48
 175:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 176:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 179:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 182:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	#else
 183:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 		//round up by default
 184:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 40


 192               		.loc 5 184 3 view .LVU49
 185:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	#endif
 186:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 187:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 193               		.loc 5 187 2 view .LVU50
 194               		.loc 5 187 28 is_stmt 0 view .LVU51
 195 0080 2FEF      		ldi r18,lo8(319999)
 196 0082 81EE      		ldi r24,hi8(319999)
 197 0084 94E0      		ldi r25,hlo8(319999)
 198 0086 2150      	1:	subi r18,1
 199 0088 8040      		sbci r24,0
 200 008a 9040      		sbci r25,0
 201 008c 01F4      		brne 1b
 202 008e 00C0      		rjmp .
 203 0090 0000      		nop
 204               	.LVL9:
 205               		.loc 5 187 28 view .LVU52
 206               	.LBE25:
 207               	.LBE24:
  49:main.cpp      **** 
  50:main.cpp      ****     sendstring("Hello ");
 208               		.loc 2 50 5 is_stmt 1 view .LVU53
 209               		.loc 2 50 15 is_stmt 0 view .LVU54
 210 0092 80E0      		ldi r24,lo8(.LC0)
 211 0094 90E0      		ldi r25,hi8(.LC0)
 212 0096 0E94 0000 		call _Z10sendstringPc
 213               	.LVL10:
  51:main.cpp      **** 
  52:main.cpp      ****     delayMs(1000);
 214               		.loc 2 52 5 is_stmt 1 view .LVU55
 215               	.LBB26:
 216               	.LBI26:
 166:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** {
 217               		.loc 5 166 1 view .LVU56
 218               	.LBB27:
 168:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 219               		.loc 5 168 2 view .LVU57
 172:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 220               		.loc 5 172 2 view .LVU58
 173:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 221               		.loc 5 173 2 view .LVU59
 174:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 222               		.loc 5 174 2 view .LVU60
 184:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	#endif
 223               		.loc 5 184 3 view .LVU61
 224               		.loc 5 187 2 view .LVU62
 225               		.loc 5 187 28 is_stmt 0 view .LVU63
 226 009a 2FEF      		ldi r18,lo8(3199999)
 227 009c 83ED      		ldi r24,hi8(3199999)
 228 009e 90E3      		ldi r25,hlo8(3199999)
 229 00a0 2150      	1:	subi r18,1
 230 00a2 8040      		sbci r24,0
 231 00a4 9040      		sbci r25,0
 232 00a6 01F4      		brne 1b
 233 00a8 00C0      		rjmp .
 234 00aa 0000      		nop
 235               	.LVL11:
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 41


 236               		.loc 5 187 28 view .LVU64
 237               	.LBE27:
 238               	.LBE26:
  53:main.cpp      **** 
  54:main.cpp      ****     zfm20.init();
 239               		.loc 2 54 5 is_stmt 1 view .LVU65
 240               		.loc 2 54 15 is_stmt 0 view .LVU66
 241 00ac 68E2      		ldi r22,lo8(40)
 242 00ae CE01      		movw r24,r28
 243 00b0 0196      		adiw r24,1
 244 00b2 0E94 0000 		call _ZN5Zfm204initEh
 245               	.LVL12:
  55:main.cpp      ****     auxString[0] = 0x18;
 246               		.loc 2 55 5 is_stmt 1 view .LVU67
 247               		.loc 2 55 18 is_stmt 0 view .LVU68
 248 00b6 88E1      		ldi r24,lo8(24)
 249 00b8 8D87      		std Y+13,r24
  56:main.cpp      ****     auxString[1] = 0x04;
 250               		.loc 2 56 5 is_stmt 1 view .LVU69
 251               		.loc 2 56 18 is_stmt 0 view .LVU70
 252 00ba 84E0      		ldi r24,lo8(4)
 253 00bc 8E87      		std Y+14,r24
  57:main.cpp      ****     auxString[2] = 0x13;
 254               		.loc 2 57 5 is_stmt 1 view .LVU71
 255               		.loc 2 57 18 is_stmt 0 view .LVU72
 256 00be 83E1      		ldi r24,lo8(19)
 257 00c0 8F87      		std Y+15,r24
  58:main.cpp      ****     auxString[3] = 0x23;
 258               		.loc 2 58 5 is_stmt 1 view .LVU73
 259               		.loc 2 58 18 is_stmt 0 view .LVU74
 260 00c2 83E2      		ldi r24,lo8(35)
 261 00c4 888B      		std Y+16,r24
  59:main.cpp      ****     auxString[4] = 0x56;
 262               		.loc 2 59 5 is_stmt 1 view .LVU75
 263               		.loc 2 59 18 is_stmt 0 view .LVU76
 264 00c6 86E5      		ldi r24,lo8(86)
 265 00c8 898B      		std Y+17,r24
  60:main.cpp      ****     auxString[5] = 0xFF;
 266               		.loc 2 60 5 is_stmt 1 view .LVU77
 267               		.loc 2 60 18 is_stmt 0 view .LVU78
 268 00ca 1A8B      		std Y+18,r17
  61:main.cpp      ****     auxString[6] = 0x00;
 269               		.loc 2 61 5 is_stmt 1 view .LVU79
 270               		.loc 2 61 18 is_stmt 0 view .LVU80
 271 00cc 1B8A      		std Y+19,__zero_reg__
 272               	.L3:
  62:main.cpp      **** 
  63:main.cpp      ****     //zfm20.createPackage(Zfm20::Id::COMMAND, auxString, 7);
  64:main.cpp      ****     //zfm20.receive_pkg(&usart0);
  65:main.cpp      ****     // lcdclear();
  66:main.cpp      ****     // lcdprint("Loading.. ");
  67:main.cpp      ****     // _delay_ms(500);
  68:main.cpp      ****     // sendcmd2fb(FB_connect);
  69:main.cpp      ****     // _delay_ms(500);
  70:main.cpp      ****     // unsigned char options_conter = 0;
  71:main.cpp      ****     // lcdclear();
  72:main.cpp      **** 
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 42


  73:main.cpp      ****     while(1) {
 273               		.loc 2 73 5 is_stmt 1 discriminator 1 view .LVU81
  74:main.cpp      ****         //zfm20.debug();
  75:main.cpp      ****         //printf("loop restart");
  76:main.cpp      ****         //zfm20.createPackage(Zfm20::Id::COMMAND, auxString, 7);
  77:main.cpp      ****         //zfm20.debug();
  78:main.cpp      ****         //zfm20.sendPackage(&usart0);
  79:main.cpp      ****         //zfm20.receive_pkg(&usart0);
  80:main.cpp      ****         zfm20.checkFingerPrint(&usart0);
 274               		.loc 2 80 9 discriminator 1 view .LVU82
 275               		.loc 2 80 31 is_stmt 0 discriminator 1 view .LVU83
 276 00ce 60E0      		ldi r22,lo8(usart0)
 277 00d0 70E0      		ldi r23,hi8(usart0)
 278 00d2 CE01      		movw r24,r28
 279 00d4 0196      		adiw r24,1
 280 00d6 0E94 0000 		call _ZN5Zfm2016checkFingerPrintEP6Usart0
 281               	.LVL13:
  81:main.cpp      ****         delayMs(3000);
 282               		.loc 2 81 9 is_stmt 1 discriminator 1 view .LVU84
 283               	.LBB28:
 284               	.LBI28:
 166:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** {
 285               		.loc 5 166 1 discriminator 1 view .LVU85
 286               	.LBB29:
 168:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 287               		.loc 5 168 2 discriminator 1 view .LVU86
 172:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 288               		.loc 5 172 2 discriminator 1 view .LVU87
 173:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 289               		.loc 5 173 2 discriminator 1 view .LVU88
 174:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 
 290               		.loc 5 174 2 discriminator 1 view .LVU89
 184:c:\d\ifsc\vscodeleandro\ex\toolchains\avr-gcc\avr\include\util\delay.h **** 	#endif
 291               		.loc 5 184 3 discriminator 1 view .LVU90
 292               		.loc 5 187 2 discriminator 1 view .LVU91
 293               		.loc 5 187 28 is_stmt 0 discriminator 1 view .LVU92
 294 00da 2FEF      		ldi r18,lo8(9599999)
 295 00dc 8BE7      		ldi r24,hi8(9599999)
 296 00de 92E9      		ldi r25,hlo8(9599999)
 297 00e0 2150      	1:	subi r18,1
 298 00e2 8040      		sbci r24,0
 299 00e4 9040      		sbci r25,0
 300 00e6 01F4      		brne 1b
 301 00e8 00C0      		rjmp .
 302 00ea 0000      		nop
 303 00ec 00C0      		rjmp .L3
 304               	.LBE29:
 305               	.LBE28:
 306               		.cfi_endproc
 307               	.LFE74:
 309               		.text
 310               	.Letext0:
 311               		.file 6 "c:\\d\\ifsc\\vscodeleandro\\ex\\toolchains\\avr-gcc\\avr\\include\\stdint.h"
 312               		.file 7 "c:\\d\\ifsc\\vscodeleandro\\ex\\toolchains\\avr-gcc\\avr\\include\\stdio.h"
 313               		.file 8 "zfm20.hpp"
 314               		.file 9 "c:\\d\\ifsc\\vscodeleandro\\ex\\toolchains\\avr-gcc\\avr\\include\\math.h"
 315               		.file 10 "kbitbang.hpp"
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 43


GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 44


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:2      *ABS*:0000003e __SP_H__
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3      *ABS*:0000003d __SP_L__
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:4      *ABS*:0000003f __SREG__
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:6      *ABS*:00000001 __zero_reg__
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:14     .text._Z7getTickv:00000000 _Z7getTickv
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:17     .text._Z7getTickv:00000000 .Loc.0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:18     .text._Z7getTickv:00000000 L0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:23     .text._Z7getTickv:00000000 .Loc.1
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:24     .text._Z7getTickv:00000000 .Loc.2
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:30     .text._Z7getTickv:00000008 L0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:39     .text.main:00000000 main
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:42     .text.main:00000000 .Loc.3
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:43     .text.main:00000000 L0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:58     .text.main:00000010 .Loc.4
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:59     .text.main:00000010 .Loc.5
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:68     .text.main:00000020 .Loc.6
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:72     .text.main:00000020 .Loc.7
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:74     .text.main:00000020 .Loc.8
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:80     .text.main:0000002a .Loc.9
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:83     .text.main:0000002a .Loc.10
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:87     .text.main:0000002a .Loc.11
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:89     .text.main:0000002a .Loc.12
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:93     .text.main:00000030 .Loc.13
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:96     .text.main:00000030 .Loc.14
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:97     .text.main:00000030 .Loc.15
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:102    .text.main:00000038 .Loc.16
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:105    .text.main:00000038 .Loc.17
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:107    .text.main:00000038 .Loc.18
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:108    .text.main:00000038 .Loc.19
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:115    .text.main:00000044 .Loc.20
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:118    .text.main:00000048 .Loc.21
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:121    .text.main:0000004c .Loc.22
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:124    .text.main:0000004c .Loc.23
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:125    .text.main:0000004c .Loc.24
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:130    .text.main:00000054 .Loc.25
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:131    .text.main:00000054 .Loc.26
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:132    .text.main:00000054 .Loc.27
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:133    .text.main:00000054 .Loc.28
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:136    .text.main:00000058 .Loc.29
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:140    .text.main:0000005e .Loc.30
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:141    .text.main:0000005e .Loc.31
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:146    .text.main:00000066 .Loc.32
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:147    .text.main:00000066 .Loc.33
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:153    .text.main:00000070 .Loc.34
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:154    .text.main:00000070 .Loc.35
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:160    .text.main:0000007a .Loc.36
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:164    .text.main:0000007a .Loc.37
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:166    .text.main:0000007a .Loc.38
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:167    .text.main:0000007a .Loc.39
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:170    .text.main:0000007e .Loc.40
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:172    .text.main:0000007e .Loc.41
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:175    .text.main:0000007e .Loc.42
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:180    .text.main:00000080 .Loc.43
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:186    .text.main:00000080 .Loc.44
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 45


C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:188    .text.main:00000080 .Loc.45
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:189    .text.main:00000080 .Loc.46
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:190    .text.main:00000080 .Loc.47
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:191    .text.main:00000080 .Loc.48
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:192    .text.main:00000080 .Loc.49
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:193    .text.main:00000080 .Loc.50
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:194    .text.main:00000080 .Loc.51
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:202    .text.main:00000090 L0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:205    .text.main:00000092 .Loc.52
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:208    .text.main:00000092 .Loc.53
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:209    .text.main:00000092 .Loc.54
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:214    .text.main:0000009a .Loc.55
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:217    .text.main:0000009a .Loc.56
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:219    .text.main:0000009a .Loc.57
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:220    .text.main:0000009a .Loc.58
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:221    .text.main:0000009a .Loc.59
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:222    .text.main:0000009a .Loc.60
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:223    .text.main:0000009a .Loc.61
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:224    .text.main:0000009a .Loc.62
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:225    .text.main:0000009a .Loc.63
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:233    .text.main:000000aa L0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:236    .text.main:000000ac .Loc.64
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:239    .text.main:000000ac .Loc.65
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:240    .text.main:000000ac .Loc.66
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:246    .text.main:000000b6 .Loc.67
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:247    .text.main:000000b6 .Loc.68
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:250    .text.main:000000ba .Loc.69
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:251    .text.main:000000ba .Loc.70
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:254    .text.main:000000be .Loc.71
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:255    .text.main:000000be .Loc.72
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:258    .text.main:000000c2 .Loc.73
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:259    .text.main:000000c2 .Loc.74
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:262    .text.main:000000c6 .Loc.75
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:263    .text.main:000000c6 .Loc.76
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:266    .text.main:000000ca .Loc.77
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:267    .text.main:000000ca .Loc.78
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:269    .text.main:000000cc .Loc.79
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:270    .text.main:000000cc .Loc.80
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:273    .text.main:000000ce .Loc.81
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:274    .text.main:000000ce .Loc.82
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:275    .text.main:000000ce .Loc.83
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:282    .text.main:000000da .Loc.84
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:285    .text.main:000000da .Loc.85
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:287    .text.main:000000da .Loc.86
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:288    .text.main:000000da .Loc.87
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:289    .text.main:000000da .Loc.88
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:290    .text.main:000000da .Loc.89
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:291    .text.main:000000da .Loc.90
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:292    .text.main:000000da .Loc.91
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:293    .text.main:000000da .Loc.92
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:301    .text.main:000000ea L0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:306    .text.main:000000ee L0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:33     .text._Z7getTickv:00000008 L0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:309    .text.main:000000ee L0
                     .debug_frame:00000000 L0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:198    .text.main:00000086 .L11
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:229    .text.main:000000a0 .L12
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 46


C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:297    .text.main:000000e0 .L13
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:272    .text.main:000000ce .L3
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:2547   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3665   .debug_rnglists:0000000c .LLRL8
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3675   .debug_line:00000000 .Ldebug_line0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:40     .text.main:00000000 .LFB74
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:307    .text.main:000000ee .LFE74
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:70     .text.main:00000020 .LBI16
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:69     .text.main:00000020 .LBB16
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:82     .text.main:0000002a .LBE16
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:86     .text.main:0000002a .LBI18
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:85     .text.main:0000002a .LBB18
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:95     .text.main:00000030 .LBE18
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:104    .text.main:00000038 .LBI20
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:103    .text.main:00000038 .LBB20
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:123    .text.main:0000004c .LBE20
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:162    .text.main:0000007a .LBI22
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:161    .text.main:0000007a .LBB22
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:174    .text.main:0000007e .LBE22
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3549   .debug_loclists:0000000e .LLST0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3546   .debug_loclists:0000000c .LVUS0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3561   .debug_loclists:0000001b .LLST1
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3558   .debug_loclists:00000019 .LVUS1
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:184    .text.main:00000080 .LBI24
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:183    .text.main:00000080 .LBB24
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:207    .text.main:00000092 .LBE24
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3573   .debug_loclists:00000028 .LLST2
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3570   .debug_loclists:00000026 .LVUS2
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3585   .debug_loclists:00000038 .LLST3
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3582   .debug_loclists:00000036 .LVUS3
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3597   .debug_loclists:00000048 .LLST4
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3594   .debug_loclists:00000046 .LVUS4
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:216    .text.main:0000009a .LBI26
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:215    .text.main:0000009a .LBB26
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:238    .text.main:000000ac .LBE26
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3609   .debug_loclists:00000058 .LLST5
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3606   .debug_loclists:00000056 .LVUS5
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3621   .debug_loclists:00000068 .LLST6
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3618   .debug_loclists:00000066 .LVUS6
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3633   .debug_loclists:00000078 .LLST7
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:3630   .debug_loclists:00000076 .LVUS7
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:284    .text.main:000000da .LBI28
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:283    .text.main:000000da .LBB28
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:305    .text.main:000000ee .LBE28
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:67     .text.main:00000020 .LVL0
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:101    .text.main:00000038 .LVL2
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:129    .text.main:00000054 .LVL3
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:145    .text.main:00000066 .LVL4
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:152    .text.main:00000070 .LVL5
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:159    .text.main:0000007a .LVL6
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:213    .text.main:0000009a .LVL10
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:245    .text.main:000000b6 .LVL12
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:281    .text.main:000000da .LVL13
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:15     .text._Z7getTickv:00000000 .LFB32
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:31     .text._Z7getTickv:00000008 .LFE32
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:181    .text.main:00000080 .LVL8
C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s:317    .debug_info:00000000 .Ldebug_info0
GAS LISTING C:\Users\kenne\AppData\Local\Temp\ccrTfGwv.s 			page 47



UNDEFINED SYMBOLS
usart0
_ZN6Usart011setBaudRateENS_8BaudRateE
_ZN6Usart04initEv
__iob
usartStream
_ZN5Zfm20C1Ev
_ZN6Timer0C1Ev
_ZN6Timer07setModeENS_4ModeE
_ZN6Timer014setClockSourceENS_11ClockSourceE
_Z10sendstringPc
_ZN5Zfm204initEh
_ZN5Zfm2016checkFingerPrintEP6Usart0
__do_copy_data
