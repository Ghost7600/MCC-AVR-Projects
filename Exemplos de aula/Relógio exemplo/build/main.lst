GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 1


   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.file 0 "E:\\projects\\Atividade\\Rel\363gio exemplo" "main.cpp"
  11               		.section	.text._Z7getTickv,"ax",@progbits
  12               		.weak	_Z7getTickv
  14               	_Z7getTickv:
  15               	.LFB32:
  16               		.file 1 "funsape/globalDefines.hpp"
   1:funsape/globalDefines.hpp **** //!
   2:funsape/globalDefines.hpp **** //! \file           globalDefines.hpp
   3:funsape/globalDefines.hpp **** //! \brief          Global definitions file
   4:funsape/globalDefines.hpp **** //! \author         Leandro Schwarz (bladabuska+funsapeavr8lib@gmail.com)
   5:funsape/globalDefines.hpp **** //! \date           2023-04-05
   6:funsape/globalDefines.hpp **** //! \version        23.04
   7:funsape/globalDefines.hpp **** //! \copyright      license
   8:funsape/globalDefines.hpp **** //! \details        Global definitions file.
   9:funsape/globalDefines.hpp **** //! \todo           Todo list
  10:funsape/globalDefines.hpp **** //!
  11:funsape/globalDefines.hpp **** 
  12:funsape/globalDefines.hpp **** // =============================================================================
  13:funsape/globalDefines.hpp **** // Include guard (START)
  14:funsape/globalDefines.hpp **** // =============================================================================
  15:funsape/globalDefines.hpp **** 
  16:funsape/globalDefines.hpp **** #ifndef __GLOBAL_DEFINES_HPP
  17:funsape/globalDefines.hpp **** #define __GLOBAL_DEFINES_HPP                    2304
  18:funsape/globalDefines.hpp **** 
  19:funsape/globalDefines.hpp **** // =============================================================================
  20:funsape/globalDefines.hpp **** // Basic definitions
  21:funsape/globalDefines.hpp **** // =============================================================================
  22:funsape/globalDefines.hpp **** 
  23:funsape/globalDefines.hpp **** #ifndef F_CPU
  24:funsape/globalDefines.hpp **** #   define F_CPU    16000000UL
  25:funsape/globalDefines.hpp **** #endif
  26:funsape/globalDefines.hpp **** 
  27:funsape/globalDefines.hpp **** // =============================================================================
  28:funsape/globalDefines.hpp **** // Dependencies
  29:funsape/globalDefines.hpp **** // =============================================================================
  30:funsape/globalDefines.hpp **** 
  31:funsape/globalDefines.hpp **** //     //////////////////     AVR STANDARD LIBRARY     //////////////////     //
  32:funsape/globalDefines.hpp **** #include <avr/io.h>
  33:funsape/globalDefines.hpp **** #include <avr/interrupt.h>
  34:funsape/globalDefines.hpp **** #include <util/delay.h>
  35:funsape/globalDefines.hpp **** #include <util/atomic.h>
  36:funsape/globalDefines.hpp **** 
  37:funsape/globalDefines.hpp **** //     ///////////////////     STANDARD C LIBRARY     ///////////////////     //
  38:funsape/globalDefines.hpp **** #include <stddef.h>
  39:funsape/globalDefines.hpp **** #include <stdint.h>
  40:funsape/globalDefines.hpp **** #include <stdio.h>
  41:funsape/globalDefines.hpp **** #include <stdlib.h>
  42:funsape/globalDefines.hpp **** #include <string.h>
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 2


  43:funsape/globalDefines.hpp **** 
  44:funsape/globalDefines.hpp **** //     //////////////////     LIBRARY DEPENDENCIES     //////////////////     //
  45:funsape/globalDefines.hpp **** #include "pinout.hpp"
  46:funsape/globalDefines.hpp **** #if !defined(__PINOUT_HPP)
  47:funsape/globalDefines.hpp **** #   error "Header file (pinout.hpp) is corrupted!"
  48:funsape/globalDefines.hpp **** #elif __PINOUT_HPP != __GLOBAL_DEFINES_HPP
  49:funsape/globalDefines.hpp **** #   error "Version mismatch between header file and library dependency (pinout.hpp)!"
  50:funsape/globalDefines.hpp **** #endif
  51:funsape/globalDefines.hpp **** 
  52:funsape/globalDefines.hpp **** // =============================================================================
  53:funsape/globalDefines.hpp **** // Undefining previous definitions
  54:funsape/globalDefines.hpp **** // =============================================================================
  55:funsape/globalDefines.hpp **** 
  56:funsape/globalDefines.hpp **** // NONE
  57:funsape/globalDefines.hpp **** 
  58:funsape/globalDefines.hpp **** // =============================================================================
  59:funsape/globalDefines.hpp **** // Constant definitions
  60:funsape/globalDefines.hpp **** // =============================================================================
  61:funsape/globalDefines.hpp **** 
  62:funsape/globalDefines.hpp **** #define inlined                         inline __attribute__((always_inline))
  63:funsape/globalDefines.hpp **** #define weakened                        __attribute__((weak))
  64:funsape/globalDefines.hpp **** 
  65:funsape/globalDefines.hpp **** // =============================================================================
  66:funsape/globalDefines.hpp **** // New data types
  67:funsape/globalDefines.hpp **** // =============================================================================
  68:funsape/globalDefines.hpp **** 
  69:funsape/globalDefines.hpp **** //     ////////////////////     BASIC VARIABLES     /////////////////////     //
  70:funsape/globalDefines.hpp **** typedef bool                            bool_t;
  71:funsape/globalDefines.hpp **** typedef char                            char_t;
  72:funsape/globalDefines.hpp **** 
  73:funsape/globalDefines.hpp **** //     ///////////////////     CONSTANT VARIABLES    ////////////////////     //
  74:funsape/globalDefines.hpp **** typedef const bool_t                    cbool_t;
  75:funsape/globalDefines.hpp **** typedef const char_t                    cchar_t;
  76:funsape/globalDefines.hpp **** typedef const int8_t                    cint8_t;
  77:funsape/globalDefines.hpp **** typedef const int16_t                   cint16_t;
  78:funsape/globalDefines.hpp **** typedef const int32_t                   cint32_t;
  79:funsape/globalDefines.hpp **** typedef const int64_t                   cint64_t;
  80:funsape/globalDefines.hpp **** typedef const uint8_t                   cuint8_t;
  81:funsape/globalDefines.hpp **** typedef const uint16_t                  cuint16_t;
  82:funsape/globalDefines.hpp **** typedef const uint32_t                  cuint32_t;
  83:funsape/globalDefines.hpp **** typedef const uint64_t                  cuint64_t;
  84:funsape/globalDefines.hpp **** 
  85:funsape/globalDefines.hpp **** //     ///////////////////     VOLATILE VARIABLES    ////////////////////     //
  86:funsape/globalDefines.hpp **** typedef volatile bool_t                 vbool_t;
  87:funsape/globalDefines.hpp **** typedef volatile char_t                 vchar_t;
  88:funsape/globalDefines.hpp **** typedef volatile int8_t                 vint8_t;
  89:funsape/globalDefines.hpp **** typedef volatile int16_t                vint16_t;
  90:funsape/globalDefines.hpp **** typedef volatile int32_t                vint32_t;
  91:funsape/globalDefines.hpp **** typedef volatile int64_t                vint64_t;
  92:funsape/globalDefines.hpp **** typedef volatile uint8_t                vuint8_t;
  93:funsape/globalDefines.hpp **** typedef volatile uint16_t               vuint16_t;
  94:funsape/globalDefines.hpp **** typedef volatile uint32_t               vuint32_t;
  95:funsape/globalDefines.hpp **** typedef volatile uint64_t               vuint64_t;
  96:funsape/globalDefines.hpp **** 
  97:funsape/globalDefines.hpp **** //     /////////////////     AVR PLATFORM VARIABLES    //////////////////     //
  98:funsape/globalDefines.hpp **** typedef int16_t                         int_t;          // 16-bit (AVR)
  99:funsape/globalDefines.hpp **** typedef uint16_t                        uint_t;         // 16-bit (AVR)
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 3


 100:funsape/globalDefines.hpp **** typedef cint16_t                        cint_t;         // 16-bit (AVR)
 101:funsape/globalDefines.hpp **** typedef cuint16_t                       cuint_t;        // 16-bit (AVR)
 102:funsape/globalDefines.hpp **** typedef vint16_t                        vint_t;         // 16-bit (AVR)
 103:funsape/globalDefines.hpp **** typedef vuint16_t                       vuint_t;        // 16-bit (AVR)
 104:funsape/globalDefines.hpp **** typedef uint8_t                         ioPinIndex_t;   // 8-bit (AVR)
 105:funsape/globalDefines.hpp **** typedef vuint8_t                       *ioRegAddress_t; // 8-bit address (AVR)
 106:funsape/globalDefines.hpp **** 
 107:funsape/globalDefines.hpp **** //     //////////////////     BINARY ENUMERATIONS     ///////////////////     //
 108:funsape/globalDefines.hpp **** enum class Activation : cbool_t {
 109:funsape/globalDefines.hpp ****     OFF                                 = false,
 110:funsape/globalDefines.hpp ****     ON                                  = true
 111:funsape/globalDefines.hpp **** };
 112:funsape/globalDefines.hpp **** 
 113:funsape/globalDefines.hpp **** enum class DisplayOrientation : cbool_t {
 114:funsape/globalDefines.hpp ****     LANDSCAPE                           = false,
 115:funsape/globalDefines.hpp ****     PORTRAIT                            = true
 116:funsape/globalDefines.hpp **** };
 117:funsape/globalDefines.hpp **** 
 118:funsape/globalDefines.hpp **** enum class DriverMode : cbool_t {
 119:funsape/globalDefines.hpp ****     PUSH_PULL                           = false,
 120:funsape/globalDefines.hpp ****     OPEN_DRAIN                          = true,
 121:funsape/globalDefines.hpp **** };
 122:funsape/globalDefines.hpp **** 
 123:funsape/globalDefines.hpp **** enum class Edge : cbool_t {
 124:funsape/globalDefines.hpp ****     FALLING                             = false,
 125:funsape/globalDefines.hpp ****     RISING                              = true
 126:funsape/globalDefines.hpp **** };
 127:funsape/globalDefines.hpp **** 
 128:funsape/globalDefines.hpp **** enum class IoOperation : cbool_t {
 129:funsape/globalDefines.hpp ****     WRITE                               = false,
 130:funsape/globalDefines.hpp ****     READ                                = true
 131:funsape/globalDefines.hpp **** };
 132:funsape/globalDefines.hpp **** 
 133:funsape/globalDefines.hpp **** enum class LogicLevel : cbool_t {
 134:funsape/globalDefines.hpp ****     LOW                                 = false,
 135:funsape/globalDefines.hpp ****     HIGH                                = true
 136:funsape/globalDefines.hpp **** };
 137:funsape/globalDefines.hpp **** 
 138:funsape/globalDefines.hpp **** enum class PinDirection : cbool_t {
 139:funsape/globalDefines.hpp ****     INPUT                               = false,
 140:funsape/globalDefines.hpp ****     OUTPUT                              = true,
 141:funsape/globalDefines.hpp **** };
 142:funsape/globalDefines.hpp **** 
 143:funsape/globalDefines.hpp **** enum class Rotation : cbool_t {
 144:funsape/globalDefines.hpp ****     CLOCKWISE                           = false,
 145:funsape/globalDefines.hpp ****     COUNTERCLOCKWISE                    = true
 146:funsape/globalDefines.hpp **** };
 147:funsape/globalDefines.hpp **** 
 148:funsape/globalDefines.hpp **** enum class State : cbool_t {
 149:funsape/globalDefines.hpp ****     OFF                                 = false,
 150:funsape/globalDefines.hpp ****     ON                                  = true
 151:funsape/globalDefines.hpp **** };
 152:funsape/globalDefines.hpp **** 
 153:funsape/globalDefines.hpp **** //     ///////////////////     PLAIN ENUMERATIONS    ////////////////////     //
 154:funsape/globalDefines.hpp **** enum class Axis : cuint8_t {
 155:funsape/globalDefines.hpp ****     //                                     Z-AXIS     Y-AXIS     X-AXIS
 156:funsape/globalDefines.hpp ****     NONE                                = (0 << 2) | (0 << 1) | (0 << 0),
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 4


 157:funsape/globalDefines.hpp ****     X                                   = (0 << 2) | (0 << 1) | (1 << 0),
 158:funsape/globalDefines.hpp ****     Y                                   = (0 << 2) | (1 << 1) | (0 << 0),
 159:funsape/globalDefines.hpp ****     XY                                  = (0 << 2) | (1 << 1) | (1 << 0),
 160:funsape/globalDefines.hpp ****     Z                                   = (1 << 2) | (0 << 1) | (0 << 0),
 161:funsape/globalDefines.hpp ****     XZ                                  = (1 << 2) | (0 << 1) | (1 << 0),
 162:funsape/globalDefines.hpp ****     YZ                                  = (1 << 2) | (1 << 1) | (0 << 0),
 163:funsape/globalDefines.hpp ****     ALL                                 = (1 << 2) | (1 << 1) | (1 << 0)
 164:funsape/globalDefines.hpp **** };
 165:funsape/globalDefines.hpp **** 
 166:funsape/globalDefines.hpp **** inlined Axis operator|(Axis a, Axis b)
 167:funsape/globalDefines.hpp **** {
 168:funsape/globalDefines.hpp ****     return static_cast<Axis>(static_cast<cint8_t>(a) | static_cast<uint8_t>(b));
 169:funsape/globalDefines.hpp **** }
 170:funsape/globalDefines.hpp **** 
 171:funsape/globalDefines.hpp **** inlined Axis &operator|=(Axis &a, Axis b)
 172:funsape/globalDefines.hpp **** {
 173:funsape/globalDefines.hpp ****     return a = static_cast<Axis>(static_cast<uint8_t>(a) | static_cast<uint8_t>(b));
 174:funsape/globalDefines.hpp **** }
 175:funsape/globalDefines.hpp **** 
 176:funsape/globalDefines.hpp **** inlined Axis operator&(Axis a, Axis b)
 177:funsape/globalDefines.hpp **** {
 178:funsape/globalDefines.hpp ****     return static_cast<Axis>(static_cast<uint8_t>(a) & static_cast<uint8_t>(b));
 179:funsape/globalDefines.hpp **** }
 180:funsape/globalDefines.hpp **** 
 181:funsape/globalDefines.hpp **** inlined Axis &operator&=(Axis &a, Axis b)
 182:funsape/globalDefines.hpp **** {
 183:funsape/globalDefines.hpp ****     return a = static_cast<Axis>(static_cast<uint8_t>(a) & static_cast<uint8_t>(b));
 184:funsape/globalDefines.hpp **** }
 185:funsape/globalDefines.hpp **** 
 186:funsape/globalDefines.hpp **** enum class Direction : cuint8_t {
 187:funsape/globalDefines.hpp ****     LEFT                                = 0,
 188:funsape/globalDefines.hpp ****     RIGHT                               = 1,
 189:funsape/globalDefines.hpp ****     UP                                  = 2,
 190:funsape/globalDefines.hpp ****     DOWN                                = 3
 191:funsape/globalDefines.hpp **** };
 192:funsape/globalDefines.hpp **** 
 193:funsape/globalDefines.hpp **** enum class InterfaceMode : cuint8_t {
 194:funsape/globalDefines.hpp ****     BLOCKING_MODE                       = 0,
 195:funsape/globalDefines.hpp ****     INTERRUPT_MODE                      = 1,
 196:funsape/globalDefines.hpp ****     DMA_MODE                            = 2
 197:funsape/globalDefines.hpp **** };
 198:funsape/globalDefines.hpp **** 
 199:funsape/globalDefines.hpp **** enum class ThermometricScale : cuint8_t {
 200:funsape/globalDefines.hpp ****     CELSIUS                             = 0,
 201:funsape/globalDefines.hpp ****     DELISLE                             = 1,
 202:funsape/globalDefines.hpp ****     FAHRENHEIT                          = 2,
 203:funsape/globalDefines.hpp ****     KELVIN                              = 3,
 204:funsape/globalDefines.hpp ****     NEWTON                              = 4,
 205:funsape/globalDefines.hpp ****     RANKINE                             = 5,
 206:funsape/globalDefines.hpp ****     REAUMUR                             = 6,
 207:funsape/globalDefines.hpp ****     ROMER                               = 7
 208:funsape/globalDefines.hpp **** };
 209:funsape/globalDefines.hpp **** 
 210:funsape/globalDefines.hpp **** enum class Error : cuint16_t {
 211:funsape/globalDefines.hpp ****     // General error codes
 212:funsape/globalDefines.hpp ****     NONE                                                = 0x0000,   // Success - No errors occurred
 213:funsape/globalDefines.hpp ****     AXIS_INVALID                                        = 0x0001,   // Invalid axis
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 5


 214:funsape/globalDefines.hpp ****     NOT_IMPLEMENTED                                     = 0x0002,   // Not implemented yet
 215:funsape/globalDefines.hpp ****     UNDER_DEVELOPMENT                                   = 0x0003,   // This part of the code is sti
 216:funsape/globalDefines.hpp ****     NOT_INITIALIZED                                     = 0x0004,   // Not initialized
 217:funsape/globalDefines.hpp ****     // BUSY                                                = 0x0005,   // TODO: Describe parameter
 218:funsape/globalDefines.hpp ****     // DEVICE_NOT_SUPPORTED                                = 0x0006,   // Device is not currently s
 219:funsape/globalDefines.hpp ****     FEATURE_NOT_SUPPORTED                               = 0x0007,   // Unsupported feature or confi
 220:funsape/globalDefines.hpp ****     // FUNCTION_POINTER_NULL                               = 0x0008,   // TODO: Describe parameter
 221:funsape/globalDefines.hpp ****     // INSTANCE_INVALID                                    = 0x0009,   // Invalid instance
 222:funsape/globalDefines.hpp ****     // LOCKED                                              = 0x000A,   // Accessed a locked device
 223:funsape/globalDefines.hpp ****     MEMORY_ALLOCATION                                   = 0x000B,   // Memory allocation failed
 224:funsape/globalDefines.hpp ****     // MODE_NOT_SUPPORTED                                  = 0x000C,   // Mode is not currently sup
 225:funsape/globalDefines.hpp ****     // NOT_READY                                           = 0x000D,   // TODO: Describe parameter
 226:funsape/globalDefines.hpp ****     // READ_PROTECTED                                      = 0x000E,   // Tried to read a read prot
 227:funsape/globalDefines.hpp ****     // WRITE_PROTECTED                                     = 0x000F,   // Tried to write a write pr
 228:funsape/globalDefines.hpp **** 
 229:funsape/globalDefines.hpp ****     // Function arguments related error codes
 230:funsape/globalDefines.hpp ****     ARGUMENT_CANNOT_BE_ZERO                             = 0x0010,   // TODO: Describe parameter
 231:funsape/globalDefines.hpp ****     ARGUMENT_POINTER_NULL                               = 0x0011,   // NULL pointer was passed as a
 232:funsape/globalDefines.hpp ****     ARGUMENT_VALUE_INVALID                              = 0x0012,   // TODO: Describe parameter
 233:funsape/globalDefines.hpp ****     // ARGUMENTS_MISMATCH                                  = 0x0013,   // A function was called wit
 234:funsape/globalDefines.hpp ****     // ARGUMENTS_WRONG_NUMBER                              = 0x0014,   // A function was called wit
 235:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_5                            = 0x0015,   // Generic error (use only o
 236:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_6                            = 0x0016,   // Generic error (use only o
 237:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_7                            = 0x0017,   // Generic error (use only o
 238:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_8                            = 0x0018,   // Generic error (use only o
 239:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_9                            = 0x0019,   // Generic error (use only o
 240:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_10                           = 0x001A,   // Generic error (use only o
 241:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_11                           = 0x001B,   // Generic error (use only o
 242:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_12                           = 0x001C,   // Generic error (use only o
 243:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_13                           = 0x001D,   // Generic error (use only o
 244:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR_14                           = 0x001E,   // Generic error (use only o
 245:funsape/globalDefines.hpp ****     // ARGUMENT_GENERIC_ERROR                              = 0x001F,   // Generic error (use only o
 246:funsape/globalDefines.hpp **** 
 247:funsape/globalDefines.hpp ****     // Buffer related error codes
 248:funsape/globalDefines.hpp ****     // BUFFER_EMPTY                                        = 0x0020,   // Buffer is empty
 249:funsape/globalDefines.hpp ****     // BUFFER_FULL                                         = 0x0021,   // Buffer is full
 250:funsape/globalDefines.hpp ****     // BUFFER_NOT_ENOUGH_ELEMENTS                          = 0x0022,   // Not enough space in buffe
 251:funsape/globalDefines.hpp ****     // BUFFER_NOT_ENOUGH_SPACE                             = 0x0023,   // Not enough space in buffe
 252:funsape/globalDefines.hpp ****     // BUFFER_POINTER_NULL                                 = 0x0024,   // Buffer size was set to ze
 253:funsape/globalDefines.hpp ****     BUFFER_SIZE_TOO_LARGE                               = 0x0025,   // Buffer size was set to a lar
 254:funsape/globalDefines.hpp ****     BUFFER_SIZE_TOO_SMALL                               = 0x0026,   // Buffer size was set to a ver
 255:funsape/globalDefines.hpp ****     // BUFFER_SIZE_ZERO                                    = 0x0027,   // Buffer size was set to ze
 256:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_8                              = 0x0028,   // Generic error (use only o
 257:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_9                              = 0x0029,   // Generic error (use only o
 258:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_10                             = 0x002A,   // Generic error (use only o
 259:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_11                             = 0x002B,   // Generic error (use only o
 260:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_12                             = 0x002C,   // Generic error (use only o
 261:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_13                             = 0x002D,   // Generic error (use only o
 262:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_14                             = 0x002E,   // Generic error (use only o
 263:funsape/globalDefines.hpp ****     // BUFFER_GENERIC_ERROR_15                             = 0x002F,   // Generic error (use only o
 264:funsape/globalDefines.hpp **** 
 265:funsape/globalDefines.hpp ****     // Clock configuration related error codes
 266:funsape/globalDefines.hpp ****     CLOCK_PRESCALER_CHANGE_FAILED                       = 0x0030,   // Clock prescaler change faile
 267:funsape/globalDefines.hpp ****     CLOCK_PRESCALER_NOT_SUPPORTED                       = 0x0031,   // Clock prescaler configuratio
 268:funsape/globalDefines.hpp ****     CLOCK_SPEED_TOO_HIGH                                = 0x0032,   // TODO: Describe parameter
 269:funsape/globalDefines.hpp ****     CLOCK_SPEED_TOO_LOW                                 = 0x0033,   // TODO: Describe parameter
 270:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_4                               = 0x0034,   // Generic error (use only o
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 6


 271:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_5                               = 0x0035,   // Generic error (use only o
 272:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_6                               = 0x0036,   // Generic error (use only o
 273:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_7                               = 0x0037,   // Generic error (use only o
 274:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_8                               = 0x0038,   // Generic error (use only o
 275:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_9                               = 0x0039,   // Generic error (use only o
 276:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_10                              = 0x003A,   // Generic error (use only o
 277:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_11                              = 0x003B,   // Generic error (use only o
 278:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_12                              = 0x003C,   // Generic error (use only o
 279:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_13                              = 0x003D,   // Generic error (use only o
 280:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_14                              = 0x003E,   // Generic error (use only o
 281:funsape/globalDefines.hpp ****     // CLOCK_GENERIC_ERROR_15                              = 0x003F,   // Generic error (use only o
 282:funsape/globalDefines.hpp **** 
 283:funsape/globalDefines.hpp ****     // Communication related error codes
 284:funsape/globalDefines.hpp ****     COMMUNICATION_FAILED                                = 0x0040,   // TODO: Describe parameter
 285:funsape/globalDefines.hpp ****     COMMUNICATION_NO_DEVICE_SELECTED                    = 0x0041,   // TODO: Describe parameter
 286:funsape/globalDefines.hpp ****     // COMMUNICATION_PORT_NOT_SET                          = 0x0042,   // TODO: Describe parameter
 287:funsape/globalDefines.hpp ****     COMMUNICATION_TIMEOUT                               = 0x0043,   // The operation timed out
 288:funsape/globalDefines.hpp ****     // COMMUNICATION_DEVICE_ID_MATCH_FAILED                = 0x0044,   // TODO: Describe parameter
 289:funsape/globalDefines.hpp ****     // CHECKSUM_ERROR                                      = 0x0045,   // TODO: Describe parameter
 290:funsape/globalDefines.hpp ****     // FRAME_ERROR                                         = 0x0046,   // TODO: Describe parameter
 291:funsape/globalDefines.hpp ****     // PACKAGE_AWAITING                                    = 0x0047,   // Try to write data to a re
 292:funsape/globalDefines.hpp ****     // PACKAGE_NOT_READY                                   = 0x0048,   // Try to read data from a n
 293:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_9                       = 0x0049,   // Generic error (use only o
 294:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_10                      = 0x004A,   // Generic error (use only o
 295:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_11                      = 0x004B,   // Generic error (use only o
 296:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_12                      = 0x004C,   // Generic error (use only o
 297:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_13                      = 0x004D,   // Generic error (use only o
 298:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_14                      = 0x004E,   // Generic error (use only o
 299:funsape/globalDefines.hpp ****     // COMMUNICATION_GENERIC_ERROR_15                      = 0x004F,   // Generic error (use only o
 300:funsape/globalDefines.hpp **** 
 301:funsape/globalDefines.hpp ****     // DateTime class related error codes
 302:funsape/globalDefines.hpp ****     DATE_NOT_INITIALIZED                                = 0x0050,   // TODO: Describe parameter
 303:funsape/globalDefines.hpp ****     // HOUR_INVALID                                        = 0x0051,   // TODO: Describe parameter
 304:funsape/globalDefines.hpp ****     // MILLISECOND_INVALID                                 = 0x0052,   // TODO: Describe parameter
 305:funsape/globalDefines.hpp ****     // MINUTE_INVALID                                      = 0x0053,   // TODO: Describe parameter
 306:funsape/globalDefines.hpp ****     // MONTH_DAY_INVALID                                   = 0x0054,   // TODO: Describe parameter
 307:funsape/globalDefines.hpp ****     // MONTH_INVALID                                       = 0x0055,   // TODO: Describe parameter
 308:funsape/globalDefines.hpp ****     // SECOND_INVALID                                      = 0x0056,   // TODO: Describe parameter
 309:funsape/globalDefines.hpp ****     TIME_NOT_INITIALIZED                                = 0x0057,   // TODO: Describe parameter
 310:funsape/globalDefines.hpp ****     // TIMEZONE_INVALID                                    = 0x0058,   // TODO: Describe parameter
 311:funsape/globalDefines.hpp ****     // YEAR_INVALID                                        = 0x0059,   // TODO: Describe parameter
 312:funsape/globalDefines.hpp ****     DATE_INVALID                                        = 0x005A,   // TODO: Describe parameter
 313:funsape/globalDefines.hpp ****     TIME_INVALID                                        = 0x005B,   // TODO: Describe parameter
 314:funsape/globalDefines.hpp ****     // GENERIC_ERROR_13                                    = 0x005C,   // Generic error (use only o
 315:funsape/globalDefines.hpp ****     // GENERIC_ERROR_14                                    = 0x005D,   // Generic error (use only o
 316:funsape/globalDefines.hpp ****     // GENERIC_ERROR_15                                    = 0x005F,   // Generic error (use only o
 317:funsape/globalDefines.hpp **** 
 318:funsape/globalDefines.hpp ****     // Handler related error codes
 319:funsape/globalDefines.hpp ****     BUS_HANDLER_NOT_SUPPORTED                           = 0x0060,   // TODO: Describe parameter
 320:funsape/globalDefines.hpp ****     BUS_HANDLER_POINTER_NULL                            = 0x0061,   // TODO: Describe parameter
 321:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_2                             = 0x0062,   // Generic error (use only o
 322:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_3                             = 0x0063,   // Generic error (use only o
 323:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_4                             = 0x0064,   // Generic error (use only o
 324:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_5                             = 0x0065,   // Generic error (use only o
 325:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_6                             = 0x0066,   // Generic error (use only o
 326:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_7                             = 0x0067,   // Generic error (use only o
 327:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_8                             = 0x0068,   // Generic error (use only o
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 7


 328:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_9                             = 0x0069,   // Generic error (use only o
 329:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_10                            = 0x006A,   // Generic error (use only o
 330:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_11                            = 0x006B,   // Generic error (use only o
 331:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_12                            = 0x006C,   // Generic error (use only o
 332:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_13                            = 0x006D,   // Generic error (use only o
 333:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_14                            = 0x006E,   // Generic error (use only o
 334:funsape/globalDefines.hpp ****     // HANDLER_GENERIC_ERROR_15                            = 0x006F,   // Generic error (use only o
 335:funsape/globalDefines.hpp **** 
 336:funsape/globalDefines.hpp ****     // External interrupts related error codes
 337:funsape/globalDefines.hpp ****     // INTERRUPT_NOT_AVAILABLE                             = 0x0070,   // TODO: Describe parameter
 338:funsape/globalDefines.hpp ****     // INTERRUPT_PORT_OUTPUT_MODE_NOT_SUPPORTED            = 0x0071,   // TODO: Describe parameter
 339:funsape/globalDefines.hpp ****     // INTERRUPT_SENSE_MODE_NOT_SUPPORTED                  = 0x0072,   // TODO: Describe parameter
 340:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_3                           = 0x0073,   // Generic error (use only o
 341:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_4                           = 0x0074,   // Generic error (use only o
 342:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_5                           = 0x0075,   // Generic error (use only o
 343:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_6                           = 0x0076,   // Generic error (use only o
 344:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_7                           = 0x0077,   // Generic error (use only o
 345:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_8                           = 0x0078,   // Generic error (use only o
 346:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_9                           = 0x0079,   // Generic error (use only o
 347:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_10                          = 0x007A,   // Generic error (use only o
 348:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_11                          = 0x007B,   // Generic error (use only o
 349:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_12                          = 0x007C,   // Generic error (use only o
 350:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_13                          = 0x007D,   // Generic error (use only o
 351:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_14                          = 0x007E,   // Generic error (use only o
 352:funsape/globalDefines.hpp ****     // INTERRUPT_GENERIC_ERROR_15                          = 0x007F,   // Generic error (use only o
 353:funsape/globalDefines.hpp **** 
 354:funsape/globalDefines.hpp **** 
 355:funsape/globalDefines.hpp ****     // Package API class related error codes
 356:funsape/globalDefines.hpp ****     // PACKAGE_API_PACKAGE_DATA_FULL                       = 0x0080,   // TODO: Describe parameter
 357:funsape/globalDefines.hpp ****     // PACKAGE_API_PACKAGE_NOT_READY                       = 0x0081,   // TODO: Describe parameter
 358:funsape/globalDefines.hpp ****     // PACKAGE_API_PAYLOAD_DATA_NULL                       = 0x0082,   // TODO: Describe parameter
 359:funsape/globalDefines.hpp ****     // PACKAGE_API_PAYLOAD_SIZE_NULL                       = 0x0083,   // TODO: Describe parameter
 360:funsape/globalDefines.hpp ****     // PACKAGE_API_SOURCE_ADDRESS_INVALID                  = 0x0084,   // TODO: Describe parameter
 361:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_5                         = 0x0085,   // Generic error (use only o
 362:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_6                         = 0x0086,   // Generic error (use only o
 363:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_7                         = 0x0087,   // Generic error (use only o
 364:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_8                         = 0x0088,   // Generic error (use only o
 365:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_9                         = 0x0089,   // Generic error (use only o
 366:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_10                        = 0x008A,   // Generic error (use only o
 367:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_11                        = 0x008B,   // Generic error (use only o
 368:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_12                        = 0x008C,   // Generic error (use only o
 369:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_13                        = 0x008D,   // Generic error (use only o
 370:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_14                        = 0x008E,   // Generic error (use only o
 371:funsape/globalDefines.hpp ****     // PACKAGE_API_GENERIC_ERROR_15                        = 0x008F,   // Generic error (use only o
 372:funsape/globalDefines.hpp **** 
 373:funsape/globalDefines.hpp ****     // SPI related error codes
 374:funsape/globalDefines.hpp ****     // SPI_BUSY_FLAG                                       = 0x0090,   // TODO: Describe parameter
 375:funsape/globalDefines.hpp ****     // SPI_CRC                                             = 0x0091,   // TODO: Describe parameter
 376:funsape/globalDefines.hpp ****     // SPI_DMA                                             = 0x0092,   // TODO: Describe parameter
 377:funsape/globalDefines.hpp ****     // SPI_MODE_FAULT                                      = 0x0093,   // TODO: Describe parameter
 378:funsape/globalDefines.hpp ****     // SPI_OVERRUN                                         = 0x0094,   // TODO: Describe parameter
 379:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_5                                 = 0x0095,   // Generic error (use only o
 380:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_6                                 = 0x0096,   // Generic error (use only o
 381:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_7                                 = 0x0097,   // Generic error (use only o
 382:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_8                                 = 0x0098,   // Generic error (use only o
 383:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_9                                 = 0x0099,   // Generic error (use only o
 384:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_10                                = 0x009A,   // Generic error (use only o
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 8


 385:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_11                                = 0x009B,   // Generic error (use only o
 386:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_12                                = 0x009C,   // Generic error (use only o
 387:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_13                                = 0x009D,   // Generic error (use only o
 388:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_14                                = 0x009E,   // Generic error (use only o
 389:funsape/globalDefines.hpp ****     // SPI_GENERIC_ERROR_15                                = 0x009F,   // Generic error (use only o
 390:funsape/globalDefines.hpp **** 
 391:funsape/globalDefines.hpp ****     // TWI related error codes
 392:funsape/globalDefines.hpp ****     // TWI_AF_FLAG                                         = 0x00A0,   // TWI AF flag error
 393:funsape/globalDefines.hpp ****     // TWI_ARBITRATION_LOST                                = 0x00A1,   // TWI bus arbitration lost
 394:funsape/globalDefines.hpp ****     // TWI_BUS_ERROR                                       = 0x00A2,   // TWI bus error
 395:funsape/globalDefines.hpp ****     // TWI_DMA                                             = 0x00A3,   // DMA parameter error
 396:funsape/globalDefines.hpp ****     // TWI_DMA_PARAM                                       = 0x00A4,   // DMA transfer error
 397:funsape/globalDefines.hpp ****     // TWI_OVERRUN                                         = 0x00A5,   // TWI overrun
 398:funsape/globalDefines.hpp ****     // TWI_SIZE_MANAGEMENT_ERROR                           = 0x00A6,   // Size management error
 399:funsape/globalDefines.hpp ****     // TWI_INVALID_DEVICE_ADDRESS                          = 0x00A7,   // TODO: Describe parameter
 400:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_8                                 = 0x00A8,   // Generic error (use only o
 401:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_9                                 = 0x00A9,   // Generic error (use only o
 402:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_10                                = 0x00AA,   // Generic error (use only o
 403:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_11                                = 0x00AB,   // Generic error (use only o
 404:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_12                                = 0x00AC,   // Generic error (use only o
 405:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_13                                = 0x00AD,   // Generic error (use only o
 406:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_14                                = 0x00AE,   // Generic error (use only o
 407:funsape/globalDefines.hpp ****     // TWI_GENERIC_ERROR_15                                = 0x00AF,   // Generic error (use only o
 408:funsape/globalDefines.hpp **** 
 409:funsape/globalDefines.hpp ****     // USART related error codes
 410:funsape/globalDefines.hpp ****     // USART_BAUD_RATE_NOT_SUPPORTED                       = 0x00B0,   // TODO: Describe parameter
 411:funsape/globalDefines.hpp ****     // USART_CONFIGURATION_PARAMETER_WRONG                 = 0x00B1,   // TODO: Describe parameter
 412:funsape/globalDefines.hpp ****     // USART_DATA_BITS_NOT_SUPPORTED                       = 0x00B2,   // TODO: Describe parameter
 413:funsape/globalDefines.hpp ****     // USART_FRAME_FORMAT_NOT_SUPPORTED                    = 0x00B3,   // TODO: Describe parameter
 414:funsape/globalDefines.hpp ****     // USART_PARITY_NOT_SUPPORTED                          = 0x00B4,   // TODO: Describe parameter
 415:funsape/globalDefines.hpp ****     // USART_STOP_BIT_NOT_SUPPORTED                        = 0x00B5,   // TODO: Describe parameter
 416:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_6                               = 0x00B6,   // Generic error (use only o
 417:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_7                               = 0x00B7,   // Generic error (use only o
 418:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_8                               = 0x00B8,   // Generic error (use only o
 419:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_9                               = 0x00B9,   // Generic error (use only o
 420:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_10                              = 0x00BA,   // Generic error (use only o
 421:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_11                              = 0x00BB,   // Generic error (use only o
 422:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_12                              = 0x00BC,   // Generic error (use only o
 423:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_13                              = 0x00BD,   // Generic error (use only o
 424:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_14                              = 0x00BE,   // Generic error (use only o
 425:funsape/globalDefines.hpp ****     // USART_GENERIC_ERROR_15                              = 0x00BF,   // Generic error (use only o
 426:funsape/globalDefines.hpp **** 
 427:funsape/globalDefines.hpp ****     // LCD related error codes
 428:funsape/globalDefines.hpp ****     // LCD_CONTROL_PORT_NOT_SET                            = 0x00C0,   // TODO: Describe parameter
 429:funsape/globalDefines.hpp ****     // LCD_CONTROL_PIN_E_INVALID                           = 0x00C1,   // TODO: Describe parameter
 430:funsape/globalDefines.hpp ****     // LCD_CONTROL_PIN_RS_INVALID                          = 0x00C2,   // TODO: Describe parameter
 431:funsape/globalDefines.hpp ****     // LCD_CONTROL_PIN_RW_INVALID                          = 0x00C3,   // TODO: Describe parameter
 432:funsape/globalDefines.hpp ****     // LCD_DATA_PORT_NOT_SET                               = 0x00C4,   // TODO: Describe parameter
 433:funsape/globalDefines.hpp ****     // LCD_DATA_PIN_INDEX_OUT_OF_BOUNDARIES                = 0x00C5,   // TODO: Describe parameter
 434:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_6                                 = 0x00C6,   // Generic error (use only o
 435:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_7                                 = 0x00C7,   // Generic error (use only o
 436:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_8                                 = 0x00C8,   // Generic error (use only o
 437:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_9                                 = 0x00C9,   // Generic error (use only o
 438:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_10                                = 0x00CA,   // Generic error (use only o
 439:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_11                                = 0x00CB,   // Generic error (use only o
 440:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_12                                = 0x00CC,   // Generic error (use only o
 441:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_13                                = 0x00CD,   // Generic error (use only o
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 9


 442:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_14                                = 0x00CE,   // Generic error (use only o
 443:funsape/globalDefines.hpp ****     // LCD_GENERIC_ERROR_15                                = 0x00CF,   // Generic error (use only o
 444:funsape/globalDefines.hpp **** 
 445:funsape/globalDefines.hpp ****     // GPIO related error codes
 446:funsape/globalDefines.hpp ****     GPIO_PORT_NOT_SET                                   = 0x00D0,   // Gpio port was not set before
 447:funsape/globalDefines.hpp ****     GPIO_DATA_PORT_NOT_SET                              = 0x00D1,   // Gpio data port was not set b
 448:funsape/globalDefines.hpp ****     GPIO_CONTROL_PORT_NOT_SET                           = 0x00D2,   // Gpio control port was not se
 449:funsape/globalDefines.hpp ****     GPIO_PORT_INVALID                                   = 0x00D3,   // Gpio port address is invalid
 450:funsape/globalDefines.hpp ****     GPIO_DATA_PORT_INVALID                              = 0x00D4,   // Gpio data port address is in
 451:funsape/globalDefines.hpp ****     GPIO_CONTROL_PORT_INVALID                           = 0x00D5,   // Gpio control port address is
 452:funsape/globalDefines.hpp ****     GPIO_PIN_INDEX_INVALID                              = 0x00D6,   // Invalid GPIO Pin
 453:funsape/globalDefines.hpp ****     GPIO_PIN_INDEX_OUT_OF_BOUNDARIES                    = 0x00D7,   // Gpio pin index was out of bo
 454:funsape/globalDefines.hpp ****     // GPIO_NO_PIN_SET                                     = 0x00D8,   // No pin selected at Gpio p
 455:funsape/globalDefines.hpp ****     // GPIO_ADDRESS_INVALID                                = 0x00D9,   // Invalid GPIO Port
 456:funsape/globalDefines.hpp ****     // GPIO_PORT_LOGIC_CONTENTION                          = 0x00DA,   // TODO: Describe parameter
 457:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_11                               = 0x00DB,   // Generic error (use only o
 458:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_12                               = 0x00DC,   // Generic error (use only o
 459:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_13                               = 0x00DD,   // Generic error (use only o
 460:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_14                               = 0x00DE,   // Generic error (use only o
 461:funsape/globalDefines.hpp ****     // GPIO_GENERIC_ERROR_15                               = 0x00DF,   // Generic error (use only o
 462:funsape/globalDefines.hpp **** 
 463:funsape/globalDefines.hpp ****     // HAL related error codes
 464:funsape/globalDefines.hpp ****     // HAL_UNKNOWN_ERROR                                   = 0x00E0,   // TODO: Describe parameter
 465:funsape/globalDefines.hpp ****     // HAL_STATUS_ERROR                                    = 0x00E1,   // TODO: Describe parameter
 466:funsape/globalDefines.hpp ****     // HAL_STATUS_BUSY                                     = 0x00E2,   // TODO: Describe parameter
 467:funsape/globalDefines.hpp ****     // HAL_STATUS_TIMEOUT                                  = 0x00E3,   // TODO: Describe parameter
 468:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_4                                 = 0x00E4,   // Generic error (use only o
 469:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_5                                 = 0x00E5,   // Generic error (use only o
 470:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_6                                 = 0x00E6,   // Generic error (use only o
 471:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_7                                 = 0x00E7,   // Generic error (use only o
 472:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_8                                 = 0x00E8,   // Generic error (use only o
 473:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_9                                 = 0x00E9,   // Generic error (use only o
 474:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_10                                = 0x00EA,   // Generic error (use only o
 475:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_11                                = 0x00EB,   // Generic error (use only o
 476:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_12                                = 0x00EC,   // Generic error (use only o
 477:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_13                                = 0x00ED,   // Generic error (use only o
 478:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_14                                = 0x00EE,   // Generic error (use only o
 479:funsape/globalDefines.hpp ****     // HAL_GENERIC_ERROR_15                                = 0x00EF,   // Generic error (use only o
 480:funsape/globalDefines.hpp **** 
 481:funsape/globalDefines.hpp ****     // System related error codes
 482:funsape/globalDefines.hpp ****     // SYSTEM_US_TIMER_HANDLER_NULL                        = 0x00F0,   // TODO: Describe parameter
 483:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_1                              = 0x00F1,   // Generic error (use only o
 484:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_2                              = 0x00F2,   // Generic error (use only o
 485:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_3                              = 0x00F3,   // Generic error (use only o
 486:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_4                              = 0x00F4,   // Generic error (use only o
 487:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_5                              = 0x00F5,   // Generic error (use only o
 488:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_6                              = 0x00F6,   // Generic error (use only o
 489:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_7                              = 0x00F7,   // Generic error (use only o
 490:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_8                              = 0x00F8,   // Generic error (use only o
 491:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_9                              = 0x00F9,   // Generic error (use only o
 492:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_10                             = 0x00FA,   // Generic error (use only o
 493:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_11                             = 0x00FB,   // Generic error (use only o
 494:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_12                             = 0x00FC,   // Generic error (use only o
 495:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_13                             = 0x00FD,   // Generic error (use only o
 496:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_14                             = 0x00FE,   // Generic error (use only o
 497:funsape/globalDefines.hpp ****     // SYSTEM_GENERIC_ERROR_15                             = 0x00FF,   // Generic error (use only o
 498:funsape/globalDefines.hpp **** 
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 10


 499:funsape/globalDefines.hpp ****     // FatFs related error codes
 500:funsape/globalDefines.hpp ****     // FAT_FS_UNKNOWN_ERROR                                = 0x0100,   // TODO: Describe parameter
 501:funsape/globalDefines.hpp ****     // FAT_FS_DRIVE_UNSUPPORTED                            = 0x0101,   // TODO: Describe parameter
 502:funsape/globalDefines.hpp ****     // FAT_FS_DISK_NOT_INSERTED                            = 0x0102,   // TODO: Describe parameter
 503:funsape/globalDefines.hpp ****     // FAT_FS_INITIALIZATION_FAILED                        = 0x0103,   // TODO: Describe parameter
 504:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_4                              = 0x0104,   // Generic error (use only o
 505:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_5                              = 0x0105,   // Generic error (use only o
 506:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_6                              = 0x0106,   // Generic error (use only o
 507:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_7                              = 0x0107,   // Generic error (use only o
 508:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_8                              = 0x0108,   // Generic error (use only o
 509:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_9                              = 0x0109,   // Generic error (use only o
 510:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_10                             = 0x010A,   // Generic error (use only o
 511:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_11                             = 0x010B,   // Generic error (use only o
 512:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_12                             = 0x010C,   // Generic error (use only o
 513:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_13                             = 0x010D,   // Generic error (use only o
 514:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_14                             = 0x010E,   // Generic error (use only o
 515:funsape/globalDefines.hpp ****     // FAT_FS_GENERIC_ERROR_15                             = 0x010F,   // Generic error (use only o
 516:funsape/globalDefines.hpp **** 
 517:funsape/globalDefines.hpp ****     // Uncategorized error codes
 518:funsape/globalDefines.hpp ****     // LCD_OUT_OF_BOUNDARIES                               = 0xFFF1,   // TODO: Describe parameter
 519:funsape/globalDefines.hpp ****     // CONTROLLER_NOT_SUPPORTED                            = 0xFFF2,   // Unsupported controller
 520:funsape/globalDefines.hpp ****     // DEVICE_ID_MATCH_FAILED                              = 0xFFF3,   // Device ID doesn't match
 521:funsape/globalDefines.hpp ****     // DMA_NOT_SUPPORTED                                   = 0xFFF4,   // DMA interface mode is not
 522:funsape/globalDefines.hpp ****     // DMA_TRANSFER_ERROR                                  = 0xFFF5,   // DMA transfer error
 523:funsape/globalDefines.hpp ****     // MESSAGE_TOO_LONG                                    = 0xFFF6,   // Message is to long to be 
 524:funsape/globalDefines.hpp ****     // VALID_DATA_NOT_AVAILABLE                            = 0xFFF7,   // Valid data was unavailabl
 525:funsape/globalDefines.hpp ****     // PERIPHERAL_NOT_READY                                = 0xFFF8,   // TODO: Describe parameter
 526:funsape/globalDefines.hpp ****     // STOPWATCH_NOT_STARTED                               = 0xFFF9,   // TODO: Describe parameter
 527:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_10                      = 0xFFFA,   // Generic error (use only o
 528:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_11                      = 0xFFFB,   // Generic error (use only o
 529:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_12                      = 0xFFFC,   // Generic error (use only o
 530:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_13                      = 0xFFFD,   // Generic error (use only o
 531:funsape/globalDefines.hpp ****     // UNCATEGORIZED_GENERIC_ERROR_14                      = 0xFFFE,   // Generic error (use only o
 532:funsape/globalDefines.hpp **** 
 533:funsape/globalDefines.hpp ****     KEYPAD_COLUMNS_PIN_INDEX_INVALID                    = 0xFFF9,
 534:funsape/globalDefines.hpp ****     KEYPAD_LINES_PIN_INDEX_INVALID                      = 0xFFFA,
 535:funsape/globalDefines.hpp **** 
 536:funsape/globalDefines.hpp ****     KEYPAD_LINES_GPIO_PORT_INVALID                      = 0xFFFB,
 537:funsape/globalDefines.hpp ****     KEYPAD_COLUMNS_GPIO_PORT_INVALID                    = 0xFFFC,
 538:funsape/globalDefines.hpp ****     KEYPAD_TYPE_UNSUPPORTED                             = 0xFFFD,
 539:funsape/globalDefines.hpp ****     KEY_VALUES_NOT_SET                                  = 0xFFFE,
 540:funsape/globalDefines.hpp ****     // "I don't have the slightest idea" error code
 541:funsape/globalDefines.hpp ****     UNKNOWN                                             = 0xFFFF,   // Unknown error - Ops!!!!
 542:funsape/globalDefines.hpp **** };
 543:funsape/globalDefines.hpp **** 
 544:funsape/globalDefines.hpp **** // =============================================================================
 545:funsape/globalDefines.hpp **** // Macrofunctions
 546:funsape/globalDefines.hpp **** // =============================================================================
 547:funsape/globalDefines.hpp **** 
 548:funsape/globalDefines.hpp **** //     //////////////////////     DATA VALIDITY    //////////////////////     //
 549:funsape/globalDefines.hpp **** #define isGpioAddressValid(gpioPort)    (       \
 550:funsape/globalDefines.hpp ****         (IS_GPIO_ALL_INSTANCE(gpioPort))        \
 551:funsape/globalDefines.hpp ****         ? (bool_t)true                          \
 552:funsape/globalDefines.hpp ****         : (bool_t)false)
 553:funsape/globalDefines.hpp **** #define isGpioPinIndexValid(gpioPin)    (       \
 554:funsape/globalDefines.hpp ****         (IS_GPIO_ALL_PIN_NUMBER(gpioPin))       \
 555:funsape/globalDefines.hpp ****         ? (bool_t)true                          \
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 11


 556:funsape/globalDefines.hpp ****         : (bool_t)false)
 557:funsape/globalDefines.hpp **** #define isPointerValid(ptr)             (       \
 558:funsape/globalDefines.hpp ****         ((void *)(ptr))                         \
 559:funsape/globalDefines.hpp ****         ? (bool_t)true                          \
 560:funsape/globalDefines.hpp ****         : (bool_t)false)
 561:funsape/globalDefines.hpp **** 
 562:funsape/globalDefines.hpp **** //     //////////////////////     BIT HANDLING     //////////////////////     //
 563:funsape/globalDefines.hpp **** #ifndef setBit
 564:funsape/globalDefines.hpp **** #   define setBit(reg, bit)                     ((reg) |= (1 << (bit)))
 565:funsape/globalDefines.hpp **** #endif
 566:funsape/globalDefines.hpp **** #ifndef clrBit
 567:funsape/globalDefines.hpp **** #   define clrBit(reg, bit)                     ((reg) &= ~(1 << (bit)))
 568:funsape/globalDefines.hpp **** #endif
 569:funsape/globalDefines.hpp **** #ifndef cplBit
 570:funsape/globalDefines.hpp **** #   define cplBit(reg, bit)                     ((reg) ^= (1 << (bit)))
 571:funsape/globalDefines.hpp **** #endif
 572:funsape/globalDefines.hpp **** 
 573:funsape/globalDefines.hpp **** //     ///////////////////////     BIT TESTING    ///////////////////////     //
 574:funsape/globalDefines.hpp **** #ifndef isBitSet
 575:funsape/globalDefines.hpp **** #   define isBitSet(reg, bit)                   (((reg) >> (bit)) & 1)
 576:funsape/globalDefines.hpp **** #endif
 577:funsape/globalDefines.hpp **** #ifndef isBitClr
 578:funsape/globalDefines.hpp **** #   define isBitClr(reg, bit)                   (!isBitSet(reg,bit))
 579:funsape/globalDefines.hpp **** #endif
 580:funsape/globalDefines.hpp **** 
 581:funsape/globalDefines.hpp **** //     ///////////////////////     BIT LOOPING    ///////////////////////     //
 582:funsape/globalDefines.hpp **** #ifndef waitUntilBitIsSet
 583:funsape/globalDefines.hpp **** #   define waitUntilBitIsSet(reg, bit)          do{     \
 584:funsape/globalDefines.hpp ****         doNothing();                                    \
 585:funsape/globalDefines.hpp ****     } while (isBitClr((reg), (bit)))
 586:funsape/globalDefines.hpp **** #endif
 587:funsape/globalDefines.hpp **** #ifndef waitUntilBitIsClear
 588:funsape/globalDefines.hpp **** #   define waitUntilBitIsClear(reg, bit)        do{     \
 589:funsape/globalDefines.hpp ****         doNothing();                                    \
 590:funsape/globalDefines.hpp ****     }while(isBitSet((reg), (bit)))
 591:funsape/globalDefines.hpp **** #endif
 592:funsape/globalDefines.hpp **** 
 593:funsape/globalDefines.hpp **** //     ////////////////////     BIT MASK HANDLING    ////////////////////     //
 594:funsape/globalDefines.hpp **** #ifndef setMask
 595:funsape/globalDefines.hpp **** #   define setMask(reg, mask)                   ((reg) |= (mask))
 596:funsape/globalDefines.hpp **** #endif
 597:funsape/globalDefines.hpp **** #ifndef clrMask
 598:funsape/globalDefines.hpp **** #   define clrMask(reg, mask)                   ((reg) &= ~(mask))
 599:funsape/globalDefines.hpp **** #endif
 600:funsape/globalDefines.hpp **** #ifndef cplMask
 601:funsape/globalDefines.hpp **** #   define cplMask(reg, mask)                   ((reg) ^= (mask))
 602:funsape/globalDefines.hpp **** #endif
 603:funsape/globalDefines.hpp **** 
 604:funsape/globalDefines.hpp **** //     ////////////////     BIT MASK OFFSET HANDLING     ////////////////     //
 605:funsape/globalDefines.hpp **** #ifndef setMaskOffset
 606:funsape/globalDefines.hpp **** #   define setMaskOffset(reg, mask, offset)     ((reg) |= ((mask) << (offset)))
 607:funsape/globalDefines.hpp **** #endif
 608:funsape/globalDefines.hpp **** #ifndef clrMaskOffset
 609:funsape/globalDefines.hpp **** #   define clrMaskOffset(reg, mask, offset)     ((reg) &= ~((mask) << (offset)))
 610:funsape/globalDefines.hpp **** #endif
 611:funsape/globalDefines.hpp **** #ifndef cplMaskOffset
 612:funsape/globalDefines.hpp **** #   define cplMaskOffset(reg, mask, offset)     ((reg) ^= ((mask) << (offset)))
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 12


 613:funsape/globalDefines.hpp **** #endif
 614:funsape/globalDefines.hpp **** 
 615:funsape/globalDefines.hpp **** //     /////////////     DATA MANIPULATION (8-BITS WIDE)    /////////////     //
 616:funsape/globalDefines.hpp **** #define byteGetNibble1(dataByte)        (((dataByte) >> 4) & 0x0F)
 617:funsape/globalDefines.hpp **** #define byteGetNibble0(dataByte)        ((dataByte) & 0x0F)
 618:funsape/globalDefines.hpp **** #define byteSwitchNibbles(dataByte)     ((byteGetNibble0(dataByte) << 4) | \
 619:funsape/globalDefines.hpp ****         (byteGetNibble1(dataByte)))
 620:funsape/globalDefines.hpp **** 
 621:funsape/globalDefines.hpp **** //     ////////////     DATA MANIPULATION (16-BITS WIDE)     ////////////     //
 622:funsape/globalDefines.hpp **** #define hwordGetByte1(dataHword)        (((dataHword) >> 8) & 0x00FF)
 623:funsape/globalDefines.hpp **** #define hwordGetByte0(dataHword)        ((dataHword) & 0x00FF)
 624:funsape/globalDefines.hpp **** #define hwordSwitchBytes(dataHword)     ((hwordGetByte0(dataHword) << 8) | \
 625:funsape/globalDefines.hpp ****         (hwordGetByte1(dataHword)))
 626:funsape/globalDefines.hpp **** 
 627:funsape/globalDefines.hpp **** //     ////////////     DATA MANIPULATION (32-BITS WIDE)     ////////////     //
 628:funsape/globalDefines.hpp **** #define wordGetByte3(dataWord)          (((dataWord) >> 24) & 0x000000FF)
 629:funsape/globalDefines.hpp **** #define wordGetByte2(dataWord)          (((dataWord) >> 16) & 0x000000FF)
 630:funsape/globalDefines.hpp **** #define wordGetByte1(dataWord)          (((dataWord) >> 8) & 0x000000FF)
 631:funsape/globalDefines.hpp **** #define wordGetByte0(dataWord)          ((dataWord) & 0x000000FF)
 632:funsape/globalDefines.hpp **** #define wordSwitchBytes(dataWord)       ((wordGetByte0(dataWord) << 24)  | \
 633:funsape/globalDefines.hpp ****         (wordGetByte1(dataWord) << 16) | \
 634:funsape/globalDefines.hpp ****         (wordGetByte2(dataWord) << 8)  | \
 635:funsape/globalDefines.hpp ****         (wordGetByte3(dataWord)))
 636:funsape/globalDefines.hpp **** #define wordGetHword1(dataWord)         (((dataWord) >> 16) & 0x0000FFFF)
 637:funsape/globalDefines.hpp **** #define wordGetHword0(dataWord)         ((dataWord) & 0x0000FFFF)
 638:funsape/globalDefines.hpp **** #define wordSwitchHwords(dataWord)      ((wordGetHword0(dataWord) << 16) | \
 639:funsape/globalDefines.hpp ****         (wordGetHword1(dataWord)))
 640:funsape/globalDefines.hpp **** 
 641:funsape/globalDefines.hpp **** //     ////////////     DATA MANIPULATION (64-BITS WIDE)     ////////////     //
 642:funsape/globalDefines.hpp **** #define dwordGetByte7(dataDword)        (((dataDword) >> 56) & 0x00000000000000FF)
 643:funsape/globalDefines.hpp **** #define dwordGetByte6(dataDword)        (((dataDword) >> 48) & 0x00000000000000FF)
 644:funsape/globalDefines.hpp **** #define dwordGetByte5(dataDword)        (((dataDword) >> 40) & 0x00000000000000FF)
 645:funsape/globalDefines.hpp **** #define dwordGetByte4(dataDword)        (((dataDword) >> 32) & 0x00000000000000FF)
 646:funsape/globalDefines.hpp **** #define dwordGetByte3(dataDword)        (((dataDword) >> 24) & 0x00000000000000FF)
 647:funsape/globalDefines.hpp **** #define dwordGetByte2(dataDword)        (((dataDword) >> 16) & 0x00000000000000FF)
 648:funsape/globalDefines.hpp **** #define dwordGetByte1(dataDword)        (((dataDword) >> 8) & 0x00000000000000FF)
 649:funsape/globalDefines.hpp **** #define dwordGetByte0(dataDword)        ((dataDword) & 0x00000000000000FF)
 650:funsape/globalDefines.hpp **** #define dwordSwitchBytes(dataDword)     ((dwordGetByte0(dataDword) << 56)  | \
 651:funsape/globalDefines.hpp ****         (dwordGetByte1(dataDword) << 48) | \
 652:funsape/globalDefines.hpp ****         (dwordGetByte2(dataDword) << 40) | \
 653:funsape/globalDefines.hpp ****         (dwordGetByte3(dataDword) << 32) | \
 654:funsape/globalDefines.hpp ****         (dwordGetByte4(dataDword) << 24) | \
 655:funsape/globalDefines.hpp ****         (dwordGetByte5(dataDword) << 16) | \
 656:funsape/globalDefines.hpp ****         (dwordGetByte6(dataDword) << 8)  | \
 657:funsape/globalDefines.hpp ****         (dwordGetByte7(dataDword)))
 658:funsape/globalDefines.hpp **** #define dwordGetHword3(dataDword)       ((dataDword >> 48) & 0x000000000000FFFF)
 659:funsape/globalDefines.hpp **** #define dwordGetHword2(dataDword)       ((dataDword >> 32) & 0x000000000000FFFF)
 660:funsape/globalDefines.hpp **** #define dwordGetHword1(dataDword)       ((dataDword >> 16) & 0x000000000000FFFF)
 661:funsape/globalDefines.hpp **** #define dwordGetHword0(dataDword)       ((dataDword >> 0) & 0x000000000000FFFF)
 662:funsape/globalDefines.hpp **** #define dwordSwitchHwords(dataDword)    ((dwordGetHword0(dataDword) << 48)  | \
 663:funsape/globalDefines.hpp ****         (dwordGetHword1(dataDword) << 32) | \
 664:funsape/globalDefines.hpp ****         (dwordGetHword2(dataDword) << 16) | \
 665:funsape/globalDefines.hpp ****         (dwordGetHword3(dataDword)))
 666:funsape/globalDefines.hpp **** #define dwordGetWord1(dataDword)         (((dataDword) >> 32) & 0x00000000FFFFFFFF)
 667:funsape/globalDefines.hpp **** #define dwordGetWord0(dataDword)         ((dataDword) & 0x00000000FFFFFFFF)
 668:funsape/globalDefines.hpp **** #define dwordSwitchWords(dataDword)     ((dwordGetWord0(dataDword) << 32)  | \
 669:funsape/globalDefines.hpp ****         (dwordGetWord1(dataDword)))
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 13


 670:funsape/globalDefines.hpp **** 
 671:funsape/globalDefines.hpp **** //     /////////////////////     TRUNCATE VALUES    /////////////////////     //
 672:funsape/globalDefines.hpp **** #define getMaximumOf(var1, var2)        (       \
 673:funsape/globalDefines.hpp ****         ((var1) > (var2))                       \
 674:funsape/globalDefines.hpp ****         ? (var1)                                \
 675:funsape/globalDefines.hpp ****         : (var2))
 676:funsape/globalDefines.hpp **** #define getMinimumOf(var1, var2)        (       \
 677:funsape/globalDefines.hpp ****         ((var1) < (var2))                       \
 678:funsape/globalDefines.hpp ****         ? (var1)                                \
 679:funsape/globalDefines.hpp ****         : (var2))
 680:funsape/globalDefines.hpp **** #define truncateBetween(var, min, max)  (       \
 681:funsape/globalDefines.hpp ****         ((var) < (min))                         \
 682:funsape/globalDefines.hpp ****         ? (min)                                 \
 683:funsape/globalDefines.hpp ****         : (((var) > (max))                      \
 684:funsape/globalDefines.hpp ****                 ? (max)                         \
 685:funsape/globalDefines.hpp ****                 : (var)                         \
 686:funsape/globalDefines.hpp ****         ))
 687:funsape/globalDefines.hpp **** 
 688:funsape/globalDefines.hpp **** //     //////////////////////     STRINGIFYING    ///////////////////////     //
 689:funsape/globalDefines.hpp **** #define stringifyName(constant)         #constant
 690:funsape/globalDefines.hpp **** #define stringifyValue(constant)        stringifyName(constant)
 691:funsape/globalDefines.hpp **** 
 692:funsape/globalDefines.hpp **** // =============================================================================
 693:funsape/globalDefines.hpp **** // Extern global variables
 694:funsape/globalDefines.hpp **** // =============================================================================
 695:funsape/globalDefines.hpp **** 
 696:funsape/globalDefines.hpp **** // NONE
 697:funsape/globalDefines.hpp **** 
 698:funsape/globalDefines.hpp **** // =============================================================================
 699:funsape/globalDefines.hpp **** // Inline functions declaration
 700:funsape/globalDefines.hpp **** // =============================================================================
 701:funsape/globalDefines.hpp **** 
 702:funsape/globalDefines.hpp **** //     ///////////////////     CHARACTER HANDLING    ////////////////////     //
 703:funsape/globalDefines.hpp **** char_t inlined toLowerCase(cchar_t character_p);
 704:funsape/globalDefines.hpp **** char_t inlined toUpperCase(cchar_t character_p);
 705:funsape/globalDefines.hpp **** 
 706:funsape/globalDefines.hpp **** //     /////////////////////     DATA VALIDITY     //////////////////////     //
 707:funsape/globalDefines.hpp **** bool_t inlined isAsciiLowerCaseLetter(cchar_t character_p);
 708:funsape/globalDefines.hpp **** bool_t inlined isAsciiUpperCaseLetter(cchar_t character_p);
 709:funsape/globalDefines.hpp **** bool_t inlined isAsciiCommand(cchar_t character_p);
 710:funsape/globalDefines.hpp **** bool_t inlined isAsciiLetter(cchar_t character_p);
 711:funsape/globalDefines.hpp **** bool_t inlined isAsciiNumber(cchar_t character_p);
 712:funsape/globalDefines.hpp **** bool_t inlined isAsciiSymbol(cchar_t character_p);
 713:funsape/globalDefines.hpp **** 
 714:funsape/globalDefines.hpp **** //     /////////////////////     SYSTEM ACTIONS    //////////////////////     //
 715:funsape/globalDefines.hpp **** void inlined die(Error errorCode_p);
 716:funsape/globalDefines.hpp **** void inlined doNop(void);
 717:funsape/globalDefines.hpp **** void inlined doNothing(void);
 718:funsape/globalDefines.hpp **** void inlined systemHalt(void (*function_p)(void) = nullptr);
 719:funsape/globalDefines.hpp **** 
 720:funsape/globalDefines.hpp **** // =============================================================================
 721:funsape/globalDefines.hpp **** // Inline functions definitions
 722:funsape/globalDefines.hpp **** // =============================================================================
 723:funsape/globalDefines.hpp **** 
 724:funsape/globalDefines.hpp **** //     ///////////////////     CHARACTER HANDLING    ////////////////////     //
 725:funsape/globalDefines.hpp **** char_t inlined toLowerCase(cchar_t character_p)
 726:funsape/globalDefines.hpp **** {
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 14


 727:funsape/globalDefines.hpp ****     return ((isAsciiUpperCaseLetter(character_p)) ? (character_p + 0x20) : character_p);
 728:funsape/globalDefines.hpp **** }
 729:funsape/globalDefines.hpp **** 
 730:funsape/globalDefines.hpp **** char_t inlined toUpperCase(cchar_t character_p)
 731:funsape/globalDefines.hpp **** {
 732:funsape/globalDefines.hpp ****     return ((isAsciiLowerCaseLetter(character_p)) ? (character_p - 0x20) : character_p);
 733:funsape/globalDefines.hpp **** }
 734:funsape/globalDefines.hpp **** 
 735:funsape/globalDefines.hpp **** //     /////////////////////     DATA VALIDITY     //////////////////////     //
 736:funsape/globalDefines.hpp **** bool_t inlined isAsciiLowerCaseLetter(cchar_t character_p)
 737:funsape/globalDefines.hpp **** {
 738:funsape/globalDefines.hpp ****     return ((bool_t)(((character_p >= 'a') && (character_p <= 'z')) ? true : false));
 739:funsape/globalDefines.hpp **** }
 740:funsape/globalDefines.hpp **** 
 741:funsape/globalDefines.hpp **** bool_t inlined isAsciiUpperCaseLetter(cchar_t character_p)
 742:funsape/globalDefines.hpp **** {
 743:funsape/globalDefines.hpp ****     return ((bool_t)(((character_p >= 'A') && (character_p <= 'Z')) ? true : false));
 744:funsape/globalDefines.hpp **** }
 745:funsape/globalDefines.hpp **** 
 746:funsape/globalDefines.hpp **** bool_t inlined isAsciiCommand(cchar_t character_p)
 747:funsape/globalDefines.hpp **** {
 748:funsape/globalDefines.hpp ****     return ((bool_t)((character_p < ' ') ? true : false));
 749:funsape/globalDefines.hpp **** }
 750:funsape/globalDefines.hpp **** 
 751:funsape/globalDefines.hpp **** bool_t inlined isAsciiLetter(cchar_t character_p)
 752:funsape/globalDefines.hpp **** {
 753:funsape/globalDefines.hpp ****     return ((bool_t)((isAsciiLowerCaseLetter(character_p) || (isAsciiUpperCaseLetter(character_p)) 
 754:funsape/globalDefines.hpp **** }
 755:funsape/globalDefines.hpp **** 
 756:funsape/globalDefines.hpp **** bool_t inlined isAsciiNumber(cchar_t character_p)
 757:funsape/globalDefines.hpp **** {
 758:funsape/globalDefines.hpp ****     return ((bool_t)(((character_p >= '0') && (character_p <= '9')) ? true : false));
 759:funsape/globalDefines.hpp **** }
 760:funsape/globalDefines.hpp **** 
 761:funsape/globalDefines.hpp **** bool_t inlined isAsciiSymbol(cchar_t character_p)
 762:funsape/globalDefines.hpp **** {
 763:funsape/globalDefines.hpp ****     return ((bool_t)(((!isAsciiNumber(character_p)) && (!isAsciiCommand(character_p)) &&
 764:funsape/globalDefines.hpp ****                                     (!isAsciiLetter(character_p))) ? true : false));
 765:funsape/globalDefines.hpp **** }
 766:funsape/globalDefines.hpp **** 
 767:funsape/globalDefines.hpp **** //     /////////////////////     SYSTEM ACTIONS    //////////////////////     //
 768:funsape/globalDefines.hpp **** void inlined die(Error errorCode_p)
 769:funsape/globalDefines.hpp **** {
 770:funsape/globalDefines.hpp ****     printf("Failed with error=%u (0x%04x).\r", (cuint16_t)errorCode_p, (cuint16_t)errorCode_p);
 771:funsape/globalDefines.hpp ****     systemHalt();
 772:funsape/globalDefines.hpp **** 
 773:funsape/globalDefines.hpp ****     return;
 774:funsape/globalDefines.hpp **** }
 775:funsape/globalDefines.hpp **** 
 776:funsape/globalDefines.hpp **** void inlined doNop(void)
 777:funsape/globalDefines.hpp **** {
 778:funsape/globalDefines.hpp ****     asm volatile("nop");
 779:funsape/globalDefines.hpp **** 
 780:funsape/globalDefines.hpp ****     return;
 781:funsape/globalDefines.hpp **** }
 782:funsape/globalDefines.hpp **** 
 783:funsape/globalDefines.hpp **** void inlined doNothing(void)
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 15


 784:funsape/globalDefines.hpp **** {
 785:funsape/globalDefines.hpp ****     return;
 786:funsape/globalDefines.hpp **** }
 787:funsape/globalDefines.hpp **** 
 788:funsape/globalDefines.hpp **** void inlined systemHalt(void (*function_p)(void))
 789:funsape/globalDefines.hpp **** {
 790:funsape/globalDefines.hpp ****     if(isPointerValid(function_p)) {
 791:funsape/globalDefines.hpp ****         function_p();
 792:funsape/globalDefines.hpp ****     }
 793:funsape/globalDefines.hpp ****     while(1) {
 794:funsape/globalDefines.hpp ****         doNothing();
 795:funsape/globalDefines.hpp ****     }
 796:funsape/globalDefines.hpp **** 
 797:funsape/globalDefines.hpp ****     return;
 798:funsape/globalDefines.hpp **** }
 799:funsape/globalDefines.hpp **** 
 800:funsape/globalDefines.hpp **** // =============================================================================
 801:funsape/globalDefines.hpp **** // Public functions weakly defined
 802:funsape/globalDefines.hpp **** // =============================================================================
 803:funsape/globalDefines.hpp **** 
 804:funsape/globalDefines.hpp **** #define delayMs(time_p)                 _delay_ms(time_p)
 805:funsape/globalDefines.hpp **** #define delayUs(time_p)                 _delay_us(time_p)
 806:funsape/globalDefines.hpp **** 
 807:funsape/globalDefines.hpp **** weakened uint32_t getTick(void)
 808:funsape/globalDefines.hpp **** {
  17               		.loc 1 808 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 809:funsape/globalDefines.hpp ****     // TODO
 810:funsape/globalDefines.hpp ****     return 0;
  23               		.loc 1 810 5 view .LVU1
 811:funsape/globalDefines.hpp **** }
  24               		.loc 1 811 1 is_stmt 0 view .LVU2
  25 0000 60E0      		ldi r22,0
  26 0002 70E0      		ldi r23,0
  27 0004 CB01      		movw r24,r22
  28               	/* epilogue start */
  29 0006 0895      		ret
  30               		.cfi_endproc
  31               	.LFE32:
  33               		.section	.rodata.main.str1.1,"aMS",@progbits,1
  34               	.LC0:
  35 0000 2043 6C6F 		.string	" Clock Example! "
  35      636B 2045 
  35      7861 6D70 
  35      6C65 2120 
  35      00
  36               	.LC1:
  37 0011 2056 312E 		.string	" V1.0 build 238 "
  37      3020 6275 
  37      696C 6420 
  37      3233 3820 
  37      00
  38               	.LC2:
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 16


  39 0022 2025 3032 		.string	" %02u/%02u/%04u %03u \n"
  39      752F 2530 
  39      3275 2F25 
  39      3034 7520 
  39      2530 3375 
  40               	.LC3:
  41 0039 2020 2020 		.string	"    %02u:%02u:%02u    \n"
  41      2530 3275 
  41      3A25 3032 
  41      753A 2530 
  41      3275 2020 
  42               		.section	.text.main,"ax",@progbits
  43               	.global	main
  45               	main:
  46               	.LFB52:
  47               		.file 2 "main.cpp"
   1:main.cpp      **** //---Definições---//
   2:main.cpp      **** #define F_CPU 16000000UL
   3:main.cpp      **** 
   4:main.cpp      **** //---Includes---//
   5:main.cpp      **** #include "funsape/globalDefines.hpp"
   6:main.cpp      **** #include "funsape/peripheral/int0.hpp"
   7:main.cpp      **** #include "funsape/device/hd44780.hpp"
   8:main.cpp      **** #include "funsape/peripheral/twi.hpp" // para gerenciar o periferico do I2C
   9:main.cpp      **** #include "funsape/device/ds1307.hpp"  // RTC utilizado no projeto.
  10:main.cpp      **** #include "funsape/util/dateTime.hpp"  // gerencia data e hora para a funsape
  11:main.cpp      **** 
  12:main.cpp      **** //---Definições LED---//
  13:main.cpp      **** #define LED_DIR     DDRC
  14:main.cpp      **** #define LED_OUT     PORTC
  15:main.cpp      **** #define LED_BIT     PC0
  16:main.cpp      **** 
  17:main.cpp      **** //---Definições PINOS de dados LCD---//
  18:main.cpp      **** #define LCD_DATA_DIR        DDRB
  19:main.cpp      **** #define LCD_DATA_OUT        PORTB
  20:main.cpp      **** #define LCD_DATA_FIRST      PB0
  21:main.cpp      **** 
  22:main.cpp      **** //---Definições PINOS de controle LCD---//
  23:main.cpp      **** #define LCD_CONTROL_DIR     DDRB
  24:main.cpp      **** #define LCD_CONTROL_OUT     PORTB
  25:main.cpp      **** #define LCD_CONTROL_E       PB4
  26:main.cpp      **** #define LCD_CONTROL_RS      PB5
  27:main.cpp      **** 
  28:main.cpp      **** typedef union {
  29:main.cpp      ****     struct {
  30:main.cpp      ****         bool_t updateDisplay        : 1;
  31:main.cpp      ****         bool_t readRtc              : 1;
  32:main.cpp      ****         uint8_t unusedBits          : 6;
  33:main.cpp      ****     };
  34:main.cpp      ****     uint8_t allFlags;
  35:main.cpp      **** 
  36:main.cpp      **** } systemFlags_t;
  37:main.cpp      **** 
  38:main.cpp      **** //Global variables
  39:main.cpp      **** volatile systemFlags_t systemFlags;
  40:main.cpp      **** 
  41:main.cpp      **** 
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 17


  42:main.cpp      **** int main()
  43:main.cpp      **** {
  48               		.loc 2 43 1 is_stmt 1 view -0
  49               		.cfi_startproc
  50 0000 CDB7      		in r28,__SP_L__
  51 0002 DEB7      		in r29,__SP_H__
  52               		.cfi_def_cfa_register 28
  53 0004 E197      		sbiw r28,49
  54               		.cfi_def_cfa_offset 51
  55 0006 0FB6      		in __tmp_reg__,__SREG__
  56 0008 F894      		cli
  57 000a DEBF      		out __SP_H__,r29
  58 000c 0FBE      		out __SREG__,__tmp_reg__
  59 000e CDBF      		out __SP_L__,r28
  60               	/* prologue: function */
  61               	/* frame size = 49 */
  62               	/* stack size = 49 */
  63               	.L__stack_usage = 49
  44:main.cpp      ****     //Local variables
  45:main.cpp      ****     Hd44780 lcd;
  64               		.loc 2 45 5 view .LVU4
  65               		.loc 2 45 13 is_stmt 0 view .LVU5
  66 0010 CE01      		movw r24,r28
  67 0012 0196      		adiw r24,1
  68 0014 0E94 0000 		call _ZN7Hd44780C1Ev
  69               	.LVL0:
  46:main.cpp      ****     uint8_t hour, minute, second, monthDay, month, weekDay;
  70               		.loc 2 46 5 is_stmt 1 view .LVU6
  47:main.cpp      ****     uint16_t year;
  71               		.loc 2 47 5 view .LVU7
  48:main.cpp      ****     Ds1307 rtc;
  72               		.loc 2 48 5 view .LVU8
  73               		.loc 2 48 12 is_stmt 0 view .LVU9
  74 0018 CE01      		movw r24,r28
  75 001a 4B96      		adiw r24,27
  76 001c 0E94 0000 		call _ZN6Ds1307C1Ev
  77               	.LVL1:
  49:main.cpp      ****     uint8_t aux8;
  78               		.loc 2 49 5 is_stmt 1 view .LVU10
  50:main.cpp      **** 
  51:main.cpp      **** 
  52:main.cpp      **** 
  53:main.cpp      **** 
  54:main.cpp      ****     //Configure LED for test
  55:main.cpp      ****     setBit(LED_DIR, LED_BIT);
  79               		.loc 2 55 5 view .LVU11
  80 0020 87B1      		in r24,0x7
  81 0022 8160      		ori r24,lo8(1)
  82 0024 87B9      		out 0x7,r24
  56:main.cpp      ****     clrBit(LED_OUT, LED_BIT);
  83               		.loc 2 56 5 view .LVU12
  84 0026 88B1      		in r24,0x8
  85 0028 8E7F      		andi r24,lo8(-2)
  86 002a 88B9      		out 0x8,r24
  57:main.cpp      **** 
  58:main.cpp      ****     //Configure LCD
  59:main.cpp      ****     lcd.controlPortSet(&LCD_CONTROL_DIR, LCD_CONTROL_E, LCD_CONTROL_RS);
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 18


  87               		.loc 2 59 5 view .LVU13
  88               		.loc 2 59 23 is_stmt 0 view .LVU14
  89 002c 00E0      		ldi r16,0
  90 002e 25E0      		ldi r18,lo8(5)
  91 0030 44E0      		ldi r20,lo8(4)
  92 0032 64E2      		ldi r22,lo8(36)
  93 0034 70E0      		ldi r23,0
  94 0036 CE01      		movw r24,r28
  95 0038 0196      		adiw r24,1
  96 003a 0E94 0000 		call _ZN7Hd4478014controlPortSetEPVhhhh
  97               	.LVL2:
  60:main.cpp      ****     lcd.dataPortSet(&LCD_DATA_DIR, LCD_DATA_FIRST);
  98               		.loc 2 60 5 is_stmt 1 view .LVU15
  99               		.loc 2 60 20 is_stmt 0 view .LVU16
 100 003e 40E0      		ldi r20,0
 101 0040 64E2      		ldi r22,lo8(36)
 102 0042 70E0      		ldi r23,0
 103 0044 CE01      		movw r24,r28
 104 0046 0196      		adiw r24,1
 105 0048 0E94 0000 		call _ZN7Hd4478011dataPortSetEPVhh
 106               	.LVL3:
  61:main.cpp      ****     lcd.init(Hd44780::Size::LCD_16X2, Hd44780::Font::FONT_5X8, true, false);
 107               		.loc 2 61 5 is_stmt 1 view .LVU17
 108               		.loc 2 61 13 is_stmt 0 view .LVU18
 109 004c 21E0      		ldi r18,lo8(1)
 110 004e 40E0      		ldi r20,0
 111 0050 6CE6      		ldi r22,lo8(108)
 112 0052 CE01      		movw r24,r28
 113 0054 0196      		adiw r24,1
 114 0056 0E94 0000 		call _ZN7Hd447804initENS_4SizeENS_4FontEbb
 115               	.LVL4:
  62:main.cpp      ****     lcd.displayStateSet(Hd44780::DisplayState::CURSOR_OFF);
 116               		.loc 2 62 5 is_stmt 1 view .LVU19
 117               		.loc 2 62 24 is_stmt 0 view .LVU20
 118 005a 61E0      		ldi r22,lo8(1)
 119 005c 70E0      		ldi r23,0
 120 005e CE01      		movw r24,r28
 121 0060 0196      		adiw r24,1
 122 0062 0E94 0000 		call _ZN7Hd4478015displayStateSetENS_12DisplayStateE
 123               	.LVL5:
  63:main.cpp      ****     lcd.stdio();
 124               		.loc 2 63 5 is_stmt 1 view .LVU21
 125               		.loc 2 63 14 is_stmt 0 view .LVU22
 126 0066 CE01      		movw r24,r28
 127 0068 0196      		adiw r24,1
 128 006a 0E94 0000 		call _ZN7Hd447805stdioEv
 129               	.LVL6:
  64:main.cpp      **** 
  65:main.cpp      ****     //Show splash screen
  66:main.cpp      ****     printf(" Clock Example! \n");
 130               		.loc 2 66 5 is_stmt 1 view .LVU23
 131               		.loc 2 66 11 is_stmt 0 view .LVU24
 132 006e 80E0      		ldi r24,lo8(.LC0)
 133 0070 90E0      		ldi r25,hi8(.LC0)
 134 0072 0E94 0000 		call puts
 135               	.LVL7:
  67:main.cpp      ****     printf(" V1.0 build 238 \n");
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 19


 136               		.loc 2 67 5 is_stmt 1 view .LVU25
 137               		.loc 2 67 11 is_stmt 0 view .LVU26
 138 0076 80E0      		ldi r24,lo8(.LC1)
 139 0078 90E0      		ldi r25,hi8(.LC1)
 140 007a 0E94 0000 		call puts
 141               	.LVL8:
  68:main.cpp      ****     delayMs(2000);
 142               		.loc 2 68 5 is_stmt 1 view .LVU27
 143               	.LBB6:
 144               	.LBI6:
 145               		.file 3 "e:\\vscode-avr-win\\toolchains\\avr-gcc\\avr\\include\\util\\delay.h"
   1:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    All rights reserved.
   5:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
   6:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Redistribution and use in source and binary forms, with or without
   7:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    modification, are permitted provided that the following conditions are met:
   8:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
   9:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    * Redistributions of source code must retain the above copyright
  10:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer.
  11:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  12:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      notice, this list of conditions and the following disclaimer in
  14:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      the documentation and/or other materials provided with the
  15:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      distribution.
  16:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  17:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    * Neither the name of the copyright holders nor the names of
  18:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      contributors may be used to endorse or promote products derived
  19:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****      from this software without specific prior written permission.
  20:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  21:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  33:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /* $Id$ */
  34:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  35:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef _UTIL_DELAY_H_
  36:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #define _UTIL_DELAY_H_ 1
  37:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  38:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef __DOXYGEN__
  39:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #  endif
  42:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #endif  /* __DOXYGEN__ */
  43:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  44:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #include <inttypes.h>
  45:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #include <util/delay_basic.h>
  46:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #include <math.h>
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 20


  47:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  48:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /** \file */
  49:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \code
  51:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     //#define F_CPU 14.7456E6
  53:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     #include <util/delay.h>
  54:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \endcode
  55:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  56:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \note As an alternative method, it is possible to pass the
  57:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     used.
  60:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  61:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     The functions in this header file are wrappers around the basic
  62:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     convenience functions where actual time values can be specified
  64:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     that compile-time constant expressions will be eliminated by
  66:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     compiler optimization so floating-point expressions can be used
  67:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     frequency passed by the macro F_CPU.
  69:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  70:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \note In order for these functions to work as intended, compiler
  71:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     <em>must</em> be an expression that is a known constant at
  73:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     delay will be much longer (and basically unpredictable), and
  75:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     applications that otherwise do not use floating-point calculations
  76:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     will experience severe code bloat by the floating-point library
  77:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     routines linked into the application.
  78:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  79:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     The functions available allow the specification of microsecond, and
  80:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     millisecond delays directly, using the application-supplied macro
  81:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  83:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** */
  84:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  85:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #if !defined(__DOXYGEN__)
  86:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
  89:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  90:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef F_CPU
  91:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /* prevent compiler error by supplying a default */
  92:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /** \ingroup util_delay
  94:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \def F_CPU
  95:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     \brief CPU frequency in Hz
  96:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
  97:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     the delay macros.  This macro is normally supplied by the
  99:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     environment (e.g. from within a project header, or the project's
 100:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     fallback if no such user-provided definition could be found.
 102:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 103:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     In terms of the delay functions, the CPU frequency can be given as
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 21


 104:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****     integer value.
 107:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****  */
 108:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** # define F_CPU 1000000UL
 109:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 110:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 111:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #ifndef __OPTIMIZE__
 112:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 114:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 115:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   __STDC_HOSTED__
 118:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #  include <math.h>
 119:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #endif
 120:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 121:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** /**
 122:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    \ingroup util_delay
 123:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 124:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 126:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    The macro F_CPU is supposed to be defined to a
 127:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 129:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 131:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    When the user request delay which exceed the maximum possible one,
 132:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    user will not be informed about decreased resolution.
 136:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 137:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    values greater than the maximal possible delay, overflows results in
 140:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    no delay i.e., 0ms.
 141:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 142:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    microseconds of delay.
 146:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 147:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    respectively.
 151:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 152:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    \note
 153:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 154:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    The implementation of _delay_ms() based on
 155:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    implementations.  In order to get functionality backward compatible
 157:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    must be defined before including this header file. Also, the
 159:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    backward compatible algorithm will be chosen if the code is
 160:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 22


 161:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****    not available to the compiler then.
 163:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 164:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****  */
 165:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** void
 166:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** _delay_ms(double __ms)
 146               		.loc 3 166 1 view .LVU28
 147               	.LBB7:
 167:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** {
 168:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	double __tmp ;
 148               		.loc 3 168 2 view .LVU29
 169:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h ****   __STDC_HOSTED__
 172:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	uint32_t __ticks_dc;
 149               		.loc 3 172 2 view .LVU30
 173:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150               		.loc 3 173 2 view .LVU31
 174:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151               		.loc 3 174 2 view .LVU32
 175:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 176:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 179:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 182:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	#else
 183:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 		//round up by default
 184:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 152               		.loc 3 184 3 view .LVU33
 185:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	#endif
 186:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 
 187:e:\vscode-avr-win\toolchains\avr-gcc\avr\include\util\delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 153               		.loc 3 187 2 view .LVU34
 154               		.loc 3 187 28 is_stmt 0 view .LVU35
 155 007e 2FEF      		ldi r18,lo8(6399999)
 156 0080 87EA      		ldi r24,hi8(6399999)
 157 0082 91E6      		ldi r25,hlo8(6399999)
 158 0084 2150      	1:	subi r18,1
 159 0086 8040      		sbci r24,0
 160 0088 9040      		sbci r25,0
 161 008a 01F4      		brne 1b
 162 008c 00C0      		rjmp .
 163 008e 0000      		nop
 164               	.LVL9:
 165               		.loc 3 187 28 view .LVU36
 166               	.LBE7:
 167               	.LBE6:
  69:main.cpp      ****     lcd.clearScreen();
 168               		.loc 2 69 5 is_stmt 1 view .LVU37
 169               		.loc 2 69 20 is_stmt 0 view .LVU38
 170 0090 CE01      		movw r24,r28
 171 0092 0196      		adiw r24,1
 172 0094 0E94 0000 		call _ZN7Hd4478011clearScreenEv
 173               	.LVL10:
  70:main.cpp      ****     systemFlags.updateDisplay = true;
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 23


 174               		.loc 2 70 5 is_stmt 1 view .LVU39
 175               		.loc 2 70 31 is_stmt 0 view .LVU40
 176 0098 8091 0000 		lds r24,systemFlags
 177 009c 8160      		ori r24,lo8(1<<0)
 178 009e 8093 0000 		sts systemFlags,r24
  71:main.cpp      **** 
  72:main.cpp      ****     //Configure INT0
  73:main.cpp      ****     int0.init(Int0::SenseMode::FALLING_EDGE);
 179               		.loc 2 73 5 is_stmt 1 view .LVU41
 180               		.loc 2 73 14 is_stmt 0 view .LVU42
 181 00a2 62E0      		ldi r22,lo8(2)
 182 00a4 80E0      		ldi r24,lo8(int0)
 183 00a6 90E0      		ldi r25,hi8(int0)
 184 00a8 0E94 0000 		call _ZN4Int04initENS_9SenseModeE
 185               	.LVL11:
  74:main.cpp      ****     int0.activateInterrupt();
 186               		.loc 2 74 5 is_stmt 1 view .LVU43
 187               	.LBB8:
 188               	.LBI8:
 189               		.file 4 "funsape/peripheral/int0.hpp"
   1:funsape/peripheral/int0.hpp **** //!
   2:funsape/peripheral/int0.hpp **** //! \file           int0.hpp
   3:funsape/peripheral/int0.hpp **** //! \brief          External Interrupt INT0 peripheral control for the FunSAPE
   4:funsape/peripheral/int0.hpp **** //!                     AVR8 Library
   5:funsape/peripheral/int0.hpp **** //! \author         Leandro Schwarz (bladabuska+funsapeavr8lib@gmail.com)
   6:funsape/peripheral/int0.hpp **** //! \date           2023-05-07
   7:funsape/peripheral/int0.hpp **** //! \version        23.04
   8:funsape/peripheral/int0.hpp **** //! \copyright      license
   9:funsape/peripheral/int0.hpp **** //! \details        External Interrupt INT0 peripheral control for the FunSAPE
  10:funsape/peripheral/int0.hpp **** //!                     AVR8 Library
  11:funsape/peripheral/int0.hpp **** //! \todo           Todo list
  12:funsape/peripheral/int0.hpp **** //!
  13:funsape/peripheral/int0.hpp **** 
  14:funsape/peripheral/int0.hpp **** // =============================================================================
  15:funsape/peripheral/int0.hpp **** // Include guard (START)
  16:funsape/peripheral/int0.hpp **** // =============================================================================
  17:funsape/peripheral/int0.hpp **** 
  18:funsape/peripheral/int0.hpp **** #ifndef __INT0_HPP
  19:funsape/peripheral/int0.hpp **** #define __INT0_HPP                      2304
  20:funsape/peripheral/int0.hpp **** 
  21:funsape/peripheral/int0.hpp **** // =============================================================================
  22:funsape/peripheral/int0.hpp **** // Dependencies
  23:funsape/peripheral/int0.hpp **** // =============================================================================
  24:funsape/peripheral/int0.hpp **** 
  25:funsape/peripheral/int0.hpp **** //     /////////////////     GLOBAL DEFINITIONS FILE    /////////////////     //
  26:funsape/peripheral/int0.hpp **** #include "../globalDefines.hpp"
  27:funsape/peripheral/int0.hpp **** #if !defined(__GLOBAL_DEFINES_HPP)
  28:funsape/peripheral/int0.hpp **** #    error "Global definitions file is corrupted!"
  29:funsape/peripheral/int0.hpp **** #elif __GLOBAL_DEFINES_HPP != __INT0_HPP
  30:funsape/peripheral/int0.hpp **** #    error "Version mismatch between file header and global definitions file!"
  31:funsape/peripheral/int0.hpp **** #endif
  32:funsape/peripheral/int0.hpp **** 
  33:funsape/peripheral/int0.hpp **** //     //////////////////     LIBRARY DEPENDENCIES     //////////////////     //
  34:funsape/peripheral/int0.hpp **** #include "../util/debug.hpp"
  35:funsape/peripheral/int0.hpp **** #if !defined(__DEBUG_HPP)
  36:funsape/peripheral/int0.hpp **** #   error "Header file (debug.hpp) is corrupted!"
  37:funsape/peripheral/int0.hpp **** #elif __DEBUG_HPP != __INT0_HPP
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 24


  38:funsape/peripheral/int0.hpp **** #   error "Version mismatch between header file and library dependency (debug.hpp)!"
  39:funsape/peripheral/int0.hpp **** #endif
  40:funsape/peripheral/int0.hpp **** 
  41:funsape/peripheral/int0.hpp **** // =============================================================================
  42:funsape/peripheral/int0.hpp **** // Undefining previous definitions
  43:funsape/peripheral/int0.hpp **** // =============================================================================
  44:funsape/peripheral/int0.hpp **** 
  45:funsape/peripheral/int0.hpp **** // NONE
  46:funsape/peripheral/int0.hpp **** 
  47:funsape/peripheral/int0.hpp **** // =============================================================================
  48:funsape/peripheral/int0.hpp **** // Constant definitions
  49:funsape/peripheral/int0.hpp **** // =============================================================================
  50:funsape/peripheral/int0.hpp **** 
  51:funsape/peripheral/int0.hpp **** // NONE
  52:funsape/peripheral/int0.hpp **** 
  53:funsape/peripheral/int0.hpp **** // =============================================================================
  54:funsape/peripheral/int0.hpp **** // New data types
  55:funsape/peripheral/int0.hpp **** // =============================================================================
  56:funsape/peripheral/int0.hpp **** 
  57:funsape/peripheral/int0.hpp **** // NONE
  58:funsape/peripheral/int0.hpp **** 
  59:funsape/peripheral/int0.hpp **** // =============================================================================
  60:funsape/peripheral/int0.hpp **** // Interrupt callback functions
  61:funsape/peripheral/int0.hpp **** // =============================================================================
  62:funsape/peripheral/int0.hpp **** 
  63:funsape/peripheral/int0.hpp **** //!
  64:funsape/peripheral/int0.hpp **** //! \brief          INT0 interrupt callback function
  65:funsape/peripheral/int0.hpp **** //! \details        This function is called when the INT0 interrupt is treated.
  66:funsape/peripheral/int0.hpp **** //!                     It is a weak function that can be overwritten by user
  67:funsape/peripheral/int0.hpp **** //!                     code.
  68:funsape/peripheral/int0.hpp **** //!
  69:funsape/peripheral/int0.hpp **** void int0InterruptCallback();
  70:funsape/peripheral/int0.hpp **** 
  71:funsape/peripheral/int0.hpp **** // =============================================================================
  72:funsape/peripheral/int0.hpp **** // Int0 Class
  73:funsape/peripheral/int0.hpp **** // =============================================================================
  74:funsape/peripheral/int0.hpp **** 
  75:funsape/peripheral/int0.hpp **** //!
  76:funsape/peripheral/int0.hpp **** //! \brief          Int0 class
  77:funsape/peripheral/int0.hpp **** //! \details        Int0 class
  78:funsape/peripheral/int0.hpp **** //!
  79:funsape/peripheral/int0.hpp **** class Int0
  80:funsape/peripheral/int0.hpp **** {
  81:funsape/peripheral/int0.hpp ****     // -------------------------------------------------------------------------
  82:funsape/peripheral/int0.hpp ****     // New data types ----------------------------------------------------------
  83:funsape/peripheral/int0.hpp **** public:
  84:funsape/peripheral/int0.hpp **** 
  85:funsape/peripheral/int0.hpp ****     //     /////////////////     INT0 Trigger Sense     /////////////////     //
  86:funsape/peripheral/int0.hpp ****     //!
  87:funsape/peripheral/int0.hpp ****     //! \brief      Sense Trigger enumeration
  88:funsape/peripheral/int0.hpp ****     //! \details    Sense Trigger events associated with INT0.
  89:funsape/peripheral/int0.hpp ****     //! \warning    The value associate with the symbolic names may change
  90:funsape/peripheral/int0.hpp ****     //!                 between builds and might not reflect the register/bits
  91:funsape/peripheral/int0.hpp ****     //!                 real values. In order to ensure compatibility between
  92:funsape/peripheral/int0.hpp ****     //!                 builds, always refer to the SYMBOLIC NAME, instead of
  93:funsape/peripheral/int0.hpp ****     //!                 the VALUE.
  94:funsape/peripheral/int0.hpp ****     //!
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 25


  95:funsape/peripheral/int0.hpp ****     enum class SenseMode : uint8_t {
  96:funsape/peripheral/int0.hpp ****         LOW_LEVEL           = 0,    //!< Trigger interrupt continuously while pin is in logic low l
  97:funsape/peripheral/int0.hpp ****         BOTH_EDGES          = 1,    //!< Trigger interrupt at both edges
  98:funsape/peripheral/int0.hpp ****         FALLING_EDGE        = 2,    //!< Trigger interrupt at falling edge
  99:funsape/peripheral/int0.hpp ****         RISING_EDGE         = 3,    //!< Trigger interrupt rising edge
 100:funsape/peripheral/int0.hpp ****     };
 101:funsape/peripheral/int0.hpp **** 
 102:funsape/peripheral/int0.hpp ****     // -------------------------------------------------------------------------
 103:funsape/peripheral/int0.hpp ****     // Constructors ------------------------------------------------------------
 104:funsape/peripheral/int0.hpp **** public:
 105:funsape/peripheral/int0.hpp **** 
 106:funsape/peripheral/int0.hpp ****     //!
 107:funsape/peripheral/int0.hpp ****     //! \brief      Int0 class constructor
 108:funsape/peripheral/int0.hpp ****     //! \details    Creates an Int0 object
 109:funsape/peripheral/int0.hpp ****     //!
 110:funsape/peripheral/int0.hpp ****     Int0(
 111:funsape/peripheral/int0.hpp ****             void
 112:funsape/peripheral/int0.hpp ****     );
 113:funsape/peripheral/int0.hpp **** 
 114:funsape/peripheral/int0.hpp ****     //!
 115:funsape/peripheral/int0.hpp ****     //! \brief      Int0 class destructor
 116:funsape/peripheral/int0.hpp ****     //! \details    Destroys an Int0 object
 117:funsape/peripheral/int0.hpp ****     //!
 118:funsape/peripheral/int0.hpp ****     ~Int0(
 119:funsape/peripheral/int0.hpp ****             void
 120:funsape/peripheral/int0.hpp ****     );
 121:funsape/peripheral/int0.hpp **** 
 122:funsape/peripheral/int0.hpp ****     // -------------------------------------------------------------------------
 123:funsape/peripheral/int0.hpp ****     // Methods -----------------------------------------------------------------
 124:funsape/peripheral/int0.hpp **** public:
 125:funsape/peripheral/int0.hpp ****     //     ///////////////////     INITIALIZATION    ////////////////////     //
 126:funsape/peripheral/int0.hpp **** 
 127:funsape/peripheral/int0.hpp ****     //!
 128:funsape/peripheral/int0.hpp ****     //! \brief      Initializes the INT0 module
 129:funsape/peripheral/int0.hpp ****     //! \details    Initializes the INT0 module.
 130:funsape/peripheral/int0.hpp ****     //! \param      senseMode_p         Trigger sense mode
 131:funsape/peripheral/int0.hpp ****     //! \return     bool_t              True on success / False on failure
 132:funsape/peripheral/int0.hpp ****     //!
 133:funsape/peripheral/int0.hpp ****     bool_t init(
 134:funsape/peripheral/int0.hpp ****             SenseMode senseMode_p
 135:funsape/peripheral/int0.hpp ****     );
 136:funsape/peripheral/int0.hpp **** 
 137:funsape/peripheral/int0.hpp ****     //!
 138:funsape/peripheral/int0.hpp ****     //! \brief      Configures the trigger sense mode
 139:funsape/peripheral/int0.hpp ****     //! \details    Configures the trigger sense mode.
 140:funsape/peripheral/int0.hpp ****     //! \param      senseMode_p         Trigger sense mode
 141:funsape/peripheral/int0.hpp ****     //! \return     bool_t              True on success / False on failure
 142:funsape/peripheral/int0.hpp ****     //!
 143:funsape/peripheral/int0.hpp ****     bool_t setSenseMode(
 144:funsape/peripheral/int0.hpp ****             SenseMode senseMode_p
 145:funsape/peripheral/int0.hpp ****     );
 146:funsape/peripheral/int0.hpp **** 
 147:funsape/peripheral/int0.hpp ****     //     /////////////////     CONTROL AND STATUS    //////////////////     //
 148:funsape/peripheral/int0.hpp **** 
 149:funsape/peripheral/int0.hpp ****     //!
 150:funsape/peripheral/int0.hpp ****     //! \brief      Returns the last error
 151:funsape/peripheral/int0.hpp ****     //! \details    Returns the last error.
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 26


 152:funsape/peripheral/int0.hpp ****     //! \return     Error               Error status of the last operation
 153:funsape/peripheral/int0.hpp ****     //!
 154:funsape/peripheral/int0.hpp ****     Error           getLastError(
 155:funsape/peripheral/int0.hpp ****             void
 156:funsape/peripheral/int0.hpp ****     );
 157:funsape/peripheral/int0.hpp **** 
 158:funsape/peripheral/int0.hpp ****     //     //////////////////////    INTERRUPT     //////////////////////     //
 159:funsape/peripheral/int0.hpp **** 
 160:funsape/peripheral/int0.hpp ****     //!
 161:funsape/peripheral/int0.hpp ****     //! \brief      Activates interrupt
 162:funsape/peripheral/int0.hpp ****     //! \details    Activates interrupt.
 163:funsape/peripheral/int0.hpp ****     //!
 164:funsape/peripheral/int0.hpp ****     void inlined activateInterrupt(
 165:funsape/peripheral/int0.hpp ****             void
 166:funsape/peripheral/int0.hpp ****     );
 167:funsape/peripheral/int0.hpp **** 
 168:funsape/peripheral/int0.hpp ****     //!
 169:funsape/peripheral/int0.hpp ****     //! \brief      Clears interrupt flag
 170:funsape/peripheral/int0.hpp ****     //! \details    Clears interrupt flag.
 171:funsape/peripheral/int0.hpp ****     //!
 172:funsape/peripheral/int0.hpp ****     void inlined clearInterruptRequest(
 173:funsape/peripheral/int0.hpp ****             void
 174:funsape/peripheral/int0.hpp ****     );
 175:funsape/peripheral/int0.hpp **** 
 176:funsape/peripheral/int0.hpp ****     //!
 177:funsape/peripheral/int0.hpp ****     //! \brief      Deactivates interrupt
 178:funsape/peripheral/int0.hpp ****     //! \details    Deactivates interrupt.
 179:funsape/peripheral/int0.hpp ****     //!
 180:funsape/peripheral/int0.hpp ****     void inlined deactivateInterrupt(
 181:funsape/peripheral/int0.hpp ****             void
 182:funsape/peripheral/int0.hpp ****     );
 183:funsape/peripheral/int0.hpp **** 
 184:funsape/peripheral/int0.hpp ****     // -------------------------------------------------------------------------
 185:funsape/peripheral/int0.hpp ****     // Properties --------------------------------------------------------------
 186:funsape/peripheral/int0.hpp **** private:
 187:funsape/peripheral/int0.hpp ****     bool_t          _isInitialized      : 1;
 188:funsape/peripheral/int0.hpp ****     SenseMode       _senseMode;
 189:funsape/peripheral/int0.hpp ****     Error           _lastError;
 190:funsape/peripheral/int0.hpp **** }; // class Int0
 191:funsape/peripheral/int0.hpp **** 
 192:funsape/peripheral/int0.hpp **** // =============================================================================
 193:funsape/peripheral/int0.hpp **** // Inlined class functions
 194:funsape/peripheral/int0.hpp **** // =============================================================================
 195:funsape/peripheral/int0.hpp **** 
 196:funsape/peripheral/int0.hpp **** //     ////////////////////////    INTERRUPT     ////////////////////////     //
 197:funsape/peripheral/int0.hpp **** void inlined Int0::activateInterrupt(void)
 190               		.loc 4 197 14 view .LVU44
 191               	.LBB9:
 198:funsape/peripheral/int0.hpp **** {
 199:funsape/peripheral/int0.hpp ****     setBit(EIMSK, INT0);
 192               		.loc 4 199 5 view .LVU45
 193 00ac 8DB3      		in r24,0x1d
 194 00ae 8160      		ori r24,lo8(1)
 195 00b0 8DBB      		out 0x1d,r24
 200:funsape/peripheral/int0.hpp ****     return;
 196               		.loc 4 200 5 view .LVU46
 197               	.LBE9:
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 27


 198               	.LBE8:
  75:main.cpp      ****     setBit(PORTD, PD2);
 199               		.loc 2 75 5 view .LVU47
 200 00b2 8BB1      		in r24,0xb
 201 00b4 8460      		ori r24,lo8(4)
 202 00b6 8BB9      		out 0xb,r24
  76:main.cpp      **** 
  77:main.cpp      ****     //Enable global interrupts
  78:main.cpp      ****     sei();
 203               		.loc 2 78 5 view .LVU48
 204               	/* #APP */
 205               	 ;  78 "main.cpp" 1
 206 00b8 7894      		sei
 207               	 ;  0 "" 2
  79:main.cpp      **** 
  80:main.cpp      ****     //Configure I2C
  81:main.cpp      ****     twi.init();
 208               		.loc 2 81 5 view .LVU49
 209               		.loc 2 81 13 is_stmt 0 view .LVU50
 210               	/* #NOAPP */
 211 00ba 24E1      		ldi r18,lo8(20)
 212 00bc 40E1      		ldi r20,lo8(16)
 213 00be 57E2      		ldi r21,lo8(39)
 214 00c0 60E0      		ldi r22,0
 215 00c2 70E0      		ldi r23,0
 216 00c4 80E0      		ldi r24,lo8(twi)
 217 00c6 90E0      		ldi r25,hi8(twi)
 218 00c8 0E94 0000 		call _ZN3Twi4initEmh
 219               	.LVL12:
  82:main.cpp      **** 
  83:main.cpp      ****     // RTC só pode ser configurado depois da interrupção global.
  84:main.cpp      ****     //Connfigure RTC
  85:main.cpp      ****     rtc.init(&twi);
 220               		.loc 2 85 5 is_stmt 1 view .LVU51
 221               		.loc 2 85 13 is_stmt 0 view .LVU52
 222 00cc 60E0      		ldi r22,lo8(twi)
 223 00ce 70E0      		ldi r23,hi8(twi)
 224 00d0 CE01      		movw r24,r28
 225 00d2 4B96      		adiw r24,27
 226 00d4 0E94 0000 		call _ZN6Ds13074initEP3Bus
 227               	.LVL13:
  86:main.cpp      ****     rtc.getRamData(27, &aux8, 1);
 228               		.loc 2 86 5 is_stmt 1 view .LVU53
 229               		.loc 2 86 19 is_stmt 0 view .LVU54
 230 00d8 21E0      		ldi r18,lo8(1)
 231 00da AE01      		movw r20,r28
 232 00dc 4F5C      		subi r20,-49
 233 00de 5F4F      		sbci r21,-1
 234 00e0 6BE1      		ldi r22,lo8(27)
 235 00e2 CE01      		movw r24,r28
 236 00e4 4B96      		adiw r24,27
 237 00e6 0E94 0000 		call _ZN6Ds130710getRamDataEhPhh
 238               	.LVL14:
  87:main.cpp      ****     if(aux8 != 3){
 239               		.loc 2 87 5 is_stmt 1 view .LVU55
 240               		.loc 2 87 13 is_stmt 0 view .LVU56
 241 00ea 89A9      		ldd r24,Y+49
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 28


 242               		.loc 2 87 5 view .LVU57
 243 00ec 8330      		cpi r24,lo8(3)
 244 00ee 01F0      		breq .+2
 245 00f0 00C0      		rjmp .L7
 246               	.L3:
  88:main.cpp      **** 
  89:main.cpp      ****         rtc.setDate(2023, 5, 30);
  90:main.cpp      ****         rtc.setTime(9, 5, 00);
  91:main.cpp      ****         aux8 = 3;
  92:main.cpp      ****         rtc.setRamData(27, &aux8, 1);
  93:main.cpp      **** 
  94:main.cpp      ****     }
  95:main.cpp      ****     rtc.setDate(2023, 5, 30);
 247               		.loc 2 95 5 is_stmt 1 view .LVU58
 248               		.loc 2 95 16 is_stmt 0 view .LVU59
 249 00f2 2EE1      		ldi r18,lo8(30)
 250 00f4 45E0      		ldi r20,lo8(5)
 251 00f6 67EE      		ldi r22,lo8(-25)
 252 00f8 77E0      		ldi r23,lo8(7)
 253 00fa CE01      		movw r24,r28
 254 00fc 4B96      		adiw r24,27
 255 00fe 0E94 0000 		call _ZN6Ds13077setDateEjhh
 256               	.LVL15:
  96:main.cpp      ****     rtc.setTime(9, 5, 00);
 257               		.loc 2 96 5 is_stmt 1 view .LVU60
 258               		.loc 2 96 16 is_stmt 0 view .LVU61
 259 0102 E12C      		mov r14,__zero_reg__
 260 0104 00E0      		ldi r16,0
 261 0106 20E0      		ldi r18,0
 262 0108 45E0      		ldi r20,lo8(5)
 263 010a 69E0      		ldi r22,lo8(9)
 264 010c CE01      		movw r24,r28
 265 010e 4B96      		adiw r24,27
 266 0110 0E94 0000 		call _ZN6Ds13077setTimeEhhhN8DateTime10TimeFormatENS0_8AmPmFlagE
 267               	.LVL16:
  97:main.cpp      ****     rtc.setSquareWaveGenerator(Ds1307::SquareWave::CLOCK_1_HZ);
 268               		.loc 2 97 5 is_stmt 1 view .LVU62
 269               		.loc 2 97 31 is_stmt 0 view .LVU63
 270 0114 62E0      		ldi r22,lo8(2)
 271 0116 70E0      		ldi r23,0
 272 0118 CE01      		movw r24,r28
 273 011a 4B96      		adiw r24,27
 274 011c 0E94 0000 		call _ZN6Ds130722setSquareWaveGeneratorENS_10SquareWaveE
 275               	.LVL17:
  98:main.cpp      ****     rtc.clockStart();
 276               		.loc 2 98 5 is_stmt 1 view .LVU64
 277               		.loc 2 98 19 is_stmt 0 view .LVU65
 278 0120 CE01      		movw r24,r28
 279 0122 4B96      		adiw r24,27
 280 0124 0E94 0000 		call _ZN6Ds130710clockStartEv
 281               	.LVL18:
 282               	.L5:
  99:main.cpp      **** 
 100:main.cpp      **** 
 101:main.cpp      ****     while(1) {
 283               		.loc 2 101 5 is_stmt 1 view .LVU66
 102:main.cpp      **** 
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 29


 103:main.cpp      ****         //Event machine core
 104:main.cpp      ****         if(systemFlags.updateDisplay) {
 284               		.loc 2 104 9 view .LVU67
 285               		.loc 2 104 24 is_stmt 0 view .LVU68
 286 0128 8091 0000 		lds r24,systemFlags
 287               		.loc 2 104 9 view .LVU69
 288 012c 80FD      		sbrc r24,0
 289 012e 00C0      		rjmp .L8
 290               	.L4:
 105:main.cpp      ****             //update display
 106:main.cpp      ****             lcd.cursorHome();
 107:main.cpp      ****             lcd.stdio();
 108:main.cpp      ****             printf(" %02u/%02u/%04u %03u \n", monthDay, month, year, weekDay);
 109:main.cpp      ****             printf("    %02u:%02u:%02u    \n", hour, minute, second);
 110:main.cpp      ****             //Clear system flag
 111:main.cpp      ****             systemFlags.updateDisplay = false;
 112:main.cpp      ****         }
 113:main.cpp      ****         if(systemFlags.readRtc) {
 291               		.loc 2 113 9 is_stmt 1 view .LVU70
 292               		.loc 2 113 24 is_stmt 0 view .LVU71
 293 0130 8091 0000 		lds r24,systemFlags
 294               		.loc 2 113 9 view .LVU72
 295 0134 81FF      		sbrs r24,1
 296 0136 00C0      		rjmp .L5
 114:main.cpp      **** 
 115:main.cpp      ****             //Reads RTC
 116:main.cpp      ****             rtc.getDate(&year, &month, &monthDay, &weekDay);
 297               		.loc 2 116 13 is_stmt 1 view .LVU73
 298               		.loc 2 116 24 is_stmt 0 view .LVU74
 299 0138 8E01      		movw r16,r28
 300 013a 085E      		subi r16,-24
 301 013c 1F4F      		sbci r17,-1
 302 013e 9E01      		movw r18,r28
 303 0140 2A5E      		subi r18,-22
 304 0142 3F4F      		sbci r19,-1
 305 0144 AE01      		movw r20,r28
 306 0146 495E      		subi r20,-23
 307 0148 5F4F      		sbci r21,-1
 308 014a BE01      		movw r22,r28
 309 014c 675E      		subi r22,-25
 310 014e 7F4F      		sbci r23,-1
 311 0150 CE01      		movw r24,r28
 312 0152 4B96      		adiw r24,27
 313 0154 0E94 0000 		call _ZN6Ds13077getDateEPjPhS1_S1_
 314               	.LVL19:
 117:main.cpp      ****             rtc.getTime(&hour, &minute, &second, DateTime::TimeFormat::FORMAT_24_HOURS);
 315               		.loc 2 117 13 is_stmt 1 view .LVU75
 316               		.loc 2 117 24 is_stmt 0 view .LVU76
 317 0158 E12C      		mov r14,__zero_reg__
 318 015a F12C      		mov r15,__zero_reg__
 319 015c 00E0      		ldi r16,0
 320 015e 9E01      		movw r18,r28
 321 0160 2B5E      		subi r18,-21
 322 0162 3F4F      		sbci r19,-1
 323 0164 AE01      		movw r20,r28
 324 0166 4C5E      		subi r20,-20
 325 0168 5F4F      		sbci r21,-1
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 30


 326 016a BE01      		movw r22,r28
 327 016c 6D5E      		subi r22,-19
 328 016e 7F4F      		sbci r23,-1
 329 0170 CE01      		movw r24,r28
 330 0172 4B96      		adiw r24,27
 331 0174 0E94 0000 		call _ZN6Ds13077getTimeEPhS0_S0_N8DateTime10TimeFormatEPNS1_8AmPmFlagE
 332               	.LVL20:
 118:main.cpp      ****             //Atualiza o display
 119:main.cpp      ****             systemFlags.updateDisplay = true;
 333               		.loc 2 119 13 is_stmt 1 view .LVU77
 334               		.loc 2 119 39 is_stmt 0 view .LVU78
 335 0178 8091 0000 		lds r24,systemFlags
 336 017c 8160      		ori r24,lo8(1<<0)
 337 017e 8093 0000 		sts systemFlags,r24
 120:main.cpp      ****             //Clear flag
 121:main.cpp      ****             systemFlags.readRtc = false;
 338               		.loc 2 121 13 is_stmt 1 view .LVU79
 339               		.loc 2 121 33 is_stmt 0 view .LVU80
 340 0182 8091 0000 		lds r24,systemFlags
 341 0186 8D7F      		andi r24,lo8(~(1<<1))
 342 0188 8093 0000 		sts systemFlags,r24
 343 018c 00C0      		rjmp .L5
 344               	.L7:
  89:main.cpp      ****         rtc.setTime(9, 5, 00);
 345               		.loc 2 89 9 is_stmt 1 view .LVU81
  89:main.cpp      ****         rtc.setTime(9, 5, 00);
 346               		.loc 2 89 20 is_stmt 0 view .LVU82
 347 018e 2EE1      		ldi r18,lo8(30)
 348 0190 45E0      		ldi r20,lo8(5)
 349 0192 67EE      		ldi r22,lo8(-25)
 350 0194 77E0      		ldi r23,lo8(7)
 351 0196 CE01      		movw r24,r28
 352 0198 4B96      		adiw r24,27
 353 019a 0E94 0000 		call _ZN6Ds13077setDateEjhh
 354               	.LVL21:
  90:main.cpp      ****         aux8 = 3;
 355               		.loc 2 90 9 is_stmt 1 view .LVU83
  90:main.cpp      ****         aux8 = 3;
 356               		.loc 2 90 20 is_stmt 0 view .LVU84
 357 019e E12C      		mov r14,__zero_reg__
 358 01a0 20E0      		ldi r18,0
 359 01a2 45E0      		ldi r20,lo8(5)
 360 01a4 69E0      		ldi r22,lo8(9)
 361 01a6 CE01      		movw r24,r28
 362 01a8 4B96      		adiw r24,27
 363 01aa 0E94 0000 		call _ZN6Ds13077setTimeEhhhN8DateTime10TimeFormatENS0_8AmPmFlagE
 364               	.LVL22:
  91:main.cpp      ****         rtc.setRamData(27, &aux8, 1);
 365               		.loc 2 91 9 is_stmt 1 view .LVU85
  91:main.cpp      ****         rtc.setRamData(27, &aux8, 1);
 366               		.loc 2 91 14 is_stmt 0 view .LVU86
 367 01ae 83E0      		ldi r24,lo8(3)
 368 01b0 89AB      		std Y+49,r24
  92:main.cpp      **** 
 369               		.loc 2 92 9 is_stmt 1 view .LVU87
  92:main.cpp      **** 
 370               		.loc 2 92 23 is_stmt 0 view .LVU88
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 31


 371 01b2 21E0      		ldi r18,lo8(1)
 372 01b4 AE01      		movw r20,r28
 373 01b6 4F5C      		subi r20,-49
 374 01b8 5F4F      		sbci r21,-1
 375 01ba 6BE1      		ldi r22,lo8(27)
 376 01bc CE01      		movw r24,r28
 377 01be 4B96      		adiw r24,27
 378 01c0 0E94 0000 		call _ZN6Ds130710setRamDataEhPhh
 379               	.LVL23:
 380 01c4 00C0      		rjmp .L3
 381               	.L8:
 106:main.cpp      ****             lcd.stdio();
 382               		.loc 2 106 13 is_stmt 1 view .LVU89
 106:main.cpp      ****             lcd.stdio();
 383               		.loc 2 106 27 is_stmt 0 view .LVU90
 384 01c6 CE01      		movw r24,r28
 385 01c8 0196      		adiw r24,1
 386 01ca 0E94 0000 		call _ZN7Hd4478010cursorHomeEv
 387               	.LVL24:
 107:main.cpp      ****             printf(" %02u/%02u/%04u %03u \n", monthDay, month, year, weekDay);
 388               		.loc 2 107 13 is_stmt 1 view .LVU91
 107:main.cpp      ****             printf(" %02u/%02u/%04u %03u \n", monthDay, month, year, weekDay);
 389               		.loc 2 107 22 is_stmt 0 view .LVU92
 390 01ce CE01      		movw r24,r28
 391 01d0 0196      		adiw r24,1
 392 01d2 0E94 0000 		call _ZN7Hd447805stdioEv
 393               	.LVL25:
 108:main.cpp      ****             printf("    %02u:%02u:%02u    \n", hour, minute, second);
 394               		.loc 2 108 13 is_stmt 1 view .LVU93
 108:main.cpp      ****             printf("    %02u:%02u:%02u    \n", hour, minute, second);
 395               		.loc 2 108 19 is_stmt 0 view .LVU94
 396 01d6 888D      		ldd r24,Y+24
 397 01d8 1F92      		push __zero_reg__
 398 01da 8F93      		push r24
 399 01dc 8A8D      		ldd r24,Y+26
 400 01de 8F93      		push r24
 401 01e0 898D      		ldd r24,Y+25
 402 01e2 8F93      		push r24
 403 01e4 8F89      		ldd r24,Y+23
 404 01e6 1F92      		push __zero_reg__
 405 01e8 8F93      		push r24
 406 01ea 8E89      		ldd r24,Y+22
 407 01ec 1F92      		push __zero_reg__
 408 01ee 8F93      		push r24
 409 01f0 80E0      		ldi r24,lo8(.LC2)
 410 01f2 90E0      		ldi r25,hi8(.LC2)
 411 01f4 9F93      		push r25
 412 01f6 8F93      		push r24
 413 01f8 0E94 0000 		call printf
 414               	.LVL26:
 109:main.cpp      ****             //Clear system flag
 415               		.loc 2 109 13 is_stmt 1 view .LVU95
 109:main.cpp      ****             //Clear system flag
 416               		.loc 2 109 19 is_stmt 0 view .LVU96
 417 01fc 8D89      		ldd r24,Y+21
 418 01fe 1F92      		push __zero_reg__
 419 0200 8F93      		push r24
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 32


 420 0202 8C89      		ldd r24,Y+20
 421 0204 1F92      		push __zero_reg__
 422 0206 8F93      		push r24
 423 0208 8B89      		ldd r24,Y+19
 424 020a 1F92      		push __zero_reg__
 425 020c 8F93      		push r24
 426 020e 80E0      		ldi r24,lo8(.LC3)
 427 0210 90E0      		ldi r25,hi8(.LC3)
 428 0212 9F93      		push r25
 429 0214 8F93      		push r24
 430 0216 0E94 0000 		call printf
 431               	.LVL27:
 111:main.cpp      ****         }
 432               		.loc 2 111 13 is_stmt 1 view .LVU97
 111:main.cpp      ****         }
 433               		.loc 2 111 39 is_stmt 0 view .LVU98
 434 021a 8091 0000 		lds r24,systemFlags
 435 021e 8E7F      		andi r24,lo8(~(1<<0))
 436 0220 8093 0000 		sts systemFlags,r24
 437 0224 0FB6      		in __tmp_reg__,__SREG__
 438 0226 F894      		cli
 439 0228 DEBF      		out __SP_H__,r29
 440 022a 0FBE      		out __SREG__,__tmp_reg__
 441 022c CDBF      		out __SP_L__,r28
 442 022e 00C0      		rjmp .L4
 443               		.cfi_endproc
 444               	.LFE52:
 446               		.section	.text._Z21int0InterruptCallbackv,"ax",@progbits
 447               	.global	_Z21int0InterruptCallbackv
 449               	_Z21int0InterruptCallbackv:
 450               	.LFB53:
 122:main.cpp      ****         }
 123:main.cpp      **** 
 124:main.cpp      **** 
 125:main.cpp      ****     }
 126:main.cpp      ****     return 0;
 127:main.cpp      **** }
 128:main.cpp      **** 
 129:main.cpp      **** 
 130:main.cpp      **** void int0InterruptCallback()
 131:main.cpp      **** {
 451               		.loc 2 131 1 is_stmt 1 view -0
 452               		.cfi_startproc
 453               	/* prologue: function */
 454               	/* frame size = 0 */
 455               	/* stack size = 0 */
 456               	.L__stack_usage = 0
 132:main.cpp      ****     systemFlags.readRtc = true;
 457               		.loc 2 132 5 view .LVU100
 458               		.loc 2 132 25 is_stmt 0 view .LVU101
 459 0000 8091 0000 		lds r24,systemFlags
 460 0004 8260      		ori r24,lo8(1<<1)
 461 0006 8093 0000 		sts systemFlags,r24
 462               	/* epilogue start */
 133:main.cpp      **** }
 463               		.loc 2 133 1 view .LVU102
 464 000a 0895      		ret
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 33


 465               		.cfi_endproc
 466               	.LFE53:
 468               	.global	systemFlags
 469               		.section	.bss.systemFlags,"aw",@nobits
 472               	systemFlags:
 473 0000 00        		.zero	1
 474               		.text
 475               	.Letext0:
 476               		.file 5 "e:\\vscode-avr-win\\toolchains\\avr-gcc\\avr\\include\\stdint.h"
 477               		.file 6 "funsape/device/hd44780.hpp"
 478               		.file 7 "funsape/peripheral/twi.hpp"
 479               		.file 8 "funsape/device/../util/dateTime.hpp"
 480               		.file 9 "funsape/device/ds1307.hpp"
 481               		.file 10 "e:\\vscode-avr-win\\toolchains\\avr-gcc\\avr\\include\\math.h"
 482               		.file 11 "e:\\vscode-avr-win\\toolchains\\avr-gcc\\avr\\include\\stdio.h"
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 main.cpp
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:2      *ABS*:0000003e __SP_H__
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:3      *ABS*:0000003d __SP_L__
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:4      *ABS*:0000003f __SREG__
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:5      *ABS*:00000000 __tmp_reg__
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:6      *ABS*:00000001 __zero_reg__
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:14     .text._Z7getTickv:00000000 _Z7getTickv
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:17     .text._Z7getTickv:00000000 .Loc.0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:18     .text._Z7getTickv:00000000 L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:23     .text._Z7getTickv:00000000 .Loc.1
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:24     .text._Z7getTickv:00000000 .Loc.2
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:30     .text._Z7getTickv:00000008 L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:45     .text.main:00000000 main
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:48     .text.main:00000000 .Loc.3
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:49     .text.main:00000000 L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:64     .text.main:00000010 .Loc.4
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:65     .text.main:00000010 .Loc.5
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:70     .text.main:00000018 .Loc.6
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:71     .text.main:00000018 .Loc.7
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:72     .text.main:00000018 .Loc.8
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:73     .text.main:00000018 .Loc.9
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:78     .text.main:00000020 .Loc.10
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:79     .text.main:00000020 .Loc.11
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:83     .text.main:00000026 .Loc.12
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:87     .text.main:0000002c .Loc.13
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:88     .text.main:0000002c .Loc.14
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:98     .text.main:0000003e .Loc.15
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:99     .text.main:0000003e .Loc.16
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:107    .text.main:0000004c .Loc.17
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:108    .text.main:0000004c .Loc.18
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:116    .text.main:0000005a .Loc.19
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:117    .text.main:0000005a .Loc.20
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:124    .text.main:00000066 .Loc.21
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:125    .text.main:00000066 .Loc.22
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:130    .text.main:0000006e .Loc.23
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:131    .text.main:0000006e .Loc.24
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:136    .text.main:00000076 .Loc.25
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:137    .text.main:00000076 .Loc.26
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:142    .text.main:0000007e .Loc.27
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:146    .text.main:0000007e .Loc.28
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:148    .text.main:0000007e .Loc.29
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:149    .text.main:0000007e .Loc.30
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:150    .text.main:0000007e .Loc.31
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:151    .text.main:0000007e .Loc.32
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:152    .text.main:0000007e .Loc.33
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:153    .text.main:0000007e .Loc.34
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:154    .text.main:0000007e .Loc.35
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:162    .text.main:0000008e L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:165    .text.main:00000090 .Loc.36
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:168    .text.main:00000090 .Loc.37
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:169    .text.main:00000090 .Loc.38
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:174    .text.main:00000098 .Loc.39
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:175    .text.main:00000098 .Loc.40
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:472    .bss.systemFlags:00000000 systemFlags
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:179    .text.main:000000a2 .Loc.41
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:180    .text.main:000000a2 .Loc.42
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 35


C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:186    .text.main:000000ac .Loc.43
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:190    .text.main:000000ac .Loc.44
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:192    .text.main:000000ac .Loc.45
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:196    .text.main:000000b2 .Loc.46
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:199    .text.main:000000b2 .Loc.47
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:203    .text.main:000000b8 .Loc.48
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:208    .text.main:000000ba .Loc.49
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:209    .text.main:000000ba .Loc.50
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:220    .text.main:000000cc .Loc.51
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:221    .text.main:000000cc .Loc.52
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:228    .text.main:000000d8 .Loc.53
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:229    .text.main:000000d8 .Loc.54
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:239    .text.main:000000ea .Loc.55
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:240    .text.main:000000ea .Loc.56
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:242    .text.main:000000ec .Loc.57
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:244    .text.main:000000f0 L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:247    .text.main:000000f2 .Loc.58
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:248    .text.main:000000f2 .Loc.59
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:257    .text.main:00000102 .Loc.60
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:258    .text.main:00000102 .Loc.61
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:268    .text.main:00000114 .Loc.62
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:269    .text.main:00000114 .Loc.63
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:276    .text.main:00000120 .Loc.64
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:277    .text.main:00000120 .Loc.65
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:283    .text.main:00000128 .Loc.66
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:284    .text.main:00000128 .Loc.67
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:285    .text.main:00000128 .Loc.68
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:287    .text.main:0000012c .Loc.69
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:291    .text.main:00000130 .Loc.70
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:292    .text.main:00000130 .Loc.71
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:294    .text.main:00000134 .Loc.72
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:297    .text.main:00000138 .Loc.73
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:298    .text.main:00000138 .Loc.74
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:315    .text.main:00000158 .Loc.75
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:316    .text.main:00000158 .Loc.76
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:333    .text.main:00000178 .Loc.77
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:334    .text.main:00000178 .Loc.78
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:338    .text.main:00000182 .Loc.79
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:339    .text.main:00000182 .Loc.80
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:345    .text.main:0000018e .Loc.81
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:346    .text.main:0000018e .Loc.82
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:355    .text.main:0000019e .Loc.83
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:356    .text.main:0000019e .Loc.84
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:365    .text.main:000001ae .Loc.85
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:366    .text.main:000001ae .Loc.86
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:369    .text.main:000001b2 .Loc.87
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:370    .text.main:000001b2 .Loc.88
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:382    .text.main:000001c6 .Loc.89
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:383    .text.main:000001c6 .Loc.90
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:388    .text.main:000001ce .Loc.91
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:389    .text.main:000001ce .Loc.92
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:394    .text.main:000001d6 .Loc.93
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:395    .text.main:000001d6 .Loc.94
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:415    .text.main:000001fc .Loc.95
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:416    .text.main:000001fc .Loc.96
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:432    .text.main:0000021a .Loc.97
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:433    .text.main:0000021a .Loc.98
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 36


C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:443    .text.main:00000230 L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:449    .text._Z21int0InterruptCallbackv:00000000 _Z21int0InterruptCallbackv
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:451    .text._Z21int0InterruptCallbackv:00000000 .Loc.99
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:452    .text._Z21int0InterruptCallbackv:00000000 L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:457    .text._Z21int0InterruptCallbackv:00000000 .Loc.100
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:458    .text._Z21int0InterruptCallbackv:00000000 .Loc.101
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:463    .text._Z21int0InterruptCallbackv:0000000a .Loc.102
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:465    .text._Z21int0InterruptCallbackv:0000000c L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:33     .text._Z7getTickv:00000008 L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:446    .text.main:00000230 L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:469    .text._Z21int0InterruptCallbackv:0000000c L0
                     .debug_frame:00000000 L0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:158    .text.main:00000084 .L11
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:344    .text.main:0000018e .L7
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:381    .text.main:000001c6 .L8
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:282    .text.main:00000128 .L5
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:246    .text.main:000000f2 .L3
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:290    .text.main:00000130 .L4
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:3663   .debug_abbrev:00000000 .Ldebug_abbrev0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:4736   .debug_rnglists:0000000c .LLRL3
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:4749   .debug_line:00000000 .Ldebug_line0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:450    .text._Z21int0InterruptCallbackv:00000000 .LFB53
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:466    .text._Z21int0InterruptCallbackv:0000000c .LFE53
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:46     .text.main:00000000 .LFB52
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:444    .text.main:00000230 .LFE52
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:144    .text.main:0000007e .LBI6
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:143    .text.main:0000007e .LBB6
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:167    .text.main:00000090 .LBE6
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:4678   .debug_loclists:0000000e .LLST0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:4675   .debug_loclists:0000000c .LVUS0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:4690   .debug_loclists:0000001e .LLST1
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:4687   .debug_loclists:0000001c .LVUS1
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:4702   .debug_loclists:0000002e .LLST2
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:4699   .debug_loclists:0000002c .LVUS2
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:188    .text.main:000000ac .LBI8
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:187    .text.main:000000ac .LBB8
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:198    .text.main:000000b2 .LBE8
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:69     .text.main:00000018 .LVL0
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:77     .text.main:00000020 .LVL1
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:97     .text.main:0000003e .LVL2
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:106    .text.main:0000004c .LVL3
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:115    .text.main:0000005a .LVL4
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:123    .text.main:00000066 .LVL5
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:129    .text.main:0000006e .LVL6
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:135    .text.main:00000076 .LVL7
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:141    .text.main:0000007e .LVL8
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:173    .text.main:00000098 .LVL10
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:185    .text.main:000000ac .LVL11
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:219    .text.main:000000cc .LVL12
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:227    .text.main:000000d8 .LVL13
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:238    .text.main:000000ea .LVL14
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:256    .text.main:00000102 .LVL15
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:267    .text.main:00000114 .LVL16
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:275    .text.main:00000120 .LVL17
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:281    .text.main:00000128 .LVL18
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:314    .text.main:00000158 .LVL19
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:332    .text.main:00000178 .LVL20
GAS LISTING C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s 			page 37


C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:354    .text.main:0000019e .LVL21
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:364    .text.main:000001ae .LVL22
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:379    .text.main:000001c4 .LVL23
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:387    .text.main:000001ce .LVL24
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:393    .text.main:000001d6 .LVL25
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:414    .text.main:000001fc .LVL26
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:431    .text.main:0000021a .LVL27
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:15     .text._Z7getTickv:00000000 .LFB32
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:31     .text._Z7getTickv:00000008 .LFE32
C:\Users\fabio\AppData\Local\Temp\ccf5DX72.s:484    .debug_info:00000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN7Hd44780C1Ev
_ZN6Ds1307C1Ev
_ZN7Hd4478014controlPortSetEPVhhhh
_ZN7Hd4478011dataPortSetEPVhh
_ZN7Hd447804initENS_4SizeENS_4FontEbb
_ZN7Hd4478015displayStateSetENS_12DisplayStateE
_ZN7Hd447805stdioEv
puts
_ZN7Hd4478011clearScreenEv
int0
_ZN4Int04initENS_9SenseModeE
twi
_ZN3Twi4initEmh
_ZN6Ds13074initEP3Bus
_ZN6Ds130710getRamDataEhPhh
_ZN6Ds13077setDateEjhh
_ZN6Ds13077setTimeEhhhN8DateTime10TimeFormatENS0_8AmPmFlagE
_ZN6Ds130722setSquareWaveGeneratorENS_10SquareWaveE
_ZN6Ds130710clockStartEv
_ZN6Ds13077getDateEPjPhS1_S1_
_ZN6Ds13077getTimeEPhS0_S0_N8DateTime10TimeFormatEPNS1_8AmPmFlagE
_ZN6Ds130710setRamDataEhPhh
_ZN7Hd4478010cursorHomeEv
printf
__do_copy_data
__do_clear_bss
